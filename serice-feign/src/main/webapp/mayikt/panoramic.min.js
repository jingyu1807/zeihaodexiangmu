var THREE={REVISION:"77"};if(typeof define==="function"&&define.amd){define("three",THREE)}else if("undefined"!==typeof exports&&"undefined"!==typeof module){module.exports=THREE}var fullScreen=false;if(Number.EPSILON===undefined){Number.EPSILON=Math.pow(2,-52)}if(Math.sign===undefined){Math.sign=function(e){return e<0?-1:e>0?1:+e}}if(Function.prototype.name===undefined){Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}})}if(Object.assign===undefined){(function(){Object.assign=function(e){"use strict";if(e===undefined||e===null){throw new TypeError("Cannot convert undefined or null to object")}var t=Object(e);for(var r=1;r<arguments.length;r++){var n=arguments[r];if(n!==undefined&&n!==null){for(var i in n){if(Object.prototype.hasOwnProperty.call(n,i)){t[i]=n[i]}}}}return t}})()}Object.assign(THREE,{MOUSE:{LEFT:0,MIDDLE:1,RIGHT:2},CullFaceNone:0,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,FrontFaceDirectionCW:0,FrontFaceDirectionCCW:1,BasicShadowMap:0,PCFShadowMap:1,PCFSoftShadowMap:2,FrontSide:0,BackSide:1,DoubleSide:2,FlatShading:1,SmoothShading:2,NoColors:0,FaceColors:1,VertexColors:2,NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5,AddEquation:100,SubtractEquation:101,ReverseSubtractEquation:102,MinEquation:103,MaxEquation:104,ZeroFactor:200,OneFactor:201,SrcColorFactor:202,OneMinusSrcColorFactor:203,SrcAlphaFactor:204,OneMinusSrcAlphaFactor:205,DstAlphaFactor:206,OneMinusDstAlphaFactor:207,DstColorFactor:208,OneMinusDstColorFactor:209,SrcAlphaSaturateFactor:210,NeverDepth:0,AlwaysDepth:1,LessDepth:2,LessEqualDepth:3,EqualDepth:4,GreaterEqualDepth:5,GreaterDepth:6,NotEqualDepth:7,MultiplyOperation:0,MixOperation:1,AddOperation:2,NoToneMapping:0,LinearToneMapping:1,ReinhardToneMapping:2,Uncharted2ToneMapping:3,CineonToneMapping:4,UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307,RepeatWrapping:1e3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002,NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008,UnsignedByteType:1009,ByteType:1010,ShortType:1011,UnsignedShortType:1012,IntType:1013,UnsignedIntType:1014,FloatType:1015,HalfFloatType:1025,UnsignedShort4444Type:1016,UnsignedShort5551Type:1017,UnsignedShort565Type:1018,AlphaFormat:1019,RGBFormat:1020,RGBAFormat:1021,LuminanceFormat:1022,LuminanceAlphaFormat:1023,RGBEFormat:THREE.RGBAFormat,DepthFormat:1026,RGB_S3TC_DXT1_Format:2001,RGBA_S3TC_DXT1_Format:2002,RGBA_S3TC_DXT3_Format:2003,RGBA_S3TC_DXT5_Format:2004,RGB_PVRTC_4BPPV1_Format:2100,RGB_PVRTC_2BPPV1_Format:2101,RGBA_PVRTC_4BPPV1_Format:2102,RGBA_PVRTC_2BPPV1_Format:2103,RGB_ETC1_Format:2151,LoopOnce:2200,LoopRepeat:2201,LoopPingPong:2202,InterpolateDiscrete:2300,InterpolateLinear:2301,InterpolateSmooth:2302,ZeroCurvatureEnding:2400,ZeroSlopeEnding:2401,WrapAroundEnding:2402,TrianglesDrawMode:0,TriangleStripDrawMode:1,TriangleFanDrawMode:2,LinearEncoding:3e3,sRGBEncoding:3001,GammaEncoding:3007,RGBEEncoding:3002,LogLuvEncoding:3003,RGBM7Encoding:3004,RGBM16Encoding:3005,RGBDEncoding:3006,BasicDepthPacking:3200,RGBADepthPacking:3201});THREE.Color=function(e,t,r){if(t===undefined&&r===undefined){return this.set(e)}return this.setRGB(e,t,r)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){if(e instanceof THREE.Color){this.copy(e)}else if(typeof e==="number"){this.setHex(e)}else if(typeof e==="string"){this.setStyle(e)}return this},setScalar:function(e){this.r=e;this.g=e;this.b=e},setHex:function(e){e=Math.floor(e);this.r=(e>>16&255)/255;this.g=(e>>8&255)/255;this.b=(e&255)/255;return this},setRGB:function(e,t,r){this.r=e;this.g=t;this.b=r;return this},setHSL:function(){function e(e,t,r){if(r<0)r+=1;if(r>1)r-=1;if(r<1/6)return e+(t-e)*6*r;if(r<1/2)return t;if(r<2/3)return e+(t-e)*6*(2/3-r);return e}return function(t,r,n){t=THREE.Math.euclideanModulo(t,1);r=THREE.Math.clamp(r,0,1);n=THREE.Math.clamp(n,0,1);if(r===0){this.r=this.g=this.b=n}else{var i=n<=.5?n*(1+r):n+r-n*r;var a=2*n-i;this.r=e(a,i,t+1/3);this.g=e(a,i,t);this.b=e(a,i,t-1/3)}return this}}(),setStyle:function(e){function t(t){if(t===undefined)return;if(parseFloat(t)<1){console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}}var r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var n;var i=r[1];var a=r[2];switch(i){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){this.r=Math.min(255,parseInt(n[1],10))/255;this.g=Math.min(255,parseInt(n[2],10))/255;this.b=Math.min(255,parseInt(n[3],10))/255;t(n[5]);return this}if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){this.r=Math.min(100,parseInt(n[1],10))/100;this.g=Math.min(100,parseInt(n[2],10))/100;this.b=Math.min(100,parseInt(n[3],10))/100;t(n[5]);return this}break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(n[1])/360;var s=parseInt(n[2],10)/100;var c=parseInt(n[3],10)/100;t(n[5]);return this.setHSL(o,s,c)}break}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(e)){var u=r[1];var l=u.length;if(l===3){this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255;this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255;this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255;return this}else if(l===6){this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255;this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255;this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255;return this}}if(e&&e.length>0){var u=THREE.ColorKeywords[e];if(u!==undefined){this.setHex(u)}else{console.warn("THREE.Color: Unknown color "+e)}}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){this.r=e.r;this.g=e.g;this.b=e.b;return this},copyGammaToLinear:function(e,t){if(t===undefined)t=2;this.r=Math.pow(e.r,t);this.g=Math.pow(e.g,t);this.b=Math.pow(e.b,t);return this},copyLinearToGamma:function(e,t){if(t===undefined)t=2;var r=t>0?1/t:1;this.r=Math.pow(e.r,r);this.g=Math.pow(e.g,r);this.b=Math.pow(e.b,r);return this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;this.r=e*e;this.g=t*t;this.b=r*r;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t=e||{h:0,s:0,l:0};var r=this.r,n=this.g,i=this.b;var a=Math.max(r,n,i);var o=Math.min(r,n,i);var s,c;var u=(o+a)/2;if(o===a){s=0;c=0}else{var l=a-o;c=u<=.5?l/(a+o):l/(2-a-o);switch(a){case r:s=(n-i)/l+(n<i?6:0);break;case n:s=(i-r)/l+2;break;case i:s=(r-n)/l+4;break}s/=6}t.h=s;t.s=c;t.l=u;return t},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(e,t,r){var n=this.getHSL();n.h+=e;n.s+=t;n.l+=r;this.setHSL(n.h,n.s,n.l);return this},add:function(e){this.r+=e.r;this.g+=e.g;this.b+=e.b;return this},addColors:function(e,t){this.r=e.r+t.r;this.g=e.g+t.g;this.b=e.b+t.b;return this},addScalar:function(e){this.r+=e;this.g+=e;this.b+=e;return this},multiply:function(e){this.r*=e.r;this.g*=e.g;this.b*=e.b;return this},multiplyScalar:function(e){this.r*=e;this.g*=e;this.b*=e;return this},lerp:function(e,t){this.r+=(e.r-this.r)*t;this.g+=(e.g-this.g)*t;this.b+=(e.b-this.b)*t;return this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){if(t===undefined)t=0;this.r=e[t];this.g=e[t+1];this.b=e[t+2];return this},toArray:function(e,t){if(e===undefined)e=[];if(t===undefined)t=0;e[t]=this.r;e[t+1]=this.g;e[t+2]=this.b;return e}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(e,t,r,n){this._x=e||0;this._y=t||0;this._z=r||0;this._w=n!==undefined?n:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(e){this._x=e;this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e;this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e;this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e;this.onChangeCallback()},set:function(e,t,r,n){this._x=e;this._y=t;this._z=r;this._w=n;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){this._x=e.x;this._y=e.y;this._z=e.z;this._w=e.w;this.onChangeCallback();return this},setFromEuler:function(e,t){if(e instanceof THREE.Euler===false){throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}var r=Math.cos(e._x/2);var n=Math.cos(e._y/2);var i=Math.cos(e._z/2);var a=Math.sin(e._x/2);var o=Math.sin(e._y/2);var s=Math.sin(e._z/2);var c=e.order;if(c==="XYZ"){this._x=a*n*i+r*o*s;this._y=r*o*i-a*n*s;this._z=r*n*s+a*o*i;this._w=r*n*i-a*o*s}else if(c==="YXZ"){this._x=a*n*i+r*o*s;this._y=r*o*i-a*n*s;this._z=r*n*s-a*o*i;this._w=r*n*i+a*o*s}else if(c==="ZXY"){this._x=a*n*i-r*o*s;this._y=r*o*i+a*n*s;this._z=r*n*s+a*o*i;this._w=r*n*i-a*o*s}else if(c==="ZYX"){this._x=a*n*i-r*o*s;this._y=r*o*i+a*n*s;this._z=r*n*s-a*o*i;this._w=r*n*i+a*o*s}else if(c==="YZX"){this._x=a*n*i+r*o*s;this._y=r*o*i+a*n*s;this._z=r*n*s-a*o*i;this._w=r*n*i-a*o*s}else if(c==="XZY"){this._x=a*n*i-r*o*s;this._y=r*o*i-a*n*s;this._z=r*n*s+a*o*i;this._w=r*n*i+a*o*s}if(t!==false)this.onChangeCallback();return this},setFromAxisAngle:function(e,t){var r=t/2,n=Math.sin(r);this._x=e.x*n;this._y=e.y*n;this._z=e.z*n;this._w=Math.cos(r);this.onChangeCallback();return this},setFromRotationMatrix:function(e){var t=e.elements,r=t[0],n=t[4],i=t[8],a=t[1],o=t[5],s=t[9],c=t[2],u=t[6],l=t[10],h=r+o+l,f;if(h>0){f=.5/Math.sqrt(h+1);this._w=.25/f;this._x=(u-s)*f;this._y=(i-c)*f;this._z=(a-n)*f}else if(r>o&&r>l){f=2*Math.sqrt(1+r-o-l);this._w=(u-s)/f;this._x=.25*f;this._y=(n+a)/f;this._z=(i+c)/f}else if(o>l){f=2*Math.sqrt(1+o-r-l);this._w=(i-c)/f;this._x=(n+a)/f;this._y=.25*f;this._z=(s+u)/f}else{f=2*Math.sqrt(1+l-r-o);this._w=(a-n)/f;this._x=(i+c)/f;this._y=(s+u)/f;this._z=.25*f}this.onChangeCallback();return this},setFromUnitVectors:function(){var e,t;var r=1e-6;return function(n,i){if(e===undefined)e=new THREE.Vector3;t=n.dot(i)+1;if(t<r){t=0;if(Math.abs(n.x)>Math.abs(n.z)){e.set(-n.y,n.x,0)}else{e.set(0,-n.z,n.y)}}else{e.crossVectors(n,i)}this._x=e.x;this._y=e.y;this._z=e.z;this._w=t;return this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();if(e===0){this._x=0;this._y=0;this._z=0;this._w=1}else{e=1/e;this._x=this._x*e;this._y=this._y*e;this._z=this._z*e;this._w=this._w*e}this.onChangeCallback();return this},multiply:function(e,t){if(t!==undefined){console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");return this.multiplyQuaternions(e,t)}return this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var r=e._x,n=e._y,i=e._z,a=e._w;var o=t._x,s=t._y,c=t._z,u=t._w;this._x=r*u+a*o+n*c-i*s;this._y=n*u+a*s+i*o-r*c;this._z=i*u+a*c+r*s-n*o;this._w=a*u-r*o-n*s-i*c;this.onChangeCallback();return this},slerp:function(e,t){if(t===0)return this;if(t===1)return this.copy(e);var r=this._x,n=this._y,i=this._z,a=this._w;var o=a*e._w+r*e._x+n*e._y+i*e._z;if(o<0){this._w=-e._w;this._x=-e._x;this._y=-e._y;this._z=-e._z;o=-o}else{this.copy(e)}if(o>=1){this._w=a;this._x=r;this._y=n;this._z=i;return this}var s=Math.sqrt(1-o*o);if(Math.abs(s)<.001){this._w=.5*(a+this._w);this._x=.5*(r+this._x);this._y=.5*(n+this._y);this._z=.5*(i+this._z);return this}var c=Math.atan2(s,o);var u=Math.sin((1-t)*c)/s,l=Math.sin(t*c)/s;this._w=a*u+this._w*l;this._x=r*u+this._x*l;this._y=n*u+this._y*l;this._z=i*u+this._z*l;this.onChangeCallback();return this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){if(t===undefined)t=0;this._x=e[t];this._y=e[t+1];this._z=e[t+2];this._w=e[t+3];this.onChangeCallback();return this},toArray:function(e,t){if(e===undefined)e=[];if(t===undefined)t=0;e[t]=this._x;e[t+1]=this._y;e[t+2]=this._z;e[t+3]=this._w;return e},onChange:function(e){this.onChangeCallback=e;return this},onChangeCallback:function(){}};Object.assign(THREE.Quaternion,{slerp:function(e,t,r,n){return r.copy(e).slerp(t,n)},slerpFlat:function(e,t,r,n,i,a,o){var s=r[n+0],c=r[n+1],u=r[n+2],l=r[n+3],h=i[a+0],f=i[a+1],d=i[a+2],p=i[a+3];if(l!==p||s!==h||c!==f||u!==d){var E=1-o,m=s*h+c*f+u*d+l*p,v=m>=0?1:-1,g=1-m*m;if(g>Number.EPSILON){var T=Math.sqrt(g),y=Math.atan2(T,m*v);E=Math.sin(E*y)/T;o=Math.sin(o*y)/T}var R=o*v;s=s*E+h*R;c=c*E+f*R;u=u*E+d*R;l=l*E+p*R;if(E===1-o){var x=1/Math.sqrt(s*s+c*c+u*u+l*l);s*=x;c*=x;u*=x;l*=x}}e[t]=s;e[t+1]=c;e[t+2]=u;e[t+3]=l}});THREE.Vector2=function(e,t){this.x=e||0;this.y=t||0};THREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(e){this.x=e},get height(){return this.y},set height(e){this.y=e},set:function(e,t){this.x=e;this.y=t;return this},setScalar:function(e){this.x=e;this.y=e;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){this.x=e.x;this.y=e.y;return this},add:function(e,t){if(t!==undefined){console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;return this},addScalar:function(e){this.x+=e;this.y+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;return this},addScaledVector:function(e,t){this.x+=e.x*t;this.y+=e.y*t;return this},sub:function(e,t){if(t!==undefined){console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;return this},subScalar:function(e){this.x-=e;this.y-=e;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;return this},multiply:function(e){this.x*=e.x;this.y*=e.y;return this},multiplyScalar:function(e){if(isFinite(e)){this.x*=e;this.y*=e}else{this.x=0;this.y=0}return this},divide:function(e){this.x/=e.x;this.y/=e.y;return this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);return this},max:function(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);return this},clamp:function(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));return this},clampScalar:function(){var e,t;return function r(n,i){if(e===undefined){e=new THREE.Vector2;t=new THREE.Vector2}e.set(n,n);t.set(i,i);return this.clamp(e,t)}}(),clampLength:function(e,t){var r=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,r))/r)},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var e=Math.atan2(this.y,this.x);if(e<0)e+=2*Math.PI;return e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;return this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){if(t===undefined)t=0;this.x=e[t];this.y=e[t+1];return this},toArray:function(e,t){if(e===undefined)e=[];if(t===undefined)t=0;e[t]=this.x;e[t+1]=this.y;return e},fromAttribute:function(e,t,r){if(r===undefined)r=0;t=t*e.itemSize+r;this.x=e.array[t];this.y=e.array[t+1];return this},rotateAround:function(e,t){var r=Math.cos(t),n=Math.sin(t);var i=this.x-e.x;var a=this.y-e.y;this.x=i*r-a*n+e.x;this.y=i*n+a*r+e.y;return this}};THREE.Vector3=function(e,t,r){this.x=e||0;this.y=t||0;this.z=r||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){this.x=e;this.y=t;this.z=r;return this},setScalar:function(e){this.x=e;this.y=e;this.z=e;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;return this},add:function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;this.z+=e.z;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;return this},addScaledVector:function(e,t){this.x+=e.x*t;this.y+=e.y*t;this.z+=e.z*t;return this},sub:function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;this.z-=e.z;return this},subScalar:function(e){this.x-=e;this.y-=e;this.z-=e;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;return this},multiply:function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(e,t)}this.x*=e.x;this.y*=e.y;this.z*=e.z;return this},multiplyScalar:function(e){if(isFinite(e)){this.x*=e;this.y*=e;this.z*=e}else{this.x=0;this.y=0;this.z=0}return this},multiplyVectors:function(e,t){this.x=e.x*t.x;this.y=e.y*t.y;this.z=e.z*t.z;return this},applyEuler:function(){var e;return function t(r){if(r instanceof THREE.Euler===false){console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.")}if(e===undefined)e=new THREE.Quaternion;return this.applyQuaternion(e.setFromEuler(r))}}(),applyAxisAngle:function(){var e;return function t(r,n){if(e===undefined)e=new THREE.Quaternion;return this.applyQuaternion(e.setFromAxisAngle(r,n))}}(),applyMatrix3:function(e){var t=this.x,r=this.y,n=this.z;var i=e.elements;this.x=i[0]*t+i[3]*r+i[6]*n;this.y=i[1]*t+i[4]*r+i[7]*n;this.z=i[2]*t+i[5]*r+i[8]*n;return this},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z;var i=e.elements;this.x=i[0]*t+i[4]*r+i[8]*n+i[12];this.y=i[1]*t+i[5]*r+i[9]*n+i[13];this.z=i[2]*t+i[6]*r+i[10]*n+i[14];return this},applyProjection:function(e){var t=this.x,r=this.y,n=this.z;var i=e.elements;var a=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*a;this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*a;this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*a;return this},applyQuaternion:function(e){var t=this.x,r=this.y,n=this.z;var i=e.x,a=e.y,o=e.z,s=e.w;var c=s*t+a*n-o*r;var u=s*r+o*t-i*n;var l=s*n+i*r-a*t;var h=-i*t-a*r-o*n;this.x=c*s+h*-i+u*-o-l*-a;this.y=u*s+h*-a+l*-i-c*-o;this.z=l*s+h*-o+c*-a-u*-i;return this},project:function(){var e;return function t(r){if(e===undefined)e=new THREE.Matrix4;e.multiplyMatrices(r.projectionMatrix,e.getInverse(r.matrixWorld));return this.applyProjection(e)}}(),unproject:function(){var e;return function t(r){if(e===undefined)e=new THREE.Matrix4;e.multiplyMatrices(r.matrixWorld,e.getInverse(r.projectionMatrix));return this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,r=this.y,n=this.z;var i=e.elements;this.x=i[0]*t+i[4]*r+i[8]*n;this.y=i[1]*t+i[5]*r+i[9]*n;this.z=i[2]*t+i[6]*r+i[10]*n;return this.normalize()},divide:function(e){this.x/=e.x;this.y/=e.y;this.z/=e.z;return this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);this.z=Math.min(this.z,e.z);return this},max:function(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);this.z=Math.max(this.z,e.z);return this},clamp:function(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));this.z=Math.max(e.z,Math.min(t.z,this.z));return this},clampScalar:function(){var e,t;return function r(n,i){if(e===undefined){e=new THREE.Vector3;t=new THREE.Vector3}e.set(n,n,n);t.set(i,i,i);return this.clamp(e,t)}}(),clampLength:function(e,t){var r=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,r))/r)},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;return this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},cross:function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(e,t)}var r=this.x,n=this.y,i=this.z;this.x=n*e.z-i*e.y;this.y=i*e.x-r*e.z;this.z=r*e.y-n*e.x;return this},crossVectors:function(e,t){var r=e.x,n=e.y,i=e.z;var a=t.x,o=t.y,s=t.z;this.x=n*s-i*o;this.y=i*a-r*s;this.z=r*o-n*a;return this},projectOnVector:function(){var e,t;return function r(n){if(e===undefined)e=new THREE.Vector3;e.copy(n).normalize();t=this.dot(e);return this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function t(r){if(e===undefined)e=new THREE.Vector3;e.copy(this).projectOnVector(r);return this.sub(e)}}(),reflect:function(){var e;return function t(r){if(e===undefined)e=new THREE.Vector3;return this.sub(e.copy(r).multiplyScalar(2*this.dot(r)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;this.x=t*Math.sin(e.theta);this.y=Math.cos(e.phi)*e.radius;this.z=t*Math.cos(e.theta);return this},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length();var r=this.setFromMatrixColumn(e,1).length();var n=this.setFromMatrixColumn(e,2).length();this.x=t;this.y=r;this.z=n;return this},setFromMatrixColumn:function(e,t){if(typeof e==="number"){console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).");var r=e;e=t;t=r}return this.fromArray(e.elements,t*4)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){if(t===undefined)t=0;this.x=e[t];this.y=e[t+1];this.z=e[t+2];return this},toArray:function(e,t){if(e===undefined)e=[];if(t===undefined)t=0;e[t]=this.x;e[t+1]=this.y;e[t+2]=this.z;return e},fromAttribute:function(e,t,r){if(r===undefined)r=0;t=t*e.itemSize+r;this.x=e.array[t];this.y=e.array[t+1];this.z=e.array[t+2];return this}};THREE.Vector4=function(e,t,r,n){this.x=e||0;this.y=t||0;this.z=r||0;this.w=n!==undefined?n:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,n){this.x=e;this.y=t;this.z=r;this.w=n;return this},setScalar:function(e){this.x=e;this.y=e;this.z=e;this.w=e;return this},setX:function(e){this.x=e;return this},setY:function(e){this.y=e;return this},setZ:function(e){this.z=e;return this},setW:function(e){this.w=e;return this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){this.x=e.x;this.y=e.y;this.z=e.z;this.w=e.w!==undefined?e.w:1;return this},add:function(e,t){if(t!==undefined){console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;this.z+=e.z;this.w+=e.w;return this},addScalar:function(e){this.x+=e;this.y+=e;this.z+=e;this.w+=e;return this},addVectors:function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;this.w=e.w+t.w;return this},addScaledVector:function(e,t){this.x+=e.x*t;this.y+=e.y*t;this.z+=e.z*t;this.w+=e.w*t;return this},sub:function(e,t){if(t!==undefined){console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;this.z-=e.z;this.w-=e.w;return this},subScalar:function(e){this.x-=e;this.y-=e;this.z-=e;this.w-=e;return this},subVectors:function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;this.w=e.w-t.w;return this},multiplyScalar:function(e){if(isFinite(e)){this.x*=e;this.y*=e;this.z*=e;this.w*=e}else{this.x=0;this.y=0;this.z=0;this.w=0}return this},applyMatrix4:function(e){var t=this.x,r=this.y,n=this.z,i=this.w;var a=e.elements;this.x=a[0]*t+a[4]*r+a[8]*n+a[12]*i;this.y=a[1]*t+a[5]*r+a[9]*n+a[13]*i;this.z=a[2]*t+a[6]*r+a[10]*n+a[14]*i;this.w=a[3]*t+a[7]*r+a[11]*n+a[15]*i;return this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);if(t<1e-4){this.x=1;this.y=0;this.z=0}else{this.x=e.x/t;this.y=e.y/t;this.z=e.z/t}return this},setAxisAngleFromRotationMatrix:function(e){var t,r,n,i,a=.01,o=.1,s=e.elements,c=s[0],u=s[4],l=s[8],h=s[1],f=s[5],d=s[9],p=s[2],E=s[6],m=s[10];if(Math.abs(u-h)<a&&Math.abs(l-p)<a&&Math.abs(d-E)<a){if(Math.abs(u+h)<o&&Math.abs(l+p)<o&&Math.abs(d+E)<o&&Math.abs(c+f+m-3)<o){this.set(1,0,0,0);return this}t=Math.PI;var v=(c+1)/2;var g=(f+1)/2;var T=(m+1)/2;var y=(u+h)/4;var R=(l+p)/4;var x=(d+E)/4;if(v>g&&v>T){if(v<a){r=0;n=.707106781;i=.707106781}else{r=Math.sqrt(v);n=y/r;i=R/r}}else if(g>T){if(g<a){r=.707106781;n=0;i=.707106781}else{n=Math.sqrt(g);r=y/n;i=x/n}}else{if(T<a){r=.707106781;n=.707106781;i=0}else{i=Math.sqrt(T);r=R/i;n=x/i}}this.set(r,n,i,t);return this}var H=Math.sqrt((E-d)*(E-d)+(l-p)*(l-p)+(h-u)*(h-u));if(Math.abs(H)<.001)H=1;this.x=(E-d)/H;this.y=(l-p)/H;this.z=(h-u)/H;this.w=Math.acos((c+f+m-1)/2);return this},min:function(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);this.z=Math.min(this.z,e.z);this.w=Math.min(this.w,e.w);return this},max:function(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);this.z=Math.max(this.z,e.z);this.w=Math.max(this.w,e.w);return this},clamp:function(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));this.z=Math.max(e.z,Math.min(t.z,this.z));this.w=Math.max(e.w,Math.min(t.w,this.w));return this},clampScalar:function(){
var e,t;return function r(n,i){if(e===undefined){e=new THREE.Vector4;t=new THREE.Vector4}e.set(n,n,n,n);t.set(i,i,i,i);return this.clamp(e,t)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;this.w+=(e.w-this.w)*t;return this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){if(t===undefined)t=0;this.x=e[t];this.y=e[t+1];this.z=e[t+2];this.w=e[t+3];return this},toArray:function(e,t){if(e===undefined)e=[];if(t===undefined)t=0;e[t]=this.x;e[t+1]=this.y;e[t+2]=this.z;e[t+3]=this.w;return e},fromAttribute:function(e,t,r){if(r===undefined)r=0;t=t*e.itemSize+r;this.x=e.array[t];this.y=e.array[t+1];this.z=e.array[t+2];this.w=e.array[t+3];return this}};THREE.Euler=function(e,t,r,n){this._x=e||0;this._y=t||0;this._z=r||0;this._order=n||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(e){this._x=e;this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e;this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e;this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e;this.onChangeCallback()},set:function(e,t,r,n){this._x=e;this._y=t;this._z=r;this._order=n||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){this._x=e._x;this._y=e._y;this._z=e._z;this._order=e._order;this.onChangeCallback();return this},setFromRotationMatrix:function(e,t,r){var n=THREE.Math.clamp;var i=e.elements;var a=i[0],o=i[4],s=i[8];var c=i[1],u=i[5],l=i[9];var h=i[2],f=i[6],d=i[10];t=t||this._order;if(t==="XYZ"){this._y=Math.asin(n(s,-1,1));if(Math.abs(s)<.99999){this._x=Math.atan2(-l,d);this._z=Math.atan2(-o,a)}else{this._x=Math.atan2(f,u);this._z=0}}else if(t==="YXZ"){this._x=Math.asin(-n(l,-1,1));if(Math.abs(l)<.99999){this._y=Math.atan2(s,d);this._z=Math.atan2(c,u)}else{this._y=Math.atan2(-h,a);this._z=0}}else if(t==="ZXY"){this._x=Math.asin(n(f,-1,1));if(Math.abs(f)<.99999){this._y=Math.atan2(-h,d);this._z=Math.atan2(-o,u)}else{this._y=0;this._z=Math.atan2(c,a)}}else if(t==="ZYX"){this._y=Math.asin(-n(h,-1,1));if(Math.abs(h)<.99999){this._x=Math.atan2(f,d);this._z=Math.atan2(c,a)}else{this._x=0;this._z=Math.atan2(-o,u)}}else if(t==="YZX"){this._z=Math.asin(n(c,-1,1));if(Math.abs(c)<.99999){this._x=Math.atan2(-l,u);this._y=Math.atan2(-h,a)}else{this._x=0;this._y=Math.atan2(s,d)}}else if(t==="XZY"){this._z=Math.asin(-n(o,-1,1));if(Math.abs(o)<.99999){this._x=Math.atan2(f,u);this._y=Math.atan2(s,a)}else{this._x=Math.atan2(-l,d);this._y=0}}else{console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t)}this._order=t;if(r!==false)this.onChangeCallback();return this},setFromQuaternion:function(){var e;return function(t,r,n){if(e===undefined)e=new THREE.Matrix4;e.makeRotationFromQuaternion(t);return this.setFromRotationMatrix(e,r,n)}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this);return this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){this._x=e[0];this._y=e[1];this._z=e[2];if(e[3]!==undefined)this._order=e[3];this.onChangeCallback();return this},toArray:function(e,t){if(e===undefined)e=[];if(t===undefined)t=0;e[t]=this._x;e[t+1]=this._y;e[t+2]=this._z;e[t+3]=this._order;return e},toVector3:function(e){if(e){return e.set(this._x,this._y,this._z)}else{return new THREE.Vector3(this._x,this._y,this._z)}},onChange:function(e){this.onChangeCallback=e;return this},onChangeCallback:function(){}};THREE.Line3=function(e,t){this.start=e!==undefined?e:new THREE.Vector3;this.end=t!==undefined?t:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){this.start.copy(e);this.end.copy(t);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.start.copy(e.start);this.end.copy(e.end);return this},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new THREE.Vector3;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(r,n){e.subVectors(r,this.start);t.subVectors(this.end,this.start);var i=t.dot(t);var a=t.dot(e);var o=a/i;if(n){o=THREE.Math.clamp(o,0,1)}return o}}(),closestPointToPoint:function(e,t,r){var n=this.closestPointToPointParameter(e,t);var i=r||new THREE.Vector3;return this.delta(i).multiplyScalar(n).add(this.start)},applyMatrix4:function(e){this.start.applyMatrix4(e);this.end.applyMatrix4(e);return this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}};THREE.Box2=function(e,t){this.min=e!==undefined?e:new THREE.Vector2(+Infinity,+Infinity);this.max=t!==undefined?t:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){this.min.copy(e);this.max.copy(t);return this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++){this.expandByPoint(e[t])}return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,r){var n=e.copy(r).multiplyScalar(.5);this.min.copy(t).sub(n);this.max.copy(t).add(n);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.min.copy(e.min);this.max.copy(e.max);return this},makeEmpty:function(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){var t=e||new THREE.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(e){this.min.min(e);this.max.max(e);return this},expandByVector:function(e){this.min.sub(e);this.max.add(e);return this},expandByScalar:function(e){this.min.addScalar(-e);this.max.addScalar(e);return this},containsPoint:function(e){if(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y){return false}return true},containsBox:function(e){if(this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y){return true}return false},getParameter:function(e,t){var r=t||new THREE.Vector2;return r.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){if(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y){return false}return true},clampPoint:function(e,t){var r=t||new THREE.Vector2;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){var r=e.copy(t).clamp(this.min,this.max);return r.sub(t).length()}}(),intersect:function(e){this.min.max(e.min);this.max.min(e.max);return this},union:function(e){this.min.min(e.min);this.max.max(e.max);return this},translate:function(e){this.min.add(e);this.max.add(e);return this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};THREE.Box3=function(e,t){this.min=e!==undefined?e:new THREE.Vector3(+Infinity,+Infinity,+Infinity);this.max=t!==undefined?t:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){this.min.copy(e);this.max.copy(t);return this},setFromArray:function(e){var t=+Infinity;var r=+Infinity;var n=+Infinity;var i=-Infinity;var a=-Infinity;var o=-Infinity;for(var s=0,c=e.length;s<c;s+=3){var u=e[s];var l=e[s+1];var h=e[s+2];if(u<t)t=u;if(l<r)r=l;if(h<n)n=h;if(u>i)i=u;if(l>a)a=l;if(h>o)o=h}this.min.set(t,r,n);this.max.set(i,a,o)},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++){this.expandByPoint(e[t])}return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,r){var n=e.copy(r).multiplyScalar(.5);this.min.copy(t).sub(n);this.max.copy(t).add(n);return this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(t){var r=this;t.updateMatrixWorld(true);this.makeEmpty();t.traverse(function(t){var n=t.geometry;if(n!==undefined){if(n instanceof THREE.Geometry){var i=n.vertices;for(var a=0,o=i.length;a<o;a++){e.copy(i[a]);e.applyMatrix4(t.matrixWorld);r.expandByPoint(e)}}else if(n instanceof THREE.BufferGeometry&&n.attributes["position"]!==undefined){var s=n.attributes["position"].array;for(var a=0,o=s.length;a<o;a+=3){e.fromArray(s,a);e.applyMatrix4(t.matrixWorld);r.expandByPoint(e)}}}});return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.min.copy(e.min);this.max.copy(e.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(e){this.min.min(e);this.max.max(e);return this},expandByVector:function(e){this.min.sub(e);this.max.add(e);return this},expandByScalar:function(e){this.min.addScalar(-e);this.max.addScalar(e);return this},containsPoint:function(e){if(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z){return false}return true},containsBox:function(e){if(this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z){return true}return false},getParameter:function(e,t){var r=t||new THREE.Vector3;return r.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){if(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z){return false}return true},intersectsSphere:function(){var e;return function t(r){if(e===undefined)e=new THREE.Vector3;this.clampPoint(r.center,e);return e.distanceToSquared(r.center)<=r.radius*r.radius}}(),intersectsPlane:function(e){var t,r;if(e.normal.x>0){t=e.normal.x*this.min.x;r=e.normal.x*this.max.x}else{t=e.normal.x*this.max.x;r=e.normal.x*this.min.x}if(e.normal.y>0){t+=e.normal.y*this.min.y;r+=e.normal.y*this.max.y}else{t+=e.normal.y*this.max.y;r+=e.normal.y*this.min.y}if(e.normal.z>0){t+=e.normal.z*this.min.z;r+=e.normal.z*this.max.z}else{t+=e.normal.z*this.max.z;r+=e.normal.z*this.min.z}return t<=e.constant&&r>=e.constant},clampPoint:function(e,t){var r=t||new THREE.Vector3;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.copy(t).clamp(this.min,this.max);return r.sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){var r=t||new THREE.Sphere;r.center=this.center();r.radius=this.size(e).length()*.5;return r}}(),intersect:function(e){this.min.max(e.min);this.max.min(e.max);if(this.isEmpty())this.makeEmpty();return this},union:function(e){this.min.min(e.min);this.max.max(e.max);return this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){if(this.isEmpty())return this;e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t);e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t);e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t);e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t);e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t);e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t);e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t);e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t);this.setFromPoints(e);return this}}(),translate:function(e){this.min.add(e);this.max.add(e);return this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);if(arguments.length>0){console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,n,i,a,o,s,c){var u=this.elements;u[0]=e;u[1]=n;u[2]=o;u[3]=t;u[4]=i;u[5]=s;u[6]=r;u[7]=a;u[8]=c;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=e.elements;this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]);return this},setFromMatrix4:function(e){var t=e.elements;this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]);return this},applyToVector3Array:function(){var e;return function(t,r,n){if(e===undefined)e=new THREE.Vector3;if(r===undefined)r=0;if(n===undefined)n=t.length;for(var i=0,a=r;i<n;i+=3,a+=3){e.fromArray(t,a);e.applyMatrix3(this);e.toArray(t,a)}return t}}(),applyToBuffer:function(){var e;return function t(r,n,i){if(e===undefined)e=new THREE.Vector3;if(n===undefined)n=0;if(i===undefined)i=r.length/r.itemSize;for(var a=0,o=n;a<i;a++,o++){e.x=r.getX(o);e.y=r.getY(o);e.z=r.getZ(o);e.applyMatrix3(this);r.setXYZ(e.x,e.y,e.z)}return r}}(),multiplyScalar:function(e){var t=this.elements;t[0]*=e;t[3]*=e;t[6]*=e;t[1]*=e;t[4]*=e;t[7]*=e;t[2]*=e;t[5]*=e;t[8]*=e;return this},determinant:function(){var e=this.elements;var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],c=e[7],u=e[8];return t*a*u-t*o*c-r*i*u+r*o*s+n*i*c-n*a*s},getInverse:function(e,t){if(e instanceof THREE.Matrix4){console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.")}var r=e.elements,n=this.elements,i=r[0],a=r[1],o=r[2],s=r[3],c=r[4],u=r[5],l=r[6],h=r[7],f=r[8],d=f*c-u*h,p=u*l-f*s,E=h*s-c*l,m=i*d+a*p+o*E;if(m===0){var v="THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t||false){throw new Error(v)}else{console.warn(v)}return this.identity()}var g=1/m;n[0]=d*g;n[1]=(o*h-f*a)*g;n[2]=(u*a-o*c)*g;n[3]=p*g;n[4]=(f*i-o*l)*g;n[5]=(o*s-u*i)*g;n[6]=E*g;n[7]=(a*l-h*i)*g;n[8]=(c*i-a*s)*g;return this},transpose:function(){var e,t=this.elements;e=t[1];t[1]=t[3];t[3]=e;e=t[2];t[2]=t[6];t[6]=e;e=t[5];t[5]=t[7];t[7]=e;return this},flattenToArrayOffset:function(e,t){console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated "+"- just use .toArray instead.");return this.toArray(e,t)},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;e[0]=t[0];e[1]=t[3];e[2]=t[6];e[3]=t[1];e[4]=t[4];e[5]=t[7];e[6]=t[2];e[7]=t[5];e[8]=t[8];return this},fromArray:function(e){this.elements.set(e);return this},toArray:function(e,t){if(e===undefined)e=[];if(t===undefined)t=0;var r=this.elements;e[t]=r[0];e[t+1]=r[1];e[t+2]=r[2];e[t+3]=r[3];e[t+4]=r[4];e[t+5]=r[5];e[t+6]=r[6];e[t+7]=r[7];e[t+8]=r[8];return e}};THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);if(arguments.length>0){console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,n,i,a,o,s,c,u,l,h,f,d,p,E){var m=this.elements;m[0]=e;m[4]=t;m[8]=r;m[12]=n;m[1]=i;m[5]=a;m[9]=o;m[13]=s;m[2]=c;m[6]=u;m[10]=l;m[14]=h;m[3]=f;m[7]=d;m[11]=p;m[15]=E;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(e){this.elements.set(e.elements);return this},copyPosition:function(e){var t=this.elements;var r=e.elements;t[12]=r[12];t[13]=r[13];t[14]=r[14];return this},extractBasis:function(e,t,r){e.setFromMatrixColumn(this,0);t.setFromMatrixColumn(this,1);r.setFromMatrixColumn(this,2);return this},makeBasis:function(e,t,r){this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1);return this},extractRotation:function(){var e;return function(t){if(e===undefined)e=new THREE.Vector3;var r=this.elements;var n=t.elements;var i=1/e.setFromMatrixColumn(t,0).length();var a=1/e.setFromMatrixColumn(t,1).length();var o=1/e.setFromMatrixColumn(t,2).length();r[0]=n[0]*i;r[1]=n[1]*i;r[2]=n[2]*i;r[4]=n[4]*a;r[5]=n[5]*a;r[6]=n[6]*a;r[8]=n[8]*o;r[9]=n[9]*o;r[10]=n[10]*o;return this}}(),makeRotationFromEuler:function(e){if(e instanceof THREE.Euler===false){console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}var t=this.elements;var r=e.x,n=e.y,i=e.z;var a=Math.cos(r),o=Math.sin(r);var s=Math.cos(n),c=Math.sin(n);var u=Math.cos(i),l=Math.sin(i);if(e.order==="XYZ"){var h=a*u,f=a*l,d=o*u,p=o*l;t[0]=s*u;t[4]=-s*l;t[8]=c;t[1]=f+d*c;t[5]=h-p*c;t[9]=-o*s;t[2]=p-h*c;t[6]=d+f*c;t[10]=a*s}else if(e.order==="YXZ"){var E=s*u,m=s*l,v=c*u,g=c*l;t[0]=E+g*o;t[4]=v*o-m;t[8]=a*c;t[1]=a*l;t[5]=a*u;t[9]=-o;t[2]=m*o-v;t[6]=g+E*o;t[10]=a*s}else if(e.order==="ZXY"){var E=s*u,m=s*l,v=c*u,g=c*l;t[0]=E-g*o;t[4]=-a*l;t[8]=v+m*o;t[1]=m+v*o;t[5]=a*u;t[9]=g-E*o;t[2]=-a*c;t[6]=o;t[10]=a*s}else if(e.order==="ZYX"){var h=a*u,f=a*l,d=o*u,p=o*l;t[0]=s*u;t[4]=d*c-f;t[8]=h*c+p;t[1]=s*l;t[5]=p*c+h;t[9]=f*c-d;t[2]=-c;t[6]=o*s;t[10]=a*s}else if(e.order==="YZX"){var T=a*s,y=a*c,R=o*s,x=o*c;t[0]=s*u;t[4]=x-T*l;t[8]=R*l+y;t[1]=l;t[5]=a*u;t[9]=-o*u;t[2]=-c*u;t[6]=y*l+R;t[10]=T-x*l}else if(e.order==="XZY"){var T=a*s,y=a*c,R=o*s,x=o*c;t[0]=s*u;t[4]=-l;t[8]=c*u;t[1]=T*l+x;t[5]=a*u;t[9]=y*l-R;t[2]=R*l-y;t[6]=o*u;t[10]=x*l+T}t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this},makeRotationFromQuaternion:function(e){var t=this.elements;var r=e.x,n=e.y,i=e.z,a=e.w;var o=r+r,s=n+n,c=i+i;var u=r*o,l=r*s,h=r*c;var f=n*s,d=n*c,p=i*c;var E=a*o,m=a*s,v=a*c;t[0]=1-(f+p);t[4]=l-v;t[8]=h+m;t[1]=l+v;t[5]=1-(u+p);t[9]=d-E;t[2]=h-m;t[6]=d+E;t[10]=1-(u+f);t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this},lookAt:function(){var e,t,r;return function(n,i,a){if(e===undefined){e=new THREE.Vector3;t=new THREE.Vector3;r=new THREE.Vector3}var o=this.elements;r.subVectors(n,i).normalize();if(r.lengthSq()===0){r.z=1}e.crossVectors(a,r).normalize();if(e.lengthSq()===0){r.z+=1e-4;e.crossVectors(a,r).normalize()}t.crossVectors(r,e);o[0]=e.x;o[4]=t.x;o[8]=r.x;o[1]=e.y;o[5]=t.y;o[9]=r.y;o[2]=e.z;o[6]=t.z;o[10]=r.z;return this}}(),multiply:function(e,t){if(t!==undefined){console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");return this.multiplyMatrices(e,t)}return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements;var n=t.elements;var i=this.elements;var a=r[0],o=r[4],s=r[8],c=r[12];var u=r[1],l=r[5],h=r[9],f=r[13];var d=r[2],p=r[6],E=r[10],m=r[14];var v=r[3],g=r[7],T=r[11],y=r[15];var R=n[0],x=n[4],H=n[8],b=n[12];var _=n[1],M=n[5],w=n[9],S=n[13];var L=n[2],A=n[6],C=n[10],P=n[14];var I=n[3],B=n[7],D=n[11],U=n[15];i[0]=a*R+o*_+s*L+c*I;i[4]=a*x+o*M+s*A+c*B;i[8]=a*H+o*w+s*C+c*D;i[12]=a*b+o*S+s*P+c*U;i[1]=u*R+l*_+h*L+f*I;i[5]=u*x+l*M+h*A+f*B;i[9]=u*H+l*w+h*C+f*D;i[13]=u*b+l*S+h*P+f*U;i[2]=d*R+p*_+E*L+m*I;i[6]=d*x+p*M+E*A+m*B;i[10]=d*H+p*w+E*C+m*D;i[14]=d*b+p*S+E*P+m*U;i[3]=v*R+g*_+T*L+y*I;i[7]=v*x+g*M+T*A+y*B;i[11]=v*H+g*w+T*C+y*D;i[15]=v*b+g*S+T*P+y*U;return this},multiplyToArray:function(e,t,r){var n=this.elements;this.multiplyMatrices(e,t);r[0]=n[0];r[1]=n[1];r[2]=n[2];r[3]=n[3];r[4]=n[4];r[5]=n[5];r[6]=n[6];r[7]=n[7];r[8]=n[8];r[9]=n[9];r[10]=n[10];r[11]=n[11];r[12]=n[12];r[13]=n[13];r[14]=n[14];r[15]=n[15];return this},multiplyScalar:function(e){var t=this.elements;t[0]*=e;t[4]*=e;t[8]*=e;t[12]*=e;t[1]*=e;t[5]*=e;t[9]*=e;t[13]*=e;t[2]*=e;t[6]*=e;t[10]*=e;t[14]*=e;t[3]*=e;t[7]*=e;t[11]*=e;t[15]*=e;return this},applyToVector3Array:function(){var e;return function(t,r,n){if(e===undefined)e=new THREE.Vector3;if(r===undefined)r=0;if(n===undefined)n=t.length;for(var i=0,a=r;i<n;i+=3,a+=3){e.fromArray(t,a);e.applyMatrix4(this);e.toArray(t,a)}return t}}(),applyToBuffer:function(){var e;return function t(r,n,i){if(e===undefined)e=new THREE.Vector3;if(n===undefined)n=0;if(i===undefined)i=r.length/r.itemSize;for(var a=0,o=n;a<i;a++,o++){e.x=r.getX(o);e.y=r.getY(o);e.z=r.getZ(o);e.applyMatrix4(this);r.setXYZ(e.x,e.y,e.z)}return r}}(),determinant:function(){var e=this.elements;var t=e[0],r=e[4],n=e[8],i=e[12];var a=e[1],o=e[5],s=e[9],c=e[13];var u=e[2],l=e[6],h=e[10],f=e[14];var d=e[3],p=e[7],E=e[11],m=e[15];return d*(+i*s*l-n*c*l-i*o*h+r*c*h+n*o*f-r*s*f)+p*(+t*s*f-t*c*h+i*a*h-n*a*f+n*c*u-i*s*u)+E*(+t*c*l-t*o*f-i*a*l+r*a*f+i*o*u-r*c*u)+m*(-n*o*u-t*s*l+t*o*h+n*a*l-r*a*h+r*s*u)},transpose:function(){var e=this.elements;var t;t=e[1];e[1]=e[4];e[4]=t;t=e[2];e[2]=e[8];e[8]=t;t=e[6];e[6]=e[9];e[9]=t;t=e[3];e[3]=e[12];e[12]=t;t=e[7];e[7]=e[13];e[13]=t;t=e[11];e[11]=e[14];e[14]=t;return this},flattenToArrayOffset:function(e,t){console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated "+"- just use .toArray instead.");return this.toArray(e,t)},getPosition:function(){var e;return function(){if(e===undefined)e=new THREE.Vector3;console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");return e.setFromMatrixColumn(this,3)}}(),setPosition:function(e){var t=this.elements;t[12]=e.x;t[13]=e.y;t[14]=e.z;return this},getInverse:function(e,t){var r=this.elements,n=e.elements,i=n[0],a=n[1],o=n[2],s=n[3],c=n[4],u=n[5],l=n[6],h=n[7],f=n[8],d=n[9],p=n[10],E=n[11],m=n[12],v=n[13],g=n[14],T=n[15],y=d*g*h-v*p*h+v*l*E-u*g*E-d*l*T+u*p*T,R=m*p*h-f*g*h-m*l*E+c*g*E+f*l*T-c*p*T,x=f*v*h-m*d*h+m*u*E-c*v*E-f*u*T+c*d*T,H=m*d*l-f*v*l-m*u*p+c*v*p+f*u*g-c*d*g;var b=i*y+a*R+o*x+s*H;if(b===0){var _="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t||false){throw new Error(_)}else{console.warn(_)}return this.identity()}var M=1/b;r[0]=y*M;r[1]=(v*p*s-d*g*s-v*o*E+a*g*E+d*o*T-a*p*T)*M;r[2]=(u*g*s-v*l*s+v*o*h-a*g*h-u*o*T+a*l*T)*M;r[3]=(d*l*s-u*p*s-d*o*h+a*p*h+u*o*E-a*l*E)*M;r[4]=R*M;r[5]=(f*g*s-m*p*s+m*o*E-i*g*E-f*o*T+i*p*T)*M;r[6]=(m*l*s-c*g*s-m*o*h+i*g*h+c*o*T-i*l*T)*M;r[7]=(c*p*s-f*l*s+f*o*h-i*p*h-c*o*E+i*l*E)*M;r[8]=x*M;r[9]=(m*d*s-f*v*s-m*a*E+i*v*E+f*a*T-i*d*T)*M;r[10]=(c*v*s-m*u*s+m*a*h-i*v*h-c*a*T+i*u*T)*M;r[11]=(f*u*s-c*d*s-f*a*h+i*d*h+c*a*E-i*u*E)*M;r[12]=H*M;r[13]=(f*v*o-m*d*o+m*a*p-i*v*p-f*a*g+i*d*g)*M;r[14]=(m*u*o-c*v*o-m*a*l+i*v*l+c*a*g-i*u*g)*M;r[15]=(c*d*o-f*u*o+f*a*l-i*d*l-c*a*p+i*u*p)*M;return this},scale:function(e){var t=this.elements;var r=e.x,n=e.y,i=e.z;t[0]*=r;t[4]*=n;t[8]*=i;t[1]*=r;t[5]*=n;t[9]*=i;t[2]*=r;t[6]*=n;t[10]*=i;t[3]*=r;t[7]*=n;t[11]*=i;return this},getMaxScaleOnAxis:function(){var e=this.elements;var t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];var r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6];var n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))},makeTranslation:function(e,t,r){this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1);return this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1);return this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1);return this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(e,t){var r=Math.cos(t);var n=Math.sin(t);var i=1-r;var a=e.x,o=e.y,s=e.z;var c=i*a,u=i*o;this.set(c*a+r,c*o-n*s,c*s+n*o,0,c*o+n*s,u*o+r,u*s-n*a,0,c*s-n*o,u*s+n*a,i*s*s+r,0,0,0,0,1);return this},makeScale:function(e,t,r){this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1);return this},compose:function(e,t,r){this.makeRotationFromQuaternion(t);this.scale(r);this.setPosition(e);return this},decompose:function(){var e,t;return function(r,n,i){if(e===undefined){e=new THREE.Vector3;t=new THREE.Matrix4}var a=this.elements;var o=e.set(a[0],a[1],a[2]).length();var s=e.set(a[4],a[5],a[6]).length();var c=e.set(a[8],a[9],a[10]).length();var u=this.determinant();if(u<0){o=-o}r.x=a[12];r.y=a[13];r.z=a[14];t.elements.set(this.elements);var l=1/o;var h=1/s;var f=1/c;t.elements[0]*=l;t.elements[1]*=l;t.elements[2]*=l;t.elements[4]*=h;t.elements[5]*=h;t.elements[6]*=h;t.elements[8]*=f;t.elements[9]*=f;t.elements[10]*=f;n.setFromRotationMatrix(t);i.x=o;i.y=s;i.z=c;return this}}(),makeFrustum:function(e,t,r,n,i,a){var o=this.elements;var s=2*i/(t-e);var c=2*i/(n-r);var u=(t+e)/(t-e);var l=(n+r)/(n-r);var h=-(a+i)/(a-i);var f=-2*a*i/(a-i);o[0]=s;o[4]=0;o[8]=u;o[12]=0;o[1]=0;o[5]=c;o[9]=l;o[13]=0;o[2]=0;o[6]=0;o[10]=h;o[14]=f;o[3]=0;o[7]=0;o[11]=-1;o[15]=0;return this},makePerspective:function(e,t,r,n){var i=r*Math.tan(THREE.Math.DEG2RAD*e*.5);var a=-i;var o=a*t;var s=i*t;return this.makeFrustum(o,s,a,i,r,n)},makeOrthographic:function(e,t,r,n,i,a){var o=this.elements;var s=1/(t-e);var c=1/(r-n);var u=1/(a-i);var l=(t+e)*s;var h=(r+n)*c;var f=(a+i)*u;o[0]=2*s;o[4]=0;o[8]=0;o[12]=-l;o[1]=0;o[5]=2*c;o[9]=0;o[13]=-h;o[2]=0;o[6]=0;o[10]=-2*u;o[14]=-f;o[3]=0;o[7]=0;o[11]=0;o[15]=1;return this},equals:function(e){var t=this.elements;var r=e.elements;for(var n=0;n<16;n++){if(t[n]!==r[n])return false}return true},fromArray:function(e){this.elements.set(e);return this},toArray:function(e,t){if(e===undefined)e=[];if(t===undefined)t=0;var r=this.elements;e[t]=r[0];e[t+1]=r[1];e[t+2]=r[2];e[t+3]=r[3];e[t+4]=r[4];e[t+5]=r[5];e[t+6]=r[6];e[t+7]=r[7];e[t+8]=r[8];e[t+9]=r[9];e[t+10]=r[10];e[t+11]=r[11];e[t+12]=r[12];e[t+13]=r[13];e[t+14]=r[14];e[t+15]=r[15];return e}};THREE.Ray=function(e,t){this.origin=e!==undefined?e:new THREE.Vector3;this.direction=t!==undefined?t:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){this.origin.copy(e);this.direction.copy(t);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.origin.copy(e.origin);this.direction.copy(e.direction);return this},at:function(e,t){var r=t||new THREE.Vector3;return r.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){this.direction.copy(e).sub(this.origin).normalize();return this},recast:function(){var e=new THREE.Vector3;return function(t){this.origin.copy(this.at(t,e));return this}}(),closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var n=r.dot(this.direction);if(n<0){return r.copy(this.origin)}return r.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new THREE.Vector3;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);if(r<0){return this.origin.distanceToSquared(t)}e.copy(this.direction).multiplyScalar(r).add(this.origin);return e.distanceToSquared(t)}}(),distanceSqToSegment:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var r=new THREE.Vector3;return function(n,i,a,o){e.copy(n).add(i).multiplyScalar(.5);t.copy(i).sub(n).normalize();r.copy(this.origin).sub(e);var s=n.distanceTo(i)*.5;var c=-this.direction.dot(t);var u=r.dot(this.direction);var l=-r.dot(t);var h=r.lengthSq();var f=Math.abs(1-c*c);var d,p,E,m;if(f>0){d=c*l-u;p=c*u-l;m=s*f;if(d>=0){if(p>=-m){if(p<=m){var v=1/f;d*=v;p*=v;E=d*(d+c*p+2*u)+p*(c*d+p+2*l)+h}else{p=s;d=Math.max(0,-(c*p+u));E=-d*d+p*(p+2*l)+h}}else{p=-s;d=Math.max(0,-(c*p+u));E=-d*d+p*(p+2*l)+h}}else{if(p<=-m){d=Math.max(0,-(-c*s+u));p=d>0?-s:Math.min(Math.max(-s,-l),s);E=-d*d+p*(p+2*l)+h}else if(p<=m){d=0;p=Math.min(Math.max(-s,-l),s);E=p*(p+2*l)+h}else{d=Math.max(0,-(c*s+u));p=d>0?s:Math.min(Math.max(-s,-l),s);E=-d*d+p*(p+2*l)+h}}}else{p=c>0?-s:s;d=Math.max(0,-(c*p+u));E=-d*d+p*(p+2*l)+h}if(a){a.copy(this.direction).multiplyScalar(d).add(this.origin)}if(o){o.copy(t).multiplyScalar(p).add(e)}return E}}(),intersectSphere:function(){var e=new THREE.Vector3;return function(t,r){e.subVectors(t.center,this.origin);var n=e.dot(this.direction);var i=e.dot(e)-n*n;var a=t.radius*t.radius;if(i>a)return null;var o=Math.sqrt(a-i);var s=n-o;var c=n+o;if(s<0&&c<0)return null;if(s<0)return this.at(c,r);return this.at(s,r)}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(t===0){if(e.distanceToPoint(this.origin)===0){return 0}return null}var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){var r=this.distanceToPlane(e);if(r===null){return null}return this.at(r,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);if(t===0){return true}var r=e.normal.dot(this.direction);if(r*t<0){return true}return false},intersectBox:function(e,t){var r,n,i,a,o,s;var c=1/this.direction.x,u=1/this.direction.y,l=1/this.direction.z;var h=this.origin;if(c>=0){r=(e.min.x-h.x)*c;n=(e.max.x-h.x)*c}else{r=(e.max.x-h.x)*c;n=(e.min.x-h.x)*c}if(u>=0){i=(e.min.y-h.y)*u;a=(e.max.y-h.y)*u}else{i=(e.max.y-h.y)*u;a=(e.min.y-h.y)*u}if(r>a||i>n)return null;if(i>r||r!==r)r=i;if(a<n||n!==n)n=a;if(l>=0){o=(e.min.z-h.z)*l;s=(e.max.z-h.z)*l}else{o=(e.max.z-h.z)*l;s=(e.min.z-h.z)*l}if(r>s||o>n)return null;if(o>r||r!==r)r=o;if(s<n||n!==n)n=s;if(n<0)return null;return this.at(r>=0?r:n,t)},intersectsBox:function(){var e=new THREE.Vector3;return function(t){return this.intersectBox(t,e)!==null}}(),intersectTriangle:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var r=new THREE.Vector3;var n=new THREE.Vector3;return function(i,a,o,s,c){t.subVectors(a,i);r.subVectors(o,i);n.crossVectors(t,r);var u=this.direction.dot(n);var l;if(u>0){if(s)return null;l=1}else if(u<0){l=-1;u=-u}else{return null}e.subVectors(this.origin,i);var h=l*this.direction.dot(r.crossVectors(e,r));if(h<0){return null}var f=l*this.direction.dot(t.cross(e));if(f<0){return null}if(h+f>u){return null}var d=-l*e.dot(n);if(d<0){return null}return this.at(d/u,c)}}(),applyMatrix4:function(e){this.direction.add(this.origin).applyMatrix4(e);this.origin.applyMatrix4(e);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}};THREE.Sphere=function(e,t){this.center=e!==undefined?e:new THREE.Vector3;this.radius=t!==undefined?t:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){this.center.copy(e);
this.radius=t;return this},setFromPoints:function(){var e=new THREE.Box3;return function(t,r){var n=this.center;if(r!==undefined){n.copy(r)}else{e.setFromPoints(t).center(n)}var i=0;for(var a=0,o=t.length;a<o;a++){i=Math.max(i,n.distanceToSquared(t[a]))}this.radius=Math.sqrt(i);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.center.copy(e.center);this.radius=e.radius;return this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(this.center.dot(e.normal)-e.constant)<=this.radius},clampPoint:function(e,t){var r=this.center.distanceToSquared(e);var n=t||new THREE.Vector3;n.copy(e);if(r>this.radius*this.radius){n.sub(this.center).normalize();n.multiplyScalar(this.radius).add(this.center)}return n},getBoundingBox:function(e){var t=e||new THREE.Box3;t.set(this.center,this.center);t.expandByScalar(this.radius);return t},applyMatrix4:function(e){this.center.applyMatrix4(e);this.radius=this.radius*e.getMaxScaleOnAxis();return this},translate:function(e){this.center.add(e);return this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}};THREE.Frustum=function(e,t,r,n,i,a){this.planes=[e!==undefined?e:new THREE.Plane,t!==undefined?t:new THREE.Plane,r!==undefined?r:new THREE.Plane,n!==undefined?n:new THREE.Plane,i!==undefined?i:new THREE.Plane,a!==undefined?a:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,r,n,i,a){var o=this.planes;o[0].copy(e);o[1].copy(t);o[2].copy(r);o[3].copy(n);o[4].copy(i);o[5].copy(a);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){var t=this.planes;for(var r=0;r<6;r++){t[r].copy(e.planes[r])}return this},setFromMatrix:function(e){var t=this.planes;var r=e.elements;var n=r[0],i=r[1],a=r[2],o=r[3];var s=r[4],c=r[5],u=r[6],l=r[7];var h=r[8],f=r[9],d=r[10],p=r[11];var E=r[12],m=r[13],v=r[14],g=r[15];t[0].setComponents(o-n,l-s,p-h,g-E).normalize();t[1].setComponents(o+n,l+s,p+h,g+E).normalize();t[2].setComponents(o+i,l+c,p+f,g+m).normalize();t[3].setComponents(o-i,l-c,p-f,g-m).normalize();t[4].setComponents(o-a,l-u,p-d,g-v).normalize();t[5].setComponents(o+a,l+u,p+d,g+v).normalize();return this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var r=t.geometry;if(r.boundingSphere===null)r.computeBoundingSphere();e.copy(r.boundingSphere).applyMatrix4(t.matrixWorld);return this.intersectsSphere(e)}}(),intersectsSprite:function(){var e=new THREE.Sphere;return function(t){e.center.set(0,0,0);e.radius=.7071067811865476;e.applyMatrix4(t.matrixWorld);return this.intersectsSphere(e)}}(),intersectsSphere:function(e){var t=this.planes;var r=e.center;var n=-e.radius;for(var i=0;i<6;i++){var a=t[i].distanceToPoint(r);if(a<n){return false}}return true},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){var n=this.planes;for(var i=0;i<6;i++){var a=n[i];e.x=a.normal.x>0?r.min.x:r.max.x;t.x=a.normal.x>0?r.max.x:r.min.x;e.y=a.normal.y>0?r.min.y:r.max.y;t.y=a.normal.y>0?r.max.y:r.min.y;e.z=a.normal.z>0?r.min.z:r.max.z;t.z=a.normal.z>0?r.max.z:r.min.z;var o=a.distanceToPoint(e);var s=a.distanceToPoint(t);if(o<0&&s<0){return false}}return true}}(),containsPoint:function(e){var t=this.planes;for(var r=0;r<6;r++){if(t[r].distanceToPoint(e)<0){return false}}return true}};THREE.Plane=function(e,t){this.normal=e!==undefined?e:new THREE.Vector3(1,0,0);this.constant=t!==undefined?t:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){this.normal.copy(e);this.constant=t;return this},setComponents:function(e,t,r,n){this.normal.set(e,t,r);this.constant=n;return this},setFromNormalAndCoplanarPoint:function(e,t){this.normal.copy(e);this.constant=-t.dot(this.normal);return this},setFromCoplanarPoints:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(r,n,i){var a=e.subVectors(i,n).cross(t.subVectors(r,n)).normalize();this.setFromNormalAndCoplanarPoint(a,r);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.normal.copy(e.normal);this.constant=e.constant;return this},normalize:function(){var e=1/this.normal.length();this.normal.multiplyScalar(e);this.constant*=e;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e);var n=t||new THREE.Vector3;return n.copy(this.normal).multiplyScalar(r)},intersectLine:function(){var e=new THREE.Vector3;return function(t,r){var n=r||new THREE.Vector3;var i=t.delta(e);var a=this.normal.dot(i);if(a===0){if(this.distanceToPoint(t.start)===0){return n.copy(t.start)}return undefined}var o=-(t.start.dot(this.normal)+this.constant)/a;if(o<0||o>1){return undefined}return n.copy(i).multiplyScalar(o).add(t.start)}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start);var r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){var t=e||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3;var t=new THREE.Matrix3;return function(r,n){var i=this.coplanarPoint(e).applyMatrix4(r);var a=n||t.getNormalMatrix(r);var o=this.normal.applyMatrix3(a).normalize();this.constant=-i.dot(o);return this}}(),translate:function(e){this.constant=this.constant-e.dot(this.normal);return this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}};THREE.Spherical=function(e,t,r){this.radius=e!==undefined?e:1;this.phi=t!==undefined?t:0;this.theta=r!==undefined?r:0;return this};THREE.Spherical.prototype={constructor:THREE.Spherical,set:function(e,t,r){this.radius=e;this.phi=t;this.theta=r;return this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.radius.copy(e.radius);this.phi.copy(e.phi);this.theta.copy(e.theta);return this},makeSafe:function(){var e=1e-6;this.phi=Math.max(e,Math.min(Math.PI-e,this.phi));return this},setFromVector3:function(e){this.radius=e.length();if(this.radius===0){this.theta=0;this.phi=0}else{this.theta=Math.atan2(e.x,e.z);this.phi=Math.acos(THREE.Math.clamp(e.y/this.radius,-1,1))}return this}};THREE.Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");var t=new Array(36);var r=0,n;return function(){for(var i=0;i<36;i++){if(i===8||i===13||i===18||i===23){t[i]="-"}else if(i===14){t[i]="4"}else{if(r<=2)r=33554432+Math.random()*16777216|0;n=r&15;r=r>>4;t[i]=e[i===19?n&3|8:n]}}return t.join("")}}(),clamp:function(e,t,r){return Math.max(t,Math.min(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)},smoothstep:function(e,t,r){if(e<=t)return 0;if(e>=r)return 1;e=(e-t)/(r-t);return e*e*(3-2*e)},smootherstep:function(e,t,r){if(e<=t)return 0;if(e>=r)return 1;e=(e-t)/(r-t);return e*e*e*(e*(e*6-15)+10)},random16:function(){console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead.");return Math.random()},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*THREE.Math.DEG2RAD},radToDeg:function(e){return e*THREE.Math.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){e--;e|=e>>1;e|=e>>2;e|=e>>4;e|=e>>8;e|=e>>16;e++;return e}};THREE.Spline=function(e){this.points=e;var t=[],r={x:0,y:0,z:0},n,i,a,o,s,c,u,l,h;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++){this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}}};this.getPoint=function(e){n=(this.points.length-1)*e;i=Math.floor(n);a=n-i;t[0]=i===0?i:i-1;t[1]=i;t[2]=i>this.points.length-2?this.points.length-1:i+1;t[3]=i>this.points.length-3?this.points.length-1:i+2;c=this.points[t[0]];u=this.points[t[1]];l=this.points[t[2]];h=this.points[t[3]];o=a*a;s=a*o;r.x=f(c.x,u.x,l.x,h.x,a,o,s);r.y=f(c.y,u.y,l.y,h.y,a,o,s);r.z=f(c.z,u.z,l.z,h.z,a,o,s);return r};this.getControlPointsArray=function(){var e,t,r=this.points.length,n=[];for(e=0;e<r;e++){t=this.points[e];n[e]=[t.x,t.y,t.z]}return n};this.getLength=function(e){var t,r,n,i,a=0,o=0,s=0,c=new THREE.Vector3,u=new THREE.Vector3,l=[],h=0;l[0]=0;if(!e)e=100;n=this.points.length*e;c.copy(this.points[0]);for(t=1;t<n;t++){r=t/n;i=this.getPoint(r);u.copy(i);h+=u.distanceTo(c);c.copy(i);a=(this.points.length-1)*r;o=Math.floor(a);if(o!==s){l[o]=h;s=o}}l[l.length]=h;return{chunks:l,total:h}};this.reparametrizeByArcLength=function(e){var t,r,n,i,a,o,s,c,u=[],l=new THREE.Vector3,h=this.getLength();u.push(l.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){o=h.chunks[t]-h.chunks[t-1];s=Math.ceil(e*o/h.total);i=(t-1)/(this.points.length-1);a=t/(this.points.length-1);for(r=1;r<s-1;r++){n=i+r*(1/s)*(a-i);c=this.getPoint(n);u.push(l.copy(c).clone())}u.push(l.copy(this.points[t]).clone())}this.points=u};function f(e,t,r,n,i,a,o){var s=(r-e)*.5,c=(n-t)*.5;return(2*(t-r)+s+c)*o+(-3*(t-r)-2*s-c)*a+s*i+t}};THREE.Triangle=function(e,t,r){this.a=e!==undefined?e:new THREE.Vector3;this.b=t!==undefined?t:new THREE.Vector3;this.c=r!==undefined?r:new THREE.Vector3};THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,r,n,i){var a=i||new THREE.Vector3;a.subVectors(n,r);e.subVectors(t,r);a.cross(e);var o=a.lengthSq();if(o>0){return a.multiplyScalar(1/Math.sqrt(o))}return a.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var r=new THREE.Vector3;return function(n,i,a,o,s){e.subVectors(o,i);t.subVectors(a,i);r.subVectors(n,i);var c=e.dot(e);var u=e.dot(t);var l=e.dot(r);var h=t.dot(t);var f=t.dot(r);var d=c*h-u*u;var p=s||new THREE.Vector3;if(d===0){return p.set(-2,-1,-1)}var E=1/d;var m=(h*l-u*f)*E;var v=(c*f-u*l)*E;return p.set(1-m-v,v,m)}}();THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,r,n,i){var a=THREE.Triangle.barycoordFromPoint(t,r,n,i,e);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){this.a.copy(e);this.b.copy(t);this.c.copy(r);return this},setFromPointsAndIndices:function(e,t,r,n){this.a.copy(e[t]);this.b.copy(e[r]);this.c.copy(e[n]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a.copy(e.a);this.b.copy(e.b);this.c.copy(e.c);return this},area:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(){e.subVectors(this.c,this.b);t.subVectors(this.a,this.b);return e.cross(t).length()*.5}}(),midpoint:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},closestPointToPoint:function(){var e,t,r,n;return function i(a,o){if(e===undefined){e=new THREE.Plane;t=[new THREE.Line3,new THREE.Line3,new THREE.Line3];r=new THREE.Vector3;n=new THREE.Vector3}var s=o||new THREE.Vector3;var c=Infinity;e.setFromCoplanarPoints(this.a,this.b,this.c);e.projectPoint(a,r);if(this.containsPoint(r)===true){s.copy(r)}else{t[0].set(this.a,this.b);t[1].set(this.b,this.c);t[2].set(this.c,this.a);for(var u=0;u<t.length;u++){t[u].closestPointToPoint(r,true,n);var l=r.distanceToSquared(n);if(l<c){c=l;s.copy(n)}}}return s}}(),equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};THREE.Interpolant=function(e,t,r,n){this.parameterPositions=e;this._cachedIndex=0;this.resultBuffer=n!==undefined?n:new t.constructor(r);this.sampleValues=t;this.valueSize=r};THREE.Interpolant.prototype={constructor:THREE.Interpolant,evaluate:function(e){var t=this.parameterPositions,r=this._cachedIndex,n=t[r],i=t[r-1];e:{t:{var a;r:{n:if(!(e<n)){for(var o=r+2;;){if(n===undefined){if(e<i)break n;r=t.length;this._cachedIndex=r;return this.afterEnd_(r-1,e,i)}if(r===o)break;i=n;n=t[++r];if(e<n){break t}}a=t.length;break r}if(!(e>=i)){var s=t[1];if(e<s){r=2;i=s}for(var o=r-2;;){if(i===undefined){this._cachedIndex=0;return this.beforeStart_(0,e,n)}if(r===o)break;n=i;i=t[--r-1];if(e>=i){break t}}a=r;r=0;break r}break e}while(r<a){var c=r+a>>>1;if(e<t[c]){a=c}else{r=c+1}}n=t[r];i=t[r-1];if(i===undefined){this._cachedIndex=0;return this.beforeStart_(0,e,n)}if(n===undefined){r=t.length;this._cachedIndex=r;return this.afterEnd_(r-1,i,e)}}this._cachedIndex=r;this.intervalChanged_(r,i,n)}return this.interpolate_(r,i,e,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){var t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n;for(var a=0;a!==n;++a){t[a]=r[i+a]}return t},interpolate_:function(e,t,r,n){throw new Error("call to abstract method")},intervalChanged_:function(e,t,r){}};Object.assign(THREE.Interpolant.prototype,{beforeStart_:THREE.Interpolant.prototype.copySampleValue_,afterEnd_:THREE.Interpolant.prototype.copySampleValue_});THREE.CubicInterpolant=function(e,t,r,n){THREE.Interpolant.call(this,e,t,r,n);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0};THREE.CubicInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.CubicInterpolant,DefaultSettings_:{endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},intervalChanged_:function(e,t,r){var n=this.parameterPositions,i=e-2,a=e+1,o=n[i],s=n[a];if(o===undefined){switch(this.getSettings_().endingStart){case THREE.ZeroSlopeEnding:i=e;o=2*t-r;break;case THREE.WrapAroundEnding:i=n.length-2;o=t+n[i]-n[i+1];break;default:i=e;o=r}}if(s===undefined){switch(this.getSettings_().endingEnd){case THREE.ZeroSlopeEnding:a=e;s=2*r-t;break;case THREE.WrapAroundEnding:a=1;s=r+n[1]-n[0];break;default:a=e-1;s=t}}var c=(r-t)*.5,u=this.valueSize;this._weightPrev=c/(t-o);this._weightNext=c/(s-r);this._offsetPrev=i*u;this._offsetNext=a*u},interpolate_:function(e,t,r,n){var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=s-o,u=this._offsetPrev,l=this._offsetNext,h=this._weightPrev,f=this._weightNext,d=(r-t)/(n-t),p=d*d,E=p*d;var m=-h*E+2*h*p-h*d;var v=(1+h)*E+(-1.5-2*h)*p+(-.5+h)*d+1;var g=(-1-f)*E+(1.5+f)*p+.5*d;var T=f*E-f*p;for(var y=0;y!==o;++y){i[y]=m*a[u+y]+v*a[c+y]+g*a[s+y]+T*a[l+y]}return i}});THREE.DiscreteInterpolant=function(e,t,r,n){THREE.Interpolant.call(this,e,t,r,n)};THREE.DiscreteInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.DiscreteInterpolant,interpolate_:function(e,t,r,n){return this.copySampleValue_(e-1)}});THREE.LinearInterpolant=function(e,t,r,n){THREE.Interpolant.call(this,e,t,r,n)};THREE.LinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.LinearInterpolant,interpolate_:function(e,t,r,n){var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=s-o,u=(r-t)/(n-t),l=1-u;for(var h=0;h!==o;++h){i[h]=a[c+h]*l+a[s+h]*u}return i}});THREE.QuaternionLinearInterpolant=function(e,t,r,n){THREE.Interpolant.call(this,e,t,r,n)};THREE.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.QuaternionLinearInterpolant,interpolate_:function(e,t,r,n){var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,c=(r-t)/(n-t);for(var u=s+o;s!==u;s+=4){THREE.Quaternion.slerpFlat(i,0,a,s-o,a,s,c)}return i}});THREE.Clock=function(e){this.autoStart=e!==undefined?e:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=(performance||Date).now();this.oldTime=this.startTime;this.running=true},stop:function(){this.getElapsedTime();this.running=false},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running){this.start()}if(this.running){var t=(performance||Date).now();e=(t-this.oldTime)/1e3;this.oldTime=t;this.elapsedTime+=e}return e}};THREE.EventDispatcher=function(){};Object.assign(THREE.EventDispatcher.prototype,{addEventListener:function(e,t){if(this._listeners===undefined)this._listeners={};var r=this._listeners;if(r[e]===undefined){r[e]=[]}if(r[e].indexOf(t)===-1){r[e].push(t)}},hasEventListener:function(e,t){if(this._listeners===undefined)return false;var r=this._listeners;if(r[e]!==undefined&&r[e].indexOf(t)!==-1){return true}return false},removeEventListener:function(e,t){if(this._listeners===undefined)return;var r=this._listeners;var n=r[e];if(n!==undefined){var i=n.indexOf(t);if(i!==-1){n.splice(i,1)}}},dispatchEvent:function(e){if(this._listeners===undefined)return;var t=this._listeners;var r=t[e.type];if(r!==undefined){e.target=this;var n=[],i=0;var a=r.length;for(i=0;i<a;i++){n[i]=r[i]}for(i=0;i<a;i++){n[i].call(this,e)}}}});THREE.Layers=function(){this.mask=1};THREE.Layers.prototype={constructor:THREE.Layers,set:function(e){this.mask=1<<e},enable:function(e){this.mask|=1<<e},toggle:function(e){this.mask^=1<<e},disable:function(e){this.mask&=~(1<<e)},test:function(e){return(this.mask&e.mask)!==0}};(function(e){e.Raycaster=function(t,r,n,i){this.ray=new e.Ray(t,r);this.near=n||0;this.far=i||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})};function t(e,t){return e.distance-t.distance}function r(e,t,n,i){if(e.visible===false)return;e.raycast(t,n);if(i===true){var a=e.children;for(var o=0,s=a.length;o<s;o++){r(a[o],t,n,true)}}}e.Raycaster.prototype={constructor:e.Raycaster,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,r){if(r instanceof e.PerspectiveCamera){this.ray.origin.setFromMatrixPosition(r.matrixWorld);this.ray.direction.set(t.x,t.y,.5).unproject(r).sub(this.ray.origin).normalize()}else if(r instanceof e.OrthographicCamera){this.ray.origin.set(t.x,t.y,-1).unproject(r);this.ray.direction.set(0,0,-1).transformDirection(r.matrixWorld)}else{console.error("THREE.Raycaster: Unsupported camera type.")}},intersectObject:function(e,n){var i=[];r(e,this,i,n);i.sort(t);return i},intersectObjects:function(e,n){var i=[];if(Array.isArray(e)===false){console.warn("THREE.Raycaster.intersectObjects: objects is not an Array.");return i}for(var a=0,o=e.length;a<o;a++){r(e[a],this,i,n)}i.sort(t);return i}}})(THREE);THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var e=new THREE.Vector3;var t=new THREE.Euler;var r=new THREE.Quaternion;var n=new THREE.Vector3(1,1,1);function i(){r.setFromEuler(t,false)}function a(){t.setFromQuaternion(r,undefined,false)}t.onChange(i);r.onChange(a);Object.defineProperties(this,{position:{enumerable:true,value:e},rotation:{enumerable:true,value:t},quaternion:{enumerable:true,value:r},scale:{enumerable:true,value:n},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}});this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new THREE.Layers;this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.DefaultMatrixAutoUpdate=true;Object.assign(THREE.Object3D.prototype,THREE.EventDispatcher.prototype,{applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,true)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,r){e.setFromAxisAngle(t,r);this.quaternion.multiply(e);return this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,r){e.copy(t).applyQuaternion(this.quaternion);this.position.add(e.multiplyScalar(r));return this}}(),translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up);this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++){this.add(arguments[t])}return this}if(e===this){console.error("THREE.Object3D.add: object can't be added as a child of itself.",e);return this}if(e instanceof THREE.Object3D){if(e.parent!==null){e.parent.remove(e)}e.parent=this;e.dispatchEvent({type:"added"});this.children.push(e)}else{console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e)}return this},remove:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++){this.remove(arguments[t])}}var r=this.children.indexOf(e);if(r!==-1){e.parent=null;e.dispatchEvent({type:"removed"});this.children.splice(r,1)}},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var r=0,n=this.children.length;r<n;r++){var i=this.children[r];var a=i.getObjectByProperty(e,t);if(a!==undefined){return a}}return undefined},getWorldPosition:function(e){var t=e||new THREE.Vector3;this.updateMatrixWorld(true);return t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(r){var n=r||new THREE.Quaternion;this.updateMatrixWorld(true);this.matrixWorld.decompose(e,n,t);return n}}(),getWorldRotation:function(){var e=new THREE.Quaternion;return function(t){var r=t||new THREE.Euler;this.getWorldQuaternion(e);return r.setFromQuaternion(e,this.rotation.order,false)}}(),getWorldScale:function(){var e=new THREE.Vector3;var t=new THREE.Quaternion;return function(r){var n=r||new THREE.Vector3;this.updateMatrixWorld(true);this.matrixWorld.decompose(e,t,n);return n}}(),getWorldDirection:function(){var e=new THREE.Quaternion;return function(t){var r=t||new THREE.Vector3;this.getWorldQuaternion(e);return r.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);var t=this.children;for(var r=0,n=t.length;r<n;r++){t[r].traverse(e)}},traverseVisible:function(e){if(this.visible===false)return;e(this);var t=this.children;for(var r=0,n=t.length;r<n;r++){t[r].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;if(t!==null){e(t);t.traverseAncestors(e)}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(e){if(this.matrixAutoUpdate===true)this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||e===true){if(this.parent===null){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}this.matrixWorldNeedsUpdate=false;e=true}for(var t=0,r=this.children.length;t<r;t++){this.children[t].updateMatrixWorld(e)}},toJSON:function(e){var t=e===undefined||e==="";var r={};if(t){e={geometries:{},materials:{},textures:{},images:{}};r.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"}}var n={};n.uuid=this.uuid;n.type=this.type;if(this.name!=="")n.name=this.name;if(JSON.stringify(this.userData)!=="{}")n.userData=this.userData;if(this.castShadow===true)n.castShadow=true;if(this.receiveShadow===true)n.receiveShadow=true;if(this.visible===false)n.visible=false;n.matrix=this.matrix.toArray();if(this.geometry!==undefined){if(e.geometries[this.geometry.uuid]===undefined){e.geometries[this.geometry.uuid]=this.geometry.toJSON(e)}n.geometry=this.geometry.uuid}if(this.material!==undefined){if(e.materials[this.material.uuid]===undefined){e.materials[this.material.uuid]=this.material.toJSON(e)}n.material=this.material.uuid}if(this.children.length>0){n.children=[];for(var i=0;i<this.children.length;i++){n.children.push(this.children[i].toJSON(e).object)}}if(t){var a=u(e.geometries);var o=u(e.materials);var s=u(e.textures);var c=u(e.images);if(a.length>0)r.geometries=a;if(o.length>0)r.materials=o;if(s.length>0)r.textures=s;if(c.length>0)r.images=c}r.object=n;return r;function u(e){var t=[];for(var r in e){var n=e[r];delete n.metadata;t.push(n)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(t===undefined)t=true;this.name=e.name;this.up.copy(e.up);this.position.copy(e.position);this.quaternion.copy(e.quaternion);this.scale.copy(e.scale);this.matrix.copy(e.matrix);this.matrixWorld.copy(e.matrixWorld);this.matrixAutoUpdate=e.matrixAutoUpdate;this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate;this.visible=e.visible;this.castShadow=e.castShadow;this.receiveShadow=e.receiveShadow;this.frustumCulled=e.frustumCulled;this.renderOrder=e.renderOrder;this.userData=JSON.parse(JSON.stringify(e.userData));if(t===true){for(var r=0;r<e.children.length;r++){var n=e.children[r];this.add(n.clone())}}return this}});THREE.Object3DIdCount=0;THREE.Face3=function(e,t,r,n,i,a){this.a=e;this.b=t;this.c=r;this.normal=n instanceof THREE.Vector3?n:new THREE.Vector3;this.vertexNormals=Array.isArray(n)?n:[];this.color=i instanceof THREE.Color?i:new THREE.Color;this.vertexColors=Array.isArray(i)?i:[];this.materialIndex=a!==undefined?a:0};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a;this.b=e.b;this.c=e.c;this.normal.copy(e.normal);this.color.copy(e.color);this.materialIndex=e.materialIndex;for(var t=0,r=e.vertexNormals.length;t<r;t++){this.vertexNormals[t]=e.vertexNormals[t].clone()}for(var t=0,r=e.vertexColors.length;t<r;t++){this.vertexColors[t]=e.vertexColors[t].clone()}return this}};THREE.BufferAttribute=function(e,t,r){this.uuid=THREE.Math.generateUUID();this.array=e;this.itemSize=t;this.dynamic=false;this.updateRange={offset:0,count:-1};this.version=0;this.normalized=r===true};THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(e){if(e===true)this.version++},setDynamic:function(e){this.dynamic=e;return this},copy:function(e){this.array=new e.array.constructor(e.array);this.itemSize=e.itemSize;this.dynamic=e.dynamic;return this},copyAt:function(e,t,r){e*=this.itemSize;r*=t.itemSize;for(var n=0,i=this.itemSize;n<i;n++){this.array[e+n]=t.array[r+n]}return this},copyArray:function(e){this.array.set(e);return this},copyColorsArray:function(e){var t=this.array,r=0;for(var n=0,i=e.length;n<i;n++){var a=e[n];if(a===undefined){console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n);a=new THREE.Color}t[r++]=a.r;t[r++]=a.g;t[r++]=a.b}return this},copyIndicesArray:function(e){var t=this.array,r=0;for(var n=0,i=e.length;n<i;n++){var a=e[n];t[r++]=a.a;t[r++]=a.b;t[r++]=a.c}return this},copyVector2sArray:function(e){var t=this.array,r=0;for(var n=0,i=e.length;n<i;n++){var a=e[n];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n);a=new THREE.Vector2}t[r++]=a.x;t[r++]=a.y}return this},copyVector3sArray:function(e){var t=this.array,r=0;for(var n=0,i=e.length;n<i;n++){var a=e[n];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n);a=new THREE.Vector3}t[r++]=a.x;t[r++]=a.y;t[r++]=a.z}return this},copyVector4sArray:function(e){var t=this.array,r=0;for(var n=0,i=e.length;n<i;n++){var a=e[n];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n);a=new THREE.Vector4}t[r++]=a.x;t[r++]=a.y;t[r++]=a.z;t[r++]=a.w}return this},set:function(e,t){if(t===undefined)t=0;this.array.set(e,t);return this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){this.array[e*this.itemSize]=t;return this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){this.array[e*this.itemSize+1]=t;return this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){this.array[e*this.itemSize+2]=t;return this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){this.array[e*this.itemSize+3]=t;return this},setXY:function(e,t,r){e*=this.itemSize;this.array[e+0]=t;this.array[e+1]=r;return this},setXYZ:function(e,t,r,n){e*=this.itemSize;this.array[e+0]=t;this.array[e+1]=r;this.array[e+2]=n;return this},setXYZW:function(e,t,r,n,i){e*=this.itemSize;this.array[e+0]=t;this.array[e+1]=r;this.array[e+2]=n;this.array[e+3]=i;return this},clone:function(){return(new this.constructor).copy(this)}};THREE.Int8Attribute=function(e,t){return new THREE.BufferAttribute(new Int8Array(e),t)};THREE.Uint8Attribute=function(e,t){return new THREE.BufferAttribute(new Uint8Array(e),t)};THREE.Uint8ClampedAttribute=function(e,t){return new THREE.BufferAttribute(new Uint8ClampedArray(e),t)};THREE.Int16Attribute=function(e,t){return new THREE.BufferAttribute(new Int16Array(e),t)};THREE.Uint16Attribute=function(e,t){return new THREE.BufferAttribute(new Uint16Array(e),t)};THREE.Int32Attribute=function(e,t){return new THREE.BufferAttribute(new Int32Array(e),t)};THREE.Uint32Attribute=function(e,t){return new THREE.BufferAttribute(new Uint32Array(e),t)};THREE.Float32Attribute=function(e,t){return new THREE.BufferAttribute(new Float32Array(e),t)};THREE.Float64Attribute=function(e,t){return new THREE.BufferAttribute(new Float64Array(e),t)};THREE.DynamicBufferAttribute=function(e,t){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.");return new THREE.BufferAttribute(e,t).setDynamic(true)};THREE.InstancedBufferAttribute=function(e,t,r){THREE.BufferAttribute.call(this,e,t);this.meshPerAttribute=r||1};THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);
THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute;THREE.InstancedBufferAttribute.prototype.copy=function(e){THREE.BufferAttribute.prototype.copy.call(this,e);this.meshPerAttribute=e.meshPerAttribute;return this};THREE.InterleavedBuffer=function(e,t){this.uuid=THREE.Math.generateUUID();this.array=e;this.stride=t;this.dynamic=false;this.updateRange={offset:0,count:-1};this.version=0};THREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(e){if(e===true)this.version++},setDynamic:function(e){this.dynamic=e;return this},copy:function(e){this.array=new e.array.constructor(e.array);this.stride=e.stride;this.dynamic=e.dynamic;return this},copyAt:function(e,t,r){e*=this.stride;r*=t.stride;for(var n=0,i=this.stride;n<i;n++){this.array[e+n]=t.array[r+n]}return this},set:function(e,t){if(t===undefined)t=0;this.array.set(e,t);return this},clone:function(){return(new this.constructor).copy(this)}};THREE.InstancedInterleavedBuffer=function(e,t,r){THREE.InterleavedBuffer.call(this,e,t);this.meshPerAttribute=r||1};THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype);THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer;THREE.InstancedInterleavedBuffer.prototype.copy=function(e){THREE.InterleavedBuffer.prototype.copy.call(this,e);this.meshPerAttribute=e.meshPerAttribute;return this};THREE.InterleavedBufferAttribute=function(e,t,r){this.uuid=THREE.Math.generateUUID();this.data=e;this.itemSize=t;this.offset=r};THREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count.");return this.array.length},get count(){return this.data.count},setX:function(e,t){this.data.array[e*this.data.stride+this.offset]=t;return this},setY:function(e,t){this.data.array[e*this.data.stride+this.offset+1]=t;return this},setZ:function(e,t){this.data.array[e*this.data.stride+this.offset+2]=t;return this},setW:function(e,t){this.data.array[e*this.data.stride+this.offset+3]=t;return this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){e=e*this.data.stride+this.offset;this.data.array[e+0]=t;this.data.array[e+1]=r;return this},setXYZ:function(e,t,r,n){e=e*this.data.stride+this.offset;this.data.array[e+0]=t;this.data.array[e+1]=r;this.data.array[e+2]=n;return this},setXYZW:function(e,t,r,n,i){e=e*this.data.stride+this.offset;this.data.array[e+0]=t;this.data.array[e+1]=r;this.data.array[e+2]=n;this.data.array[e+3]=i;return this}};THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.verticesNeedUpdate=false;this.elementsNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.lineDistancesNeedUpdate=false;this.groupsNeedUpdate=false};Object.assign(THREE.Geometry.prototype,THREE.EventDispatcher.prototype,{applyMatrix:function(e){var t=(new THREE.Matrix3).getNormalMatrix(e);for(var r=0,n=this.vertices.length;r<n;r++){var i=this.vertices[r];i.applyMatrix4(e)}for(var r=0,n=this.faces.length;r<n;r++){var a=this.faces[r];a.normal.applyMatrix3(t).normalize();for(var o=0,s=a.vertexNormals.length;o<s;o++){a.vertexNormals[o].applyMatrix3(t).normalize()}}if(this.boundingBox!==null){this.computeBoundingBox()}if(this.boundingSphere!==null){this.computeBoundingSphere()}this.verticesNeedUpdate=true;this.normalsNeedUpdate=true;return this},rotateX:function(){var e;return function t(r){if(e===undefined)e=new THREE.Matrix4;e.makeRotationX(r);this.applyMatrix(e);return this}}(),rotateY:function(){var e;return function t(r){if(e===undefined)e=new THREE.Matrix4;e.makeRotationY(r);this.applyMatrix(e);return this}}(),rotateZ:function(){var e;return function t(r){if(e===undefined)e=new THREE.Matrix4;e.makeRotationZ(r);this.applyMatrix(e);return this}}(),translate:function(){var e;return function t(r,n,i){if(e===undefined)e=new THREE.Matrix4;e.makeTranslation(r,n,i);this.applyMatrix(e);return this}}(),scale:function(){var e;return function t(r,n,i){if(e===undefined)e=new THREE.Matrix4;e.makeScale(r,n,i);this.applyMatrix(e);return this}}(),lookAt:function(){var e;return function t(r){if(e===undefined)e=new THREE.Object3D;e.lookAt(r);e.updateMatrix();this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(e){var t=this;var r=e.index!==null?e.index.array:undefined;var n=e.attributes;var i=n.position.array;var a=n.normal!==undefined?n.normal.array:undefined;var o=n.color!==undefined?n.color.array:undefined;var s=n.uv!==undefined?n.uv.array:undefined;var c=n.uv2!==undefined?n.uv2.array:undefined;if(c!==undefined)this.faceVertexUvs[1]=[];var u=[];var l=[];var h=[];for(var f=0,d=0;f<i.length;f+=3,d+=2){t.vertices.push(new THREE.Vector3(i[f],i[f+1],i[f+2]));if(a!==undefined){u.push(new THREE.Vector3(a[f],a[f+1],a[f+2]))}if(o!==undefined){t.colors.push(new THREE.Color(o[f],o[f+1],o[f+2]))}if(s!==undefined){l.push(new THREE.Vector2(s[d],s[d+1]))}if(c!==undefined){h.push(new THREE.Vector2(c[d],c[d+1]))}}function p(e,r,n,i){var f=a!==undefined?[u[e].clone(),u[r].clone(),u[n].clone()]:[];var d=o!==undefined?[t.colors[e].clone(),t.colors[r].clone(),t.colors[n].clone()]:[];var p=new THREE.Face3(e,r,n,f,d,i);t.faces.push(p);if(s!==undefined){t.faceVertexUvs[0].push([l[e].clone(),l[r].clone(),l[n].clone()])}if(c!==undefined){t.faceVertexUvs[1].push([h[e].clone(),h[r].clone(),h[n].clone()])}}if(r!==undefined){var E=e.groups;if(E.length>0){for(var f=0;f<E.length;f++){var m=E[f];var v=m.start;var g=m.count;for(var d=v,T=v+g;d<T;d+=3){p(r[d],r[d+1],r[d+2],m.materialIndex)}}}else{for(var f=0;f<r.length;f+=3){p(r[f],r[f+1],r[f+2])}}}else{for(var f=0;f<i.length/3;f+=3){p(f,f+1,f+2)}}this.computeFaceNormals();if(e.boundingBox!==null){this.boundingBox=e.boundingBox.clone()}if(e.boundingSphere!==null){this.boundingSphere=e.boundingSphere.clone()}return this},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();this.translate(e.x,e.y,e.z);return e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center;var t=this.boundingSphere.radius;var r=t===0?1:1/t;var n=new THREE.Matrix4;n.set(r,0,0,-r*e.x,0,r,0,-r*e.y,0,0,r,-r*e.z,0,0,0,1);this.applyMatrix(n);return this},computeFaceNormals:function(){var e=new THREE.Vector3,t=new THREE.Vector3;for(var r=0,n=this.faces.length;r<n;r++){var i=this.faces[r];var a=this.vertices[i.a];var o=this.vertices[i.b];var s=this.vertices[i.c];e.subVectors(s,o);t.subVectors(a,o);e.cross(t);e.normalize();i.normal.copy(e)}},computeVertexNormals:function(e){if(e===undefined)e=true;var t,r,n,i,a,o;o=new Array(this.vertices.length);for(t=0,r=this.vertices.length;t<r;t++){o[t]=new THREE.Vector3}if(e){var s,c,u;var l=new THREE.Vector3,h=new THREE.Vector3;for(n=0,i=this.faces.length;n<i;n++){a=this.faces[n];s=this.vertices[a.a];c=this.vertices[a.b];u=this.vertices[a.c];l.subVectors(u,c);h.subVectors(s,c);l.cross(h);o[a.a].add(l);o[a.b].add(l);o[a.c].add(l)}}else{for(n=0,i=this.faces.length;n<i;n++){a=this.faces[n];o[a.a].add(a.normal);o[a.b].add(a.normal);o[a.c].add(a.normal)}}for(t=0,r=this.vertices.length;t<r;t++){o[t].normalize()}for(n=0,i=this.faces.length;n<i;n++){a=this.faces[n];var f=a.vertexNormals;if(f.length===3){f[0].copy(o[a.a]);f[1].copy(o[a.b]);f[2].copy(o[a.c])}else{f[0]=o[a.a].clone();f[1]=o[a.b].clone();f[2]=o[a.c].clone()}}if(this.faces.length>0){this.normalsNeedUpdate=true}},computeMorphNormals:function(){var e,t,r,n,i;for(r=0,n=this.faces.length;r<n;r++){i=this.faces[r];if(!i.__originalFaceNormal){i.__originalFaceNormal=i.normal.clone()}else{i.__originalFaceNormal.copy(i.normal)}if(!i.__originalVertexNormals)i.__originalVertexNormals=[];for(e=0,t=i.vertexNormals.length;e<t;e++){if(!i.__originalVertexNormals[e]){i.__originalVertexNormals[e]=i.vertexNormals[e].clone()}else{i.__originalVertexNormals[e].copy(i.vertexNormals[e])}}}var a=new THREE.Geometry;a.faces=this.faces;for(e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals;var s=this.morphNormals[e].vertexNormals;var c,u;for(r=0,n=this.faces.length;r<n;r++){c=new THREE.Vector3;u={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3};o.push(c);s.push(u)}}var l=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices;a.computeFaceNormals();a.computeVertexNormals();var c,u;for(r=0,n=this.faces.length;r<n;r++){i=this.faces[r];c=l.faceNormals[r];u=l.vertexNormals[r];c.copy(i.normal);u.a.copy(i.vertexNormals[0]);u.b.copy(i.vertexNormals[1]);u.c.copy(i.vertexNormals[2])}}for(r=0,n=this.faces.length;r<n;r++){i=this.faces[r];i.normal=i.__originalFaceNormal;i.vertexNormals=i.__originalVertexNormals}},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){var e=0;var t=this.vertices;for(var r=0,n=t.length;r<n;r++){if(r>0){e+=t[r].distanceTo(t[r-1])}this.lineDistances[r]=e}},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3}this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere}this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(e instanceof THREE.Geometry===false){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}var n,i=this.vertices.length,a=this.vertices,o=e.vertices,s=this.faces,c=e.faces,u=this.faceVertexUvs[0],l=e.faceVertexUvs[0];if(r===undefined)r=0;if(t!==undefined){n=(new THREE.Matrix3).getNormalMatrix(t)}for(var h=0,f=o.length;h<f;h++){var d=o[h];var p=d.clone();if(t!==undefined)p.applyMatrix4(t);a.push(p)}for(h=0,f=c.length;h<f;h++){var E=c[h],m,v,g,T=E.vertexNormals,y=E.vertexColors;m=new THREE.Face3(E.a+i,E.b+i,E.c+i);m.normal.copy(E.normal);if(n!==undefined){m.normal.applyMatrix3(n).normalize()}for(var R=0,x=T.length;R<x;R++){v=T[R].clone();if(n!==undefined){v.applyMatrix3(n).normalize()}m.vertexNormals.push(v)}m.color.copy(E.color);for(var R=0,x=y.length;R<x;R++){g=y[R];m.vertexColors.push(g.clone())}m.materialIndex=E.materialIndex+r;s.push(m)}for(h=0,f=l.length;h<f;h++){var H=l[h],b=[];if(H===undefined){continue}for(var R=0,x=H.length;R<x;R++){b.push(H[R].clone())}u.push(b)}},mergeMesh:function(e){if(e instanceof THREE.Mesh===false){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix();this.merge(e.geometry,e.matrix)},mergeVertices:function(){var e={};var t=[],r=[];var n,i;var a=4;var o=Math.pow(10,a);var s,c,u;var l,h,f;for(s=0,c=this.vertices.length;s<c;s++){n=this.vertices[s];i=Math.round(n.x*o)+"_"+Math.round(n.y*o)+"_"+Math.round(n.z*o);if(e[i]===undefined){e[i]=s;t.push(this.vertices[s]);r[s]=t.length-1}else{r[s]=r[e[i]]}}var d=[];for(s=0,c=this.faces.length;s<c;s++){u=this.faces[s];u.a=r[u.a];u.b=r[u.b];u.c=r[u.c];l=[u.a,u.b,u.c];var p=-1;for(var E=0;E<3;E++){if(l[E]===l[(E+1)%3]){p=E;d.push(s);break}}}for(s=d.length-1;s>=0;s--){var m=d[s];this.faces.splice(m,1);for(h=0,f=this.faceVertexUvs.length;h<f;h++){this.faceVertexUvs[h].splice(m,1)}}var v=this.vertices.length-t.length;this.vertices=t;return v},sortFacesByMaterialIndex:function(){var e=this.faces;var t=e.length;for(var r=0;r<t;r++){e[r]._id=r}function n(e,t){return e.materialIndex-t.materialIndex}e.sort(n);var i=this.faceVertexUvs[0];var a=this.faceVertexUvs[1];var o,s;if(i&&i.length===t)o=[];if(a&&a.length===t)s=[];for(var r=0;r<t;r++){var c=e[r]._id;if(o)o.push(i[c]);if(s)s.push(a[c])}if(o)this.faceVertexUvs[0]=o;if(s)this.faceVertexUvs[1]=s},toJSON:function(){var e={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;if(this.name!=="")e.name=this.name;if(this.parameters!==undefined){var t=this.parameters;for(var r in t){if(t[r]!==undefined)e[r]=t[r]}return e}var n=[];for(var i=0;i<this.vertices.length;i++){var a=this.vertices[i];n.push(a.x,a.y,a.z)}var o=[];var s=[];var c={};var u=[];var l={};var h=[];var f={};for(var i=0;i<this.faces.length;i++){var d=this.faces[i];var p=true;var E=false;var m=this.faceVertexUvs[0][i]!==undefined;var v=d.normal.length()>0;var g=d.vertexNormals.length>0;var T=d.color.r!==1||d.color.g!==1||d.color.b!==1;var y=d.vertexColors.length>0;var R=0;R=_(R,0,0);R=_(R,1,p);R=_(R,2,E);R=_(R,3,m);R=_(R,4,v);R=_(R,5,g);R=_(R,6,T);R=_(R,7,y);o.push(R);o.push(d.a,d.b,d.c);o.push(d.materialIndex);if(m){var x=this.faceVertexUvs[0][i];o.push(S(x[0]),S(x[1]),S(x[2]))}if(v){o.push(M(d.normal))}if(g){var H=d.vertexNormals;o.push(M(H[0]),M(H[1]),M(H[2]))}if(T){o.push(w(d.color))}if(y){var b=d.vertexColors;o.push(w(b[0]),w(b[1]),w(b[2]))}}function _(e,t,r){return r?e|1<<t:e&~(1<<t)}function M(e){var t=e.x.toString()+e.y.toString()+e.z.toString();if(c[t]!==undefined){return c[t]}c[t]=s.length/3;s.push(e.x,e.y,e.z);return c[t]}function w(e){var t=e.r.toString()+e.g.toString()+e.b.toString();if(l[t]!==undefined){return l[t]}l[t]=u.length;u.push(e.getHex());return l[t]}function S(e){var t=e.x.toString()+e.y.toString();if(f[t]!==undefined){return f[t]}f[t]=h.length/2;h.push(e.x,e.y);return f[t]}e.data={};e.data.vertices=n;e.data.normals=s;if(u.length>0)e.data.colors=u;if(h.length>0)e.data.uvs=[h];e.data.faces=o;return e},clone:function(){return(new THREE.Geometry).copy(this)},copy:function(e){this.vertices=[];this.faces=[];this.faceVertexUvs=[[]];var t=e.vertices;for(var r=0,n=t.length;r<n;r++){this.vertices.push(t[r].clone())}var i=e.faces;for(var r=0,n=i.length;r<n;r++){this.faces.push(i[r].clone())}for(var r=0,n=e.faceVertexUvs.length;r<n;r++){var a=e.faceVertexUvs[r];if(this.faceVertexUvs[r]===undefined){this.faceVertexUvs[r]=[]}for(var o=0,s=a.length;o<s;o++){var c=a[o],u=[];for(var l=0,h=c.length;l<h;l++){var f=c[l];u.push(f.clone())}this.faceVertexUvs[r].push(u)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});THREE.GeometryIdCount=0;THREE.DirectGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="DirectGeometry";this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingBox=null;this.boundingSphere=null;this.verticesNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.uvsNeedUpdate=false;this.groupsNeedUpdate=false};Object.assign(THREE.DirectGeometry.prototype,THREE.EventDispatcher.prototype,{computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(e){var t;var r=[];var n;var i=e.faces;for(var a=0;a<i.length;a++){var o=i[a];if(o.materialIndex!==n){n=o.materialIndex;if(t!==undefined){t.count=a*3-t.start;r.push(t)}t={start:a*3,materialIndex:n}}}if(t!==undefined){t.count=a*3-t.start;r.push(t)}this.groups=r},fromGeometry:function(e){var t=e.faces;var r=e.vertices;var n=e.faceVertexUvs;var i=n[0]&&n[0].length>0;var a=n[1]&&n[1].length>0;var o=e.morphTargets;var s=o.length;var c;if(s>0){c=[];for(var u=0;u<s;u++){c[u]=[]}this.morphTargets.position=c}var l=e.morphNormals;var h=l.length;var f;if(h>0){f=[];for(var u=0;u<h;u++){f[u]=[]}this.morphTargets.normal=f}var d=e.skinIndices;var p=e.skinWeights;var E=d.length===r.length;var m=p.length===r.length;for(var u=0;u<t.length;u++){var v=t[u];this.vertices.push(r[v.a],r[v.b],r[v.c]);var g=v.vertexNormals;if(g.length===3){this.normals.push(g[0],g[1],g[2])}else{var T=v.normal;this.normals.push(T,T,T)}var y=v.vertexColors;if(y.length===3){this.colors.push(y[0],y[1],y[2])}else{var R=v.color;this.colors.push(R,R,R)}if(i===true){var x=n[0][u];if(x!==undefined){this.uvs.push(x[0],x[1],x[2])}else{console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",u);this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)}}if(a===true){var x=n[1][u];if(x!==undefined){this.uvs2.push(x[0],x[1],x[2])}else{console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",u);this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)}}for(var H=0;H<s;H++){var b=o[H].vertices;c[H].push(b[v.a],b[v.b],b[v.c])}for(var H=0;H<h;H++){var _=l[H].vertexNormals[u];f[H].push(_.a,_.b,_.c)}if(E){this.skinIndices.push(d[v.a],d[v.b],d[v.c])}if(m){this.skinWeights.push(p[v.a],p[v.b],p[v.c])}}this.computeGroups(e);this.verticesNeedUpdate=e.verticesNeedUpdate;this.normalsNeedUpdate=e.normalsNeedUpdate;this.colorsNeedUpdate=e.colorsNeedUpdate;this.uvsNeedUpdate=e.uvsNeedUpdate;this.groupsNeedUpdate=e.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity}};Object.assign(THREE.BufferGeometry.prototype,THREE.EventDispatcher.prototype,{getIndex:function(){return this.index},setIndex:function(e){this.index=e},addAttribute:function(e,t){if(t instanceof THREE.BufferAttribute===false&&t instanceof THREE.InterleavedBufferAttribute===false){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).");this.addAttribute(e,new THREE.BufferAttribute(arguments[1],arguments[2]));return}if(e==="index"){console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.");this.setIndex(t);return}this.attributes[e]=t;return this},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){delete this.attributes[e];return this},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:r!==undefined?r:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e;this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;if(t!==undefined){e.applyToVector3Array(t.array);t.needsUpdate=true}var r=this.attributes.normal;if(r!==undefined){var n=(new THREE.Matrix3).getNormalMatrix(e);n.applyToVector3Array(r.array);r.needsUpdate=true}if(this.boundingBox!==null){this.computeBoundingBox()}if(this.boundingSphere!==null){this.computeBoundingSphere()}return this},rotateX:function(){var e;return function t(r){if(e===undefined)e=new THREE.Matrix4;e.makeRotationX(r);this.applyMatrix(e);return this}}(),rotateY:function(){var e;return function t(r){if(e===undefined)e=new THREE.Matrix4;e.makeRotationY(r);this.applyMatrix(e);return this}}(),rotateZ:function(){var e;return function t(r){if(e===undefined)e=new THREE.Matrix4;e.makeRotationZ(r);this.applyMatrix(e);return this}}(),translate:function(){var e;return function t(r,n,i){if(e===undefined)e=new THREE.Matrix4;e.makeTranslation(r,n,i);this.applyMatrix(e);return this}}(),scale:function(){var e;return function t(r,n,i){if(e===undefined)e=new THREE.Matrix4;e.makeScale(r,n,i);this.applyMatrix(e);return this}}(),lookAt:function(){var e;return function t(r){if(e===undefined)e=new THREE.Object3D;e.lookAt(r);e.updateMatrix();this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();this.translate(e.x,e.y,e.z);return e},setFromObject:function(e){var t=e.geometry;if(e instanceof THREE.Points||e instanceof THREE.Line){var r=new THREE.Float32Attribute(t.vertices.length*3,3);var n=new THREE.Float32Attribute(t.colors.length*3,3);this.addAttribute("position",r.copyVector3sArray(t.vertices));this.addAttribute("color",n.copyColorsArray(t.colors));if(t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new THREE.Float32Attribute(t.lineDistances.length,1);this.addAttribute("lineDistance",i.copyArray(t.lineDistances))}if(t.boundingSphere!==null){this.boundingSphere=t.boundingSphere.clone()}if(t.boundingBox!==null){this.boundingBox=t.boundingBox.clone()}}else if(e instanceof THREE.Mesh){if(t instanceof THREE.Geometry){this.fromGeometry(t)}}return this},updateFromObject:function(e){var t=e.geometry;if(e instanceof THREE.Mesh){var r=t.__directGeometry;if(r===undefined){return this.fromGeometry(t)}r.verticesNeedUpdate=t.verticesNeedUpdate;r.normalsNeedUpdate=t.normalsNeedUpdate;r.colorsNeedUpdate=t.colorsNeedUpdate;r.uvsNeedUpdate=t.uvsNeedUpdate;r.groupsNeedUpdate=t.groupsNeedUpdate;t.verticesNeedUpdate=false;t.normalsNeedUpdate=false;t.colorsNeedUpdate=false;t.uvsNeedUpdate=false;t.groupsNeedUpdate=false;t=r}if(t.verticesNeedUpdate===true){var n=this.attributes.position;if(n!==undefined){n.copyVector3sArray(t.vertices);n.needsUpdate=true}t.verticesNeedUpdate=false}if(t.normalsNeedUpdate===true){var n=this.attributes.normal;if(n!==undefined){n.copyVector3sArray(t.normals);n.needsUpdate=true}t.normalsNeedUpdate=false}if(t.colorsNeedUpdate===true){var n=this.attributes.color;if(n!==undefined){n.copyColorsArray(t.colors);n.needsUpdate=true}t.colorsNeedUpdate=false}if(t.uvsNeedUpdate){var n=this.attributes.uv;if(n!==undefined){n.copyVector2sArray(t.uvs);n.needsUpdate=true}t.uvsNeedUpdate=false}if(t.lineDistancesNeedUpdate){var n=this.attributes.lineDistance;if(n!==undefined){n.copyArray(t.lineDistances);n.needsUpdate=true}t.lineDistancesNeedUpdate=false}if(t.groupsNeedUpdate){t.computeGroups(e.geometry);this.groups=t.groups;t.groupsNeedUpdate=false}return this},fromGeometry:function(e){e.__directGeometry=(new THREE.DirectGeometry).fromGeometry(e);return this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(e.vertices.length*3);this.addAttribute("position",new THREE.BufferAttribute(t,3).copyVector3sArray(e.vertices));if(e.normals.length>0){var r=new Float32Array(e.normals.length*3);this.addAttribute("normal",new THREE.BufferAttribute(r,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var n=new Float32Array(e.colors.length*3);this.addAttribute("color",new THREE.BufferAttribute(n,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var i=new Float32Array(e.uvs.length*2);this.addAttribute("uv",new THREE.BufferAttribute(i,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var a=new Float32Array(e.uvs2.length*2);this.addAttribute("uv2",new THREE.BufferAttribute(a,2).copyVector2sArray(e.uvs2))}if(e.indices.length>0){var o=e.vertices.length>65535?Uint32Array:Uint16Array;var s=new o(e.indices.length*3);this.setIndex(new THREE.BufferAttribute(s,1).copyIndicesArray(e.indices))}this.groups=e.groups;for(var c in e.morphTargets){var u=[];var l=e.morphTargets[c];for(var h=0,f=l.length;h<f;h++){var d=l[h];var p=new THREE.Float32Attribute(d.length*3,3);u.push(p.copyVector3sArray(d))}this.morphAttributes[c]=u}if(e.skinIndices.length>0){var E=new THREE.Float32Attribute(e.skinIndices.length*4,4);this.addAttribute("skinIndex",E.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var m=new THREE.Float32Attribute(e.skinWeights.length*4,4);this.addAttribute("skinWeight",m.copyVector4sArray(e.skinWeights))}if(e.boundingSphere!==null){this.boundingSphere=e.boundingSphere.clone()}if(e.boundingBox!==null){this.boundingBox=e.boundingBox.clone()}return this},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3}var e=this.attributes.position.array;if(e!==undefined){this.boundingBox.setFromArray(e)}else{this.boundingBox.makeEmpty()}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},computeBoundingSphere:function(){var e=new THREE.Box3;var t=new THREE.Vector3;return function r(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere}var r=this.attributes.position.array;if(r){var n=this.boundingSphere.center;e.setFromArray(r);e.center(n);var i=0;for(var a=0,o=r.length;a<o;a+=3){t.fromArray(r,a);i=Math.max(i,n.distanceToSquared(t))}this.boundingSphere.radius=Math.sqrt(i);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index;var t=this.attributes;var r=this.groups;if(t.position){var n=t.position.array;if(t.normal===undefined){this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(n.length),3))}else{var i=t.normal.array;for(var a=0,o=i.length;a<o;a++){i[a]=0}}var s=t.normal.array;var c,u,l,h=new THREE.Vector3,f=new THREE.Vector3,d=new THREE.Vector3,p=new THREE.Vector3,E=new THREE.Vector3;if(e){var m=e.array;if(r.length===0){this.addGroup(0,m.length)}for(var v=0,g=r.length;v<g;++v){var T=r[v];var y=T.start;var R=T.count;for(var a=y,o=y+R;a<o;a+=3){c=m[a+0]*3;u=m[a+1]*3;l=m[a+2]*3;h.fromArray(n,c);f.fromArray(n,u);d.fromArray(n,l);p.subVectors(d,f);E.subVectors(h,f);p.cross(E);s[c]+=p.x;s[c+1]+=p.y;s[c+2]+=p.z;s[u]+=p.x;s[u+1]+=p.y;s[u+2]+=p.z;s[l]+=p.x;s[l+1]+=p.y;s[l+2]+=p.z}}}else{for(var a=0,o=n.length;a<o;a+=9){h.fromArray(n,a);f.fromArray(n,a+3);d.fromArray(n,a+6);p.subVectors(d,f);E.subVectors(h,f);p.cross(E);s[a]=p.x;s[a+1]=p.y;s[a+2]=p.z;s[a+3]=p.x;s[a+4]=p.y;s[a+5]=p.z;s[a+6]=p.x;s[a+7]=p.y;s[a+8]=p.z}}this.normalizeNormals();t.normal.needsUpdate=true}},merge:function(e,t){if(e instanceof THREE.BufferGeometry===false){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}if(t===undefined)t=0;var r=this.attributes;for(var n in r){if(e.attributes[n]===undefined)continue;var i=r[n];var a=i.array;var o=e.attributes[n];var s=o.array;var c=o.itemSize;for(var u=0,l=c*t;u<s.length;u++,l++){a[l]=s[u]}}return this},normalizeNormals:function(){var e=this.attributes.normal.array;var t,r,n,i;for(var a=0,o=e.length;a<o;a+=3){t=e[a];r=e[a+1];n=e[a+2];i=1/Math.sqrt(t*t+r*r+n*n);e[a]*=i;e[a+1]*=i;e[a+2]*=i}},toNonIndexed:function(){if(this.index===null){console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.");return this}var e=new THREE.BufferGeometry;var t=this.index.array;var r=this.attributes;for(var n in r){var i=r[n];var a=i.array;var o=i.itemSize;var s=new a.constructor(t.length*o);var c=0,u=0;for(var l=0,h=t.length;l<h;l++){c=t[l]*o;for(var f=0;f<o;f++){s[u++]=a[c++]}}e.addAttribute(n,new THREE.BufferAttribute(s,o))}return e},toJSON:function(){var e={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;if(this.name!=="")e.name=this.name;if(this.parameters!==undefined){var t=this.parameters;for(var r in t){if(t[r]!==undefined)e[r]=t[r]}return e}e.data={attributes:{}};var n=this.index;if(n!==null){var i=Array.prototype.slice.call(n.array);e.data.index={type:n.array.constructor.name,array:i}}var a=this.attributes;for(var r in a){var o=a[r];var i=Array.prototype.slice.call(o.array);e.data.attributes[r]={itemSize:o.itemSize,type:o.array.constructor.name,array:i,normalized:o.normalized}}var s=this.groups;if(s.length>0){e.data.groups=JSON.parse(JSON.stringify(s))}var c=this.boundingSphere;if(c!==null){e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}}return e},clone:function(){return(new THREE.BufferGeometry).copy(this)},copy:function(e){var t=e.index;if(t!==null){this.setIndex(t.clone())}var r=e.attributes;for(var n in r){var i=r[n];this.addAttribute(n,i.clone())}var a=e.groups;for(var o=0,s=a.length;o<s;o++){var c=a[o];this.addGroup(c.start,c.count,c.materialIndex)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});THREE.BufferGeometry.MaxIndex=65535;THREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this);this.type="InstancedBufferGeometry";this.maxInstancedCount=undefined};THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry;THREE.InstancedBufferGeometry.prototype.addGroup=function(e,t,r){this.groups.push({start:e,count:t,instances:r})};THREE.InstancedBufferGeometry.prototype.copy=function(e){var t=e.index;if(t!==null){this.setIndex(t.clone())}var r=e.attributes;for(var n in r){var i=r[n];this.addAttribute(n,i.clone())}var a=e.groups;for(var o=0,s=a.length;o<s;o++){var c=a[o];this.addGroup(c.start,c.count,c.instances)}return this};THREE.Uniform=function(e){if(typeof e==="string"){console.warn("THREE.Uniform: Type parameter is no longer needed.");e=arguments[1]}this.value=e;this.dynamic=false};THREE.Uniform.prototype={constructor:THREE.Uniform,onUpdate:function(e){this.dynamic=true;this.onUpdateCallback=e;return this}};THREE.AnimationAction=function(){throw new Error("THREE.AnimationAction: "+"Use mixer.clipAction for construction.")};THREE.AnimationAction._new=function e(t,r,n){this._mixer=t;this._clip=r;this._localRoot=n||null;var i=r.tracks,a=i.length,o=new Array(a);var s={endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding};for(var c=0;c!==a;++c){var u=i[c].createInterpolant(null);o[c]=u;u.settings=s}this._interpolantSettings=s;this._interpolants=o;this._propertyBindings=new Array(a);this._cacheIndex=null;this._byClipCacheIndex=null;this._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=THREE.LoopRepeat;this._loopCount=-1;this._startTime=null;this.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;this.paused=false;this.enabled=true;this.clampWhenFinished=false;this.zeroSlopeAtStart=true;this.zeroSlopeAtEnd=true};THREE.AnimationAction._new.prototype={constructor:THREE.AnimationAction._new,play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=false;this.enabled=true;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){var e=this._startTime;return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){this._startTime=e;return this},setLoop:function(e,t){this.loop=e;this.repetitions=t;return this},setEffectiveWeight:function(e){this.weight=e;this._effectiveWeight=this.enabled?e:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,r){var n=this._mixer;e.fadeOut(t);this.fadeIn(t);if(r){var i=this._clip.duration,a=e._clip.duration,o=a/i,s=i/a;e.warp(1,o,t);this.warp(s,1,t)}return this},crossFadeTo:function(e,t,r){return e.crossFadeFrom(this,t,r)},stopFading:function(){var e=this._weightInterpolant;if(e!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(e);
}return this},setEffectiveTimeScale:function(e){this.timeScale=e;this._effectiveTimeScale=this.paused?0:e;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){this.timeScale=this._clip.duration/e;return this.stopWarping()},syncWith:function(e){this.time=e.time;this.timeScale=e.timeScale;return this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,r){var n=this._mixer,i=n.time,a=this._timeScaleInterpolant,o=this.timeScale;if(a===null){a=n._lendControlInterpolant(),this._timeScaleInterpolant=a}var s=a.parameterPositions,c=a.sampleValues;s[0]=i;s[1]=i+r;c[0]=e/o;c[1]=t/o;return this},stopWarping:function(){var e=this._timeScaleInterpolant;if(e!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(e)}return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,r,n){var i=this._startTime;if(i!==null){var a=(e-i)*r;if(a<0||r===0){return}this._startTime=null;t=r*a}t*=this._updateTimeScale(e);var o=this._updateTime(t);var s=this._updateWeight(e);if(s>0){var c=this._interpolants;var u=this._propertyBindings;for(var l=0,h=c.length;l!==h;++l){c[l].evaluate(o);u[l].accumulate(n,s)}}},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var r=this._weightInterpolant;if(r!==null){var n=r.evaluate(e)[0];t*=n;if(e>r.parameterPositions[1]){this.stopFading();if(n===0){this.enabled=false}}}}this._effectiveWeight=t;return t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var r=this._timeScaleInterpolant;if(r!==null){var n=r.evaluate(e)[0];t*=n;if(e>r.parameterPositions[1]){this.stopWarping();if(t===0){this.paused=true}else{this.timeScale=t}}}}this._effectiveTimeScale=t;return t},_updateTime:function(e){var t=this.time+e;if(e===0)return t;var r=this._clip.duration,n=this.loop,i=this._loopCount;if(n===THREE.LoopOnce){if(i===-1){this.loopCount=0;this._setEndings(true,true,false)}e:{if(t>=r){t=r}else if(t<0){t=0}else break e;if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{var a=n===THREE.LoopPingPong;if(i===-1){if(e>=0){i=0;this._setEndings(true,this.repetitions===0,a)}else{this._setEndings(this.repetitions===0,true,a)}}if(t>=r||t<0){var o=Math.floor(t/r);t-=r*o;i+=Math.abs(o);var s=this.repetitions-i;if(s<0){if(this.clampWhenFinished)this.paused=true;else this.enabled=false;t=e>0?r:0;this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1})}else{if(s===0){var c=e<0;this._setEndings(c,!c,a)}else{this._setEndings(false,false,a)}this._loopCount=i;this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}if(a&&(i&1)===1){this.time=t;return r-t}}this.time=t;return t},_setEndings:function(e,t,r){var n=this._interpolantSettings;if(r){n.endingStart=THREE.ZeroSlopeEnding;n.endingEnd=THREE.ZeroSlopeEnding}else{if(e){n.endingStart=this.zeroSlopeAtStart?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding}else{n.endingStart=THREE.WrapAroundEnding}if(t){n.endingEnd=this.zeroSlopeAtEnd?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding}else{n.endingEnd=THREE.WrapAroundEnding}}},_scheduleFading:function(e,t,r){var n=this._mixer,i=n.time,a=this._weightInterpolant;if(a===null){a=n._lendControlInterpolant(),this._weightInterpolant=a}var o=a.parameterPositions,s=a.sampleValues;o[0]=i;s[0]=t;o[1]=i+e;s[1]=r;return this}};THREE.AnimationClip=function(e,t,r){this.name=e;this.tracks=r;this.duration=t!==undefined?t:-1;this.uuid=THREE.Math.generateUUID();if(this.duration<0){this.resetDuration()}this.trim();this.optimize()};THREE.AnimationClip.prototype={constructor:THREE.AnimationClip,resetDuration:function(){var e=this.tracks,t=0;for(var r=0,n=e.length;r!==n;++r){var i=this.tracks[r];t=Math.max(t,i.times[i.times.length-1])}this.duration=t},trim:function(){for(var e=0;e<this.tracks.length;e++){this.tracks[e].trim(0,this.duration)}return this},optimize:function(){for(var e=0;e<this.tracks.length;e++){this.tracks[e].optimize()}return this}};Object.assign(THREE.AnimationClip,{parse:function(e){var t=[],r=e.tracks,n=1/(e.fps||1);for(var i=0,a=r.length;i!==a;++i){t.push(THREE.KeyframeTrack.parse(r[i]).scale(n))}return new THREE.AnimationClip(e.name,e.duration,t)},toJSON:function(e){var t=[],r=e.tracks;var n={name:e.name,duration:e.duration,tracks:t};for(var i=0,a=r.length;i!==a;++i){t.push(THREE.KeyframeTrack.toJSON(r[i]))}return n},CreateFromMorphTargetSequence:function(e,t,r,n){var i=t.length;var a=[];for(var o=0;o<i;o++){var s=[];var c=[];s.push((o+i-1)%i,o,(o+1)%i);c.push(0,1,0);var u=THREE.AnimationUtils.getKeyframeOrder(s);s=THREE.AnimationUtils.sortedArray(s,1,u);c=THREE.AnimationUtils.sortedArray(c,1,u);if(!n&&s[0]===0){s.push(i);c.push(c[0])}a.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences["+t[o].name+"]",s,c).scale(1/r))}return new THREE.AnimationClip(e,-1,a)},findByName:function(e,t){var r=e;if(!Array.isArray(e)){var n=e;r=n.geometry&&n.geometry.animations||n.animations}for(var i=0;i<r.length;i++){if(r[i].name===t){return r[i]}}return null},CreateClipsFromMorphTargetSequences:function(e,t,r){var n={};var i=/^([\w-]*?)([\d]+)$/;for(var a=0,o=e.length;a<o;a++){var s=e[a];var c=s.name.match(i);if(c&&c.length>1){var u=c[1];var l=n[u];if(!l){n[u]=l=[]}l.push(s)}}var h=[];for(var u in n){h.push(THREE.AnimationClip.CreateFromMorphTargetSequence(u,n[u],t,r))}return h},parseAnimation:function(e,t,r){if(!e){console.error("  no animation in JSONLoader data");return null}var n=function(e,t,r,n,i){if(r.length!==0){var a=[];var o=[];THREE.AnimationUtils.flattenJSON(r,a,o,n);if(a.length!==0){i.push(new e(t,a,o))}}};var i=[];var a=e.name||"default";var o=e.length||-1;var s=e.fps||30;var c=e.hierarchy||[];for(var u=0;u<c.length;u++){var l=c[u].keys;if(!l||l.length===0)continue;if(l[0].morphTargets){var h={};for(var f=0;f<l.length;f++){if(l[f].morphTargets){for(var d=0;d<l[f].morphTargets.length;d++){h[l[f].morphTargets[d]]=-1}}}for(var p in h){var E=[];var m=[];for(var d=0;d!==l[f].morphTargets.length;++d){var v=l[f];E.push(v.time);m.push(v.morphTarget===p?1:0)}i.push(new THREE.NumberKeyframeTrack(".morphTargetInfluence["+p+"]",E,m))}o=h.length*(s||1)}else{var g=".bones["+t[u].name+"]";n(THREE.VectorKeyframeTrack,g+".position",l,"pos",i);n(THREE.QuaternionKeyframeTrack,g+".quaternion",l,"rot",i);n(THREE.VectorKeyframeTrack,g+".scale",l,"scl",i)}}if(i.length===0){return null}var T=new THREE.AnimationClip(a,o,i);return T}});THREE.AnimationMixer=function(e){this._root=e;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1};Object.assign(THREE.AnimationMixer.prototype,THREE.EventDispatcher.prototype,{clipAction:function(e,t){var r=t||this._root,n=r.uuid,i=typeof e==="string"?THREE.AnimationClip.findByName(r,e):e,a=i!==null?i.uuid:e,o=this._actionsByClip[a],s=null;if(o!==undefined){var c=o.actionByRoot[n];if(c!==undefined){return c}s=o.knownActions[0];if(i===null)i=s._clip}if(i===null)return null;var u=new THREE.AnimationMixer._Action(this,i,t);this._bindAction(u,s);this._addInactiveAction(u,a,n);return u},existingAction:function(e,t){var r=t||this._root,n=r.uuid,i=typeof e==="string"?THREE.AnimationClip.findByName(r,e):e,a=i?i.uuid:e,o=this._actionsByClip[a];if(o!==undefined){return o.actionByRoot[n]||null}return null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,r=this._bindings,n=this._nActiveBindings;this._nActiveActions=0;this._nActiveBindings=0;for(var i=0;i!==t;++i){e[i].reset()}for(var i=0;i!==n;++i){r[i].useCount=0}return this},update:function(e){e*=this.timeScale;var t=this._actions,r=this._nActiveActions,n=this.time+=e,i=Math.sign(e),a=this._accuIndex^=1;for(var o=0;o!==r;++o){var s=t[o];if(s.enabled){s._update(n,e,i,a)}}var c=this._bindings,u=this._nActiveBindings;for(var o=0;o!==u;++o){c[o].apply(a)}return this},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,r=e.uuid,n=this._actionsByClip,i=n[r];if(i!==undefined){var a=i.knownActions;for(var o=0,s=a.length;o!==s;++o){var c=a[o];this._deactivateAction(c);var u=c._cacheIndex,l=t[t.length-1];c._cacheIndex=null;c._byClipCacheIndex=null;l._cacheIndex=u;t[u]=l;t.pop();this._removeInactiveBindingsForAction(c)}delete n[r]}},uncacheRoot:function(e){var t=e.uuid,r=this._actionsByClip;for(var n in r){var i=r[n].actionByRoot,a=i[t];if(a!==undefined){this._deactivateAction(a);this._removeInactiveAction(a)}}var o=this._bindingsByRootAndName,s=o[t];if(s!==undefined){for(var c in s){var u=s[c];u.restoreOriginalState();this._removeInactiveBinding(u)}}},uncacheAction:function(e,t){var r=this.existingAction(e,t);if(r!==null){this._deactivateAction(r);this._removeInactiveAction(r)}}});THREE.AnimationMixer._Action=THREE.AnimationAction._new;Object.assign(THREE.AnimationMixer.prototype,{_bindAction:function(e,t){var r=e._localRoot||this._root,n=e._clip.tracks,i=n.length,a=e._propertyBindings,o=e._interpolants,s=r.uuid,c=this._bindingsByRootAndName,u=c[s];if(u===undefined){u={};c[s]=u}for(var l=0;l!==i;++l){var h=n[l],f=h.name,d=u[f];if(d!==undefined){a[l]=d}else{d=a[l];if(d!==undefined){if(d._cacheIndex===null){++d.referenceCount;this._addInactiveBinding(d,s,f)}continue}var p=t&&t._propertyBindings[l].binding.parsedPath;d=new THREE.PropertyMixer(THREE.PropertyBinding.create(r,f,p),h.ValueTypeName,h.getValueSize());++d.referenceCount;this._addInactiveBinding(d,s,f);a[l]=d}o[l].resultBuffer=d.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){var t=(e._localRoot||this._root).uuid,r=e._clip.uuid,n=this._actionsByClip[r];this._bindAction(e,n&&n.knownActions[0]);this._addInactiveAction(e,r,t)}var i=e._propertyBindings;for(var a=0,o=i.length;a!==o;++a){var s=i[a];if(s.useCount++===0){this._lendBinding(s);s.saveOriginalState()}}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){var t=e._propertyBindings;for(var r=0,n=t.length;r!==n;++r){var i=t[r];if(--i.useCount===0){i.restoreOriginalState();this._takeBackBinding(i)}}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,r){var n=this._actions,i=this._actionsByClip,a=i[t];if(a===undefined){a={knownActions:[e],actionByRoot:{}};e._byClipCacheIndex=0;i[t]=a}else{var o=a.knownActions;e._byClipCacheIndex=o.length;o.push(e)}e._cacheIndex=n.length;n.push(e);a.actionByRoot[r]=e},_removeInactiveAction:function(e){var t=this._actions,r=t[t.length-1],n=e._cacheIndex;r._cacheIndex=n;t[n]=r;t.pop();e._cacheIndex=null;var i=e._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,c=s[s.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u;s[u]=c;s.pop();e._byClipCacheIndex=null;var l=o.actionByRoot,h=(t._localRoot||this._root).uuid;delete l[h];if(s.length===0){delete a[i]}this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){var t=e._propertyBindings;for(var r=0,n=t.length;r!==n;++r){var i=t[r];if(--i.referenceCount===0){this._removeInactiveBinding(i)}}},_lendAction:function(e){var t=this._actions,r=e._cacheIndex,n=this._nActiveActions++,i=t[n];e._cacheIndex=n;t[n]=e;i._cacheIndex=r;t[r]=i},_takeBackAction:function(e){var t=this._actions,r=e._cacheIndex,n=--this._nActiveActions,i=t[n];e._cacheIndex=n;t[n]=e;i._cacheIndex=r;t[r]=i},_addInactiveBinding:function(e,t,r){var n=this._bindingsByRootAndName,i=n[t],a=this._bindings;if(i===undefined){i={};n[t]=i}i[r]=e;e._cacheIndex=a.length;a.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,r=e.binding,n=r.rootNode.uuid,i=r.path,a=this._bindingsByRootAndName,o=a[n],s=t[t.length-1],c=e._cacheIndex;s._cacheIndex=c;t[c]=s;t.pop();delete o[i];e:{for(var u in o)break e;delete a[n]}},_lendBinding:function(e){var t=this._bindings,r=e._cacheIndex,n=this._nActiveBindings++,i=t[n];e._cacheIndex=n;t[n]=e;i._cacheIndex=r;t[r]=i},_takeBackBinding:function(e){var t=this._bindings,r=e._cacheIndex,n=--this._nActiveBindings,i=t[n];e._cacheIndex=n;t[n]=e;i._cacheIndex=r;t[r]=i},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,r=e[t];if(r===undefined){r=new THREE.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);r.__cacheIndex=t;e[t]=r}return r},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,r=e.__cacheIndex,n=--this._nActiveControlInterpolants,i=t[n];e.__cacheIndex=n;t[n]=e;i.__cacheIndex=r;t[r]=i},_controlInterpolantsResultBuffer:new Float32Array(1)});THREE.AnimationObjectGroup=function(e){this.uuid=THREE.Math.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var r=0,n=arguments.length;r!==n;++r){t[arguments[r].uuid]=r}this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}};THREE.AnimationObjectGroup.prototype={constructor:THREE.AnimationObjectGroup,add:function(e){var t=this._objects,r=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,a=this._paths,o=this._parsedPaths,s=this._bindings,c=s.length;for(var u=0,l=arguments.length;u!==l;++u){var h=arguments[u],f=h.uuid,d=i[f];if(d===undefined){d=r++;i[f]=d;t.push(h);for(var p=0,E=c;p!==E;++p){s[p].push(new THREE.PropertyBinding(h,a[p],o[p]))}}else if(d<n){var m=t[d];var v=--n,g=t[v];i[g.uuid]=d;t[d]=g;i[f]=v;t[v]=h;for(var p=0,E=c;p!==E;++p){var T=s[p],y=T[v],R=T[d];T[d]=y;if(R===undefined){R=new THREE.PropertyBinding(h,a[p],o[p])}T[v]=R}}else if(t[d]!==m){console.error("Different objects with the same UUID "+"detected. Clean the caches or recreate your "+"infrastructure when reloading scenes...")}}this.nCachedObjects_=n},remove:function(e){var t=this._objects,r=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,a=this._bindings,o=a.length;for(var s=0,c=arguments.length;s!==c;++s){var u=arguments[s],l=u.uuid,h=i[l];if(h!==undefined&&h>=n){var f=n++,d=t[f];i[d.uuid]=h;t[h]=d;i[l]=f;t[f]=u;for(var p=0,E=o;p!==E;++p){var m=a[p],v=m[f],g=m[h];m[h]=v;m[f]=g}}}this.nCachedObjects_=n},uncache:function(e){var t=this._objects,r=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,a=this._bindings,o=a.length;for(var s=0,c=arguments.length;s!==c;++s){var u=arguments[s],l=u.uuid,h=i[l];if(h!==undefined){delete i[l];if(h<n){var f=--n,d=t[f],p=--r,E=t[p];i[d.uuid]=h;t[h]=d;i[E.uuid]=f;t[f]=E;t.pop();for(var m=0,v=o;m!==v;++m){var g=a[m],T=g[f],y=g[p];g[h]=T;g[f]=y;g.pop()}}else{var p=--r,E=t[p];i[E.uuid]=h;t[h]=E;t.pop();for(var m=0,v=o;m!==v;++m){var g=a[m];g[h]=g[p];g.pop()}}}}this.nCachedObjects_=n},subscribe_:function(e,t){var r=this._bindingsIndicesByPath,n=r[e],i=this._bindings;if(n!==undefined)return i[n];var a=this._paths,o=this._parsedPaths,s=this._objects,c=s.length,u=this.nCachedObjects_,l=new Array(c);n=i.length;r[e]=n;a.push(e);o.push(t);i.push(l);for(var h=u,f=s.length;h!==f;++h){var d=s[h];l[h]=new THREE.PropertyBinding(d,e,t)}return l},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,r=t[e];if(r!==undefined){var n=this._paths,i=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o],c=e[o];t[c]=r;a[r]=s;a.pop();i[r]=i[o];i.pop();n[r]=n[o];n.pop()}}};THREE.AnimationUtils={arraySlice:function(e,t,r){if(THREE.AnimationUtils.isTypedArray(e)){return new e.constructor(e.subarray(t,r))}return e.slice(t,r)},convertArray:function(e,t,r){if(!e||!r&&e.constructor===t)return e;if(typeof t.BYTES_PER_ELEMENT==="number"){return new t(e)}return Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(t,r){return e[t]-e[r]}var r=e.length;var n=new Array(r);for(var i=0;i!==r;++i)n[i]=i;n.sort(t);return n},sortedArray:function(e,t,r){var n=e.length;var i=new e.constructor(n);for(var a=0,o=0;o!==n;++a){var s=r[a]*t;for(var c=0;c!==t;++c){i[o++]=e[s+c]}}return i},flattenJSON:function(e,t,r,n){var i=1,a=e[0];while(a!==undefined&&a[n]===undefined){a=e[i++]}if(a===undefined)return;var o=a[n];if(o===undefined)return;if(Array.isArray(o)){do{o=a[n];if(o!==undefined){t.push(a.time);r.push.apply(r,o)}a=e[i++]}while(a!==undefined)}else if(o.toArray!==undefined){do{o=a[n];if(o!==undefined){t.push(a.time);o.toArray(r,r.length)}a=e[i++]}while(a!==undefined)}else{do{o=a[n];if(o!==undefined){t.push(a.time);r.push(o)}a=e[i++]}while(a!==undefined)}}};THREE.KeyframeTrack=function(e,t,r,n){if(e===undefined)throw new Error("track name is undefined");if(t===undefined||t.length===0){throw new Error("no keyframes in track named "+e)}this.name=e;this.times=THREE.AnimationUtils.convertArray(t,this.TimeBufferType);this.values=THREE.AnimationUtils.convertArray(r,this.ValueBufferType);this.setInterpolation(n||this.DefaultInterpolation);this.validate();this.optimize()};THREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(e){return new THREE.DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new THREE.LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new THREE.CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case THREE.InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case THREE.InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case THREE.InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth;break}if(t===undefined){var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===undefined){if(e!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation)}else{throw new Error(r)}}console.warn(r);return}this.createInterpolant=t},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return THREE.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return THREE.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return THREE.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0){var t=this.times;for(var r=0,n=t.length;r!==n;++r){t[r]+=e}}return this},scale:function(e){if(e!==1){var t=this.times;for(var r=0,n=t.length;r!==n;++r){t[r]*=e}}return this},trim:function(e,t){var r=this.times,n=r.length,i=0,a=n-1;while(i!==n&&r[i]<e)++i;while(a!==-1&&r[a]>t)--a;++a;if(i!==0||a!==n){if(i>=a)a=Math.max(a,1),i=a-1;var o=this.getValueSize();this.times=THREE.AnimationUtils.arraySlice(r,i,a);this.values=THREE.AnimationUtils.arraySlice(this.values,i*o,a*o)}return this},validate:function(){var e=true;var t=this.getValueSize();if(t-Math.floor(t)!==0){console.error("invalid value size in track",this);e=false}var r=this.times,n=this.values,i=r.length;if(i===0){console.error("track is empty",this);e=false}var a=null;for(var o=0;o!==i;o++){var s=r[o];if(typeof s==="number"&&isNaN(s)){console.error("time is not a valid number",this,o,s);e=false;break}if(a!==null&&a>s){console.error("out of order keys",this,o,s,a);e=false;break}a=s}if(n!==undefined){if(THREE.AnimationUtils.isTypedArray(n)){for(var o=0,c=n.length;o!==c;++o){var u=n[o];if(isNaN(u)){console.error("value is not a valid number",this,o,u);e=false;break}}}}return e},optimize:function(){var e=this.times,t=this.values,r=this.getValueSize(),n=1;for(var i=1,a=e.length-1;i<=a;++i){var o=false;var s=e[i];var c=e[i+1];if(s!==c&&(i!==1||s!==s[0])){var u=i*r,l=u-r,h=u+r;for(var f=0;f!==r;++f){var d=t[u+f];if(d!==t[l+f]||d!==t[h+f]){o=true;break}}}if(o){if(i!==n){e[n]=e[i];var p=i*r,E=n*r;for(var f=0;f!==r;++f){t[E+f]=t[p+f]}}++n}}if(n!==e.length){this.times=THREE.AnimationUtils.arraySlice(e,0,n);this.values=THREE.AnimationUtils.arraySlice(t,0,n*r)}return this}};Object.assign(THREE.KeyframeTrack,{parse:function(e){if(e.type===undefined){throw new Error("track type undefined, can not parse")}var t=THREE.KeyframeTrack._getTrackTypeForValueTypeName(e.type);if(e.times===undefined){var r=[],n=[];THREE.AnimationUtils.flattenJSON(e.keys,r,n,"value");e.times=r;e.values=n}if(t.parse!==undefined){return t.parse(e)}else{return new t(e.name,e.times,e.values,e.interpolation)}},toJSON:function(e){var t=e.constructor;var r;if(t.toJSON!==undefined){r=t.toJSON(e)}else{r={name:e.name,times:THREE.AnimationUtils.convertArray(e.times,Array),values:THREE.AnimationUtils.convertArray(e.values,Array)};var n=e.getInterpolation();if(n!==e.DefaultInterpolation){r.interpolation=n}}r.type=e.ValueTypeName;return r},_getTrackTypeForValueTypeName:function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return THREE.NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return THREE.VectorKeyframeTrack;case"color":return THREE.ColorKeyframeTrack;case"quaternion":return THREE.QuaternionKeyframeTrack;case"bool":case"boolean":return THREE.BooleanKeyframeTrack;case"string":return THREE.StringKeyframeTrack}throw new Error("Unsupported typeName: "+e)}});THREE.PropertyBinding=function(e,t,r){this.path=t;this.parsedPath=r||THREE.PropertyBinding.parseTrackName(t);this.node=THREE.PropertyBinding.findNode(e,this.parsedPath.nodeName)||e;this.rootNode=e};THREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,getValue:function t(e,r){this.bind();this.getValue(e,r)},setValue:function r(e,t){this.bind();this.setValue(e,t)},bind:function(){var e=this.node,t=this.parsedPath,r=t.objectName,n=t.propertyName,i=t.propertyIndex;if(!e){e=THREE.PropertyBinding.findNode(this.rootNode,t.nodeName)||this.rootNode;this.node=e}this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(!e){console.error("  trying to update node for track: "+this.path+" but it wasn't found.");return}if(r){var a=t.objectIndex;switch(r){case"materials":if(!e.material){console.error("  can not bind to material as node does not have a material",this);return}if(!e.material.materials){console.error("  can not bind to material.materials as node.material does not have a materials array",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("  can not bind to bones as node does not have a skeleton",this);return}e=e.skeleton.bones;for(var o=0;o<e.length;o++){if(e[o].name===a){a=o;break}}break;default:if(e[r]===undefined){console.error("  can not bind to objectName of node, undefined",this);return}e=e[r]}if(a!==undefined){if(e[a]===undefined){console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,e);return}e=e[a]}}var s=e[n];if(!s){var c=t.nodeName;console.error("  trying to update property for track: "+c+"."+n+" but it wasn't found.",e);return}var u=this.Versioning.None;if(e.needsUpdate!==undefined){u=this.Versioning.NeedsUpdate;this.targetObject=e}else if(e.matrixWorldNeedsUpdate!==undefined){u=this.Versioning.MatrixWorldNeedsUpdate;this.targetObject=e}var l=this.BindingType.Direct;if(i!==undefined){if(n==="morphTargetInfluences"){if(!e.geometry){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this);return}if(!e.geometry.morphTargets){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);return}for(var o=0;o<this.node.geometry.morphTargets.length;o++){if(e.geometry.morphTargets[o].name===i){i=o;break}}}l=this.BindingType.ArrayElement;this.resolvedProperty=s;this.propertyIndex=i}else if(s.fromArray!==undefined&&s.toArray!==undefined){l=this.BindingType.HasFromToArray;this.resolvedProperty=s}else if(s.length!==undefined){l=this.BindingType.EntireArray;this.resolvedProperty=s}else{this.propertyName=n}this.getValue=this.GetterByBindingType[l];this.setValue=this.SetterByBindingTypeAndVersioning[l][u]},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}};Object.assign(THREE.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:THREE.PropertyBinding.prototype.getValue,_setValue_unbound:THREE.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function n(e,t){e[t]=this.node[this.propertyName]},function i(e,t){var r=this.resolvedProperty;for(var n=0,i=r.length;n!==i;++n){e[t++]=r[n]}},function a(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function o(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function s(e,t){this.node[this.propertyName]=e[t]},function c(e,t){this.node[this.propertyName]=e[t];this.targetObject.needsUpdate=true},function u(e,t){this.node[this.propertyName]=e[t];this.targetObject.matrixWorldNeedsUpdate=true}],[function l(e,t){var r=this.resolvedProperty;for(var n=0,i=r.length;n!==i;++n){r[n]=e[t++]}},function h(e,t){var r=this.resolvedProperty;for(var n=0,i=r.length;n!==i;++n){r[n]=e[t++]}this.targetObject.needsUpdate=true},function f(e,t){var r=this.resolvedProperty;for(var n=0,i=r.length;n!==i;++n){r[n]=e[t++]}this.targetObject.matrixWorldNeedsUpdate=true}],[function d(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function p(e,t){this.resolvedProperty[this.propertyIndex]=e[t];this.targetObject.needsUpdate=true},function E(e,t){this.resolvedProperty[this.propertyIndex]=e[t];this.targetObject.matrixWorldNeedsUpdate=true}],[function m(e,t){this.resolvedProperty.fromArray(e,t)},function v(e,t){this.resolvedProperty.fromArray(e,t);this.targetObject.needsUpdate=true},function g(e,t){this.resolvedProperty.fromArray(e,t);this.targetObject.matrixWorldNeedsUpdate=true}]]});THREE.PropertyBinding.Composite=function(e,t,r){var n=r||THREE.PropertyBinding.parseTrackName(t);this._targetGroup=e;this._bindings=e.subscribe_(t,n)};THREE.PropertyBinding.Composite.prototype={constructor:THREE.PropertyBinding.Composite,getValue:function(e,t){this.bind();var r=this._targetGroup.nCachedObjects_,n=this._bindings[r];if(n!==undefined)n.getValue(e,t)},setValue:function(e,t){var r=this._bindings;for(var n=this._targetGroup.nCachedObjects_,i=r.length;n!==i;++n){r[n].setValue(e,t)}},bind:function(){var e=this._bindings;for(var t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t){e[t].bind()}},unbind:function(){var e=this._bindings;for(var t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t){e[t].unbind()}}};THREE.PropertyBinding.create=function(e,t,r){if(!(e instanceof THREE.AnimationObjectGroup)){return new THREE.PropertyBinding(e,t,r)}else{return new THREE.PropertyBinding.Composite(e,t,r)}};THREE.PropertyBinding.parseTrackName=function(e){var t=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_.:\- ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/;var r=t.exec(e);if(!r){throw new Error("cannot parse trackName at all: "+e)}if(r.index===t.lastIndex){t.lastIndex++}var n={nodeName:r[3],objectName:r[5],objectIndex:r[7],propertyName:r[9],propertyIndex:r[11]};if(n.propertyName===null||n.propertyName.length===0){throw new Error("can not parse propertyName from trackName: "+e)}return n};THREE.PropertyBinding.findNode=function(e,t){if(!t||t===""||t==="root"||t==="."||t===-1||t===e.name||t===e.uuid){return e}if(e.skeleton){var r=function(e){for(var r=0;r<e.bones.length;r++){var n=e.bones[r];if(n.name===t){return n}}return null};var n=r(e.skeleton);if(n){return n}}if(e.children){var i=function(e){for(var r=0;r<e.length;r++){var n=e[r];if(n.name===t||n.uuid===t){return n}var a=i(n.children);if(a)return a}return null};var a=i(e.children);if(a){return a}}return null};THREE.PropertyMixer=function(e,t,r){this.binding=e;this.valueSize=r;var n=Float64Array,i;switch(t){case"quaternion":i=this._slerp;break;case"string":case"bool":n=Array,i=this._select;break;default:i=this._lerp}this.buffer=new n(r*4);this._mixBufferRegion=i;this.cumulativeWeight=0;this.useCount=0;this.referenceCount=0};THREE.PropertyMixer.prototype={constructor:THREE.PropertyMixer,accumulate:function(e,t){var r=this.buffer,n=this.valueSize,i=e*n+n,a=this.cumulativeWeight;if(a===0){for(var o=0;o!==n;++o){r[i+o]=r[o]}a=t}else{a+=t;var s=t/a;this._mixBufferRegion(r,i,0,s,n)}this.cumulativeWeight=a},apply:function(e){var t=this.valueSize,r=this.buffer,n=e*t+t,i=this.cumulativeWeight,a=this.binding;this.cumulativeWeight=0;if(i<1){var o=t*3;this._mixBufferRegion(r,n,o,1-i,t)}for(var s=t,c=t+t;s!==c;++s){if(r[s]!==r[s+t]){a.setValue(r,n);break}}},saveOriginalState:function(){var e=this.binding;var t=this.buffer,r=this.valueSize,n=r*3;e.getValue(t,n);for(var i=r,a=n;i!==a;++i){t[i]=t[n+i%r]}this.cumulativeWeight=0},restoreOriginalState:function(){var e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_select:function(e,t,r,n,i){if(n>=.5){for(var a=0;a!==i;++a){e[t+a]=e[r+a]}}},_slerp:function(e,t,r,n,i){THREE.Quaternion.slerpFlat(e,t,e,t,e,r,n)},_lerp:function(e,t,r,n,i){var a=1-n;for(var o=0;o!==i;++o){var s=t+o;e[s]=e[s]*a+e[r+o]*n}}};THREE.BooleanKeyframeTrack=function(e,t,r){THREE.KeyframeTrack.call(this,e,t,r)};THREE.BooleanKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});THREE.ColorKeyframeTrack=function(e,t,r,n){THREE.KeyframeTrack.call(this,e,t,r,n)};THREE.ColorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.ColorKeyframeTrack,ValueTypeName:"color"});THREE.NumberKeyframeTrack=function(e,t,r,n){THREE.KeyframeTrack.call(this,e,t,r,n)};THREE.NumberKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.NumberKeyframeTrack,ValueTypeName:"number"});THREE.QuaternionKeyframeTrack=function(e,t,r,n){THREE.KeyframeTrack.call(this,e,t,r,n)};THREE.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodLinear:function(e){return new THREE.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:undefined});THREE.StringKeyframeTrack=function(e,t,r,n){THREE.KeyframeTrack.call(this,e,t,r,n)};THREE.StringKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});THREE.VectorKeyframeTrack=function(e,t,r,n){THREE.KeyframeTrack.call(this,e,t,r,n)};THREE.VectorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.VectorKeyframeTrack,ValueTypeName:"vector"});THREE.Audio=function(e){THREE.Object3D.call(this);this.type="Audio";this.context=e.context;this.source=this.context.createBufferSource();
this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(e.getInput());this.autoplay=false;this.startTime=0;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.sourceType="empty";this.filters=[]};THREE.Audio.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Audio,getOutput:function(){return this.gain},setNodeSource:function(e){this.hasPlaybackControl=false;this.sourceType="audioNode";this.source=e;this.connect();return this},setBuffer:function(e){this.source.buffer=e;this.sourceType="buffer";if(this.autoplay)this.play();return this},play:function(){if(this.isPlaying===true){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}var e=this.context.createBufferSource();e.buffer=this.source.buffer;e.loop=this.source.loop;e.onended=this.source.onended;e.start(0,this.startTime);e.playbackRate.value=this.playbackRate;this.isPlaying=true;this.source=e;return this.connect()},pause:function(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.source.stop();this.startTime=this.context.currentTime;return this},stop:function(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.source.stop();this.startTime=0;return this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++){this.filters[e-1].connect(this.filters[e])}this.filters[this.filters.length-1].connect(this.getOutput())}else{this.source.connect(this.getOutput())}return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++){this.filters[e-1].disconnect(this.filters[e])}this.filters[this.filters.length-1].disconnect(this.getOutput())}else{this.source.disconnect(this.getOutput())}return this},getFilters:function(){return this.filters},setFilters:function(e){if(!e)e=[];if(this.isPlaying===true){this.disconnect();this.filters=e;this.connect()}else{this.filters=e}return this},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.playbackRate=e;if(this.isPlaying===true){this.source.playbackRate.value=this.playbackRate}return this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=false},getLoop:function(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return false}return this.source.loop},setLoop:function(e){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.source.loop=e},getVolume:function(){return this.gain.gain.value},setVolume:function(e){this.gain.gain.value=e;return this}});THREE.AudioAnalyser=function(e,t){this.analyser=e.context.createAnalyser();this.analyser.fftSize=t!==undefined?t:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);e.getOutput().connect(this.analyser)};Object.assign(THREE.AudioAnalyser.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data},getAverageFrequency:function(){var e=0,t=this.getFrequencyData();for(var r=0;r<t.length;r++){e+=t[r]}return e/t.length}});Object.defineProperty(THREE,"AudioContext",{get:function(){var e;return function(){if(e===undefined){e=new(window.AudioContext||window.webkitAudioContext)}return e}}()});THREE.PositionalAudio=function(e){THREE.Audio.call(this,e);this.panner=this.context.createPanner();this.panner.connect(this.gain)};THREE.PositionalAudio.prototype=Object.assign(Object.create(THREE.Audio.prototype),{constructor:THREE.PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){this.panner.refDistance=e},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){this.panner.rolloffFactor=e},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){this.panner.distanceModel=e},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){this.panner.maxDistance=e},updateMatrixWorld:function(){var e=new THREE.Vector3;return function t(r){THREE.Object3D.prototype.updateMatrixWorld.call(this,r);e.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(e.x,e.y,e.z)}}()});THREE.AudioListener=function(){THREE.Object3D.call(this);this.type="AudioListener";this.context=THREE.AudioContext;this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null};THREE.AudioListener.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.AudioListener,getInput:function(){return this.gain},removeFilter:function(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null}},getFilter:function(){return this.filter},setFilter:function(e){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination)}else{this.gain.disconnect(this.context.destination)}this.filter=e;this.gain.connect(this.filter);this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){this.gain.gain.value=e},updateMatrixWorld:function(){var e=new THREE.Vector3;var t=new THREE.Quaternion;var r=new THREE.Vector3;var n=new THREE.Vector3;return function i(a){THREE.Object3D.prototype.updateMatrixWorld.call(this,a);var o=this.context.listener;var s=this.up;this.matrixWorld.decompose(e,t,r);n.set(0,0,-1).applyQuaternion(t);o.setPosition(e.x,e.y,e.z);o.setOrientation(n.x,n.y,n.z,s.x,s.y,s.z)}}()});THREE.Camera=function(){THREE.Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var e=new THREE.Quaternion;return function(t){var r=t||new THREE.Vector3;this.getWorldQuaternion(e);return r.set(0,0,-1).applyQuaternion(e)}}();THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up);this.quaternion.setFromRotationMatrix(e)}}();THREE.Camera.prototype.clone=function(){return(new this.constructor).copy(this)};THREE.Camera.prototype.copy=function(e){THREE.Object3D.prototype.copy.call(this,e);this.matrixWorldInverse.copy(e.matrixWorldInverse);this.projectionMatrix.copy(e.projectionMatrix);return this};THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this);this.type="CubeCamera";var n=90,i=1;var a=new THREE.PerspectiveCamera(n,i,e,t);a.up.set(0,-1,0);a.lookAt(new THREE.Vector3(1,0,0));this.add(a);var o=new THREE.PerspectiveCamera(n,i,e,t);o.up.set(0,-1,0);o.lookAt(new THREE.Vector3(-1,0,0));this.add(o);var s=new THREE.PerspectiveCamera(n,i,e,t);s.up.set(0,0,1);s.lookAt(new THREE.Vector3(0,1,0));this.add(s);var c=new THREE.PerspectiveCamera(n,i,e,t);c.up.set(0,0,-1);c.lookAt(new THREE.Vector3(0,-1,0));this.add(c);var u=new THREE.PerspectiveCamera(n,i,e,t);u.up.set(0,-1,0);u.lookAt(new THREE.Vector3(0,0,1));this.add(u);var l=new THREE.PerspectiveCamera(n,i,e,t);l.up.set(0,-1,0);l.lookAt(new THREE.Vector3(0,0,-1));this.add(l);var h={format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter};this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,h);this.updateCubeMap=function(e,t){if(this.parent===null)this.updateMatrixWorld();var r=this.renderTarget;var n=r.texture.generateMipmaps;r.texture.generateMipmaps=false;r.activeCubeFace=0;e.render(t,a,r);r.activeCubeFace=1;e.render(t,o,r);r.activeCubeFace=2;e.render(t,s,r);r.activeCubeFace=3;e.render(t,c,r);r.activeCubeFace=4;e.render(t,u,r);r.texture.generateMipmaps=n;r.activeCubeFace=5;e.render(t,l,r);e.setRenderTarget(null)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;THREE.OrthographicCamera=function(e,t,r,n,i,a){THREE.Camera.call(this);this.type="OrthographicCamera";this.zoom=1;this.left=e;this.right=t;this.top=r;this.bottom=n;this.near=i!==undefined?i:.1;this.far=a!==undefined?a:2e3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.assign(Object.create(THREE.Camera.prototype),{constructor:THREE.OrthographicCamera,copy:function(e){THREE.Camera.prototype.copy.call(this,e);this.left=e.left;this.right=e.right;this.top=e.top;this.bottom=e.bottom;this.near=e.near;this.far=e.far;this.zoom=e.zoom;return this},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom);var t=(this.top-this.bottom)/(2*this.zoom);var r=(this.right+this.left)/2;var n=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(r-e,r+e,n+t,n-t,this.near,this.far)},toJSON:function(e){var t=THREE.Object3D.prototype.toJSON.call(this,e);t.object.zoom=this.zoom;t.object.left=this.left;t.object.right=this.right;t.object.top=this.top;t.object.bottom=this.bottom;t.object.near=this.near;t.object.far=this.far;return t}});THREE.PerspectiveCamera=function(e,t,r,n){THREE.Camera.call(this);this.type="PerspectiveCamera";this.fov=e!==undefined?e:50;this.zoom=1;this.near=r!==undefined?r:.1;this.far=n!==undefined?n:2e3;this.focus=10;this.aspect=t!==undefined?t:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.assign(Object.create(THREE.Camera.prototype),{constructor:THREE.PerspectiveCamera,copy:function(e){THREE.Camera.prototype.copy.call(this,e);this.fov=e.fov;this.zoom=e.zoom;this.near=e.near;this.far=e.far;this.focus=e.focus;this.aspect=e.aspect;this.view=e.view===null?null:Object.assign({},e.view);this.filmGauge=e.filmGauge;this.filmOffset=e.filmOffset;return this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=THREE.Math.RAD2DEG*2*Math.atan(t);this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(THREE.Math.DEG2RAD*.5*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return THREE.Math.RAD2DEG*2*Math.atan(Math.tan(THREE.Math.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,r,n,i,a){this.aspect=e/t;this.view={fullWidth:e,fullHeight:t,offsetX:r,offsetY:n,width:i,height:a};this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null;this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(THREE.Math.DEG2RAD*.5*this.fov)/this.zoom,r=2*t,n=this.aspect*r,i=-.5*n,a=this.view;if(a!==null){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*n/o;t-=a.offsetY*r/s;n*=a.width/o;r*=a.height/s}var c=this.filmOffset;if(c!==0)i+=e*c/this.getFilmWidth();this.projectionMatrix.makeFrustum(i,i+n,t-r,t,e,this.far)},toJSON:function(e){var t=THREE.Object3D.prototype.toJSON.call(this,e);t.object.fov=this.fov;t.object.zoom=this.zoom;t.object.near=this.near;t.object.far=this.far;t.object.focus=this.focus;t.object.aspect=this.aspect;if(this.view!==null)t.object.view=Object.assign({},this.view);t.object.filmGauge=this.filmGauge;t.object.filmOffset=this.filmOffset;return t}});THREE.StereoCamera=function(){this.type="StereoCamera";this.aspect=1;this.cameraL=new THREE.PerspectiveCamera;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new THREE.PerspectiveCamera;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false};Object.assign(THREE.StereoCamera.prototype,{update:function(){var e,t,r,n,i;var a=new THREE.Matrix4;var o=new THREE.Matrix4;return function s(c){var u=e!==c.focus||t!==c.fov||r!==c.aspect*this.aspect||n!==c.near||i!==c.far;if(u){e=c.focus;t=c.fov;r=c.aspect*this.aspect;n=c.near;i=c.far;var l=c.projectionMatrix.clone();var h=.064/2;var f=h*n/e;var d=n*Math.tan(THREE.Math.DEG2RAD*t*.5);var p,E;o.elements[12]=-h;a.elements[12]=h;p=-d*r+f;E=d*r+f;l.elements[0]=2*n/(E-p);l.elements[8]=(E+p)/(E-p);this.cameraL.projectionMatrix.copy(l);p=-d*r-f;E=d*r-f;l.elements[0]=2*n/(E-p);l.elements[8]=(E+p)/(E-p);this.cameraR.projectionMatrix.copy(l)}this.cameraL.matrixWorld.copy(c.matrixWorld).multiply(o);this.cameraR.matrixWorld.copy(c.matrixWorld).multiply(a)}}()});THREE.Light=function(e,t){THREE.Object3D.call(this);this.type="Light";this.color=new THREE.Color(e);this.intensity=t!==undefined?t:1;this.receiveShadow=undefined};THREE.Light.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Light,copy:function(e){THREE.Object3D.prototype.copy.call(this,e);this.color.copy(e.color);this.intensity=e.intensity;return this},toJSON:function(e){var t=THREE.Object3D.prototype.toJSON.call(this,e);t.object.color=this.color.getHex();t.object.intensity=this.intensity;if(this.groundColor!==undefined)t.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)t.object.distance=this.distance;if(this.angle!==undefined)t.object.angle=this.angle;if(this.decay!==undefined)t.object.decay=this.decay;if(this.penumbra!==undefined)t.object.penumbra=this.penumbra;return t}});THREE.LightShadow=function(e){this.camera=e;this.bias=0;this.radius=1;this.mapSize=new THREE.Vector2(512,512);this.map=null;this.matrix=new THREE.Matrix4};Object.assign(THREE.LightShadow.prototype,{copy:function(e){this.camera=e.camera.clone();this.bias=e.bias;this.radius=e.radius;this.mapSize.copy(e.mapSize);return this},clone:function(){return(new this.constructor).copy(this)}});THREE.AmbientLight=function(e,t){THREE.Light.call(this,e,t);this.type="AmbientLight";this.castShadow=undefined};THREE.AmbientLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.AmbientLight});THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e,t);this.type="DirectionalLight";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.shadow=new THREE.DirectionalLightShadow};THREE.DirectionalLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.DirectionalLight,copy:function(e){THREE.Light.prototype.copy.call(this,e);this.target=e.target.clone();this.shadow=e.shadow.clone();return this}});THREE.DirectionalLightShadow=function(e){THREE.LightShadow.call(this,new THREE.OrthographicCamera(-5,5,5,-5,.5,500))};THREE.DirectionalLightShadow.prototype=Object.assign(Object.create(THREE.LightShadow.prototype),{constructor:THREE.DirectionalLightShadow});THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e,r);this.type="HemisphereLight";this.castShadow=undefined;this.position.set(0,1,0);this.updateMatrix();this.groundColor=new THREE.Color(t)};THREE.HemisphereLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.HemisphereLight,copy:function(e){THREE.Light.prototype.copy.call(this,e);this.groundColor.copy(e.groundColor);return this}});THREE.PointLight=function(e,t,r,n){THREE.Light.call(this,e,t);this.type="PointLight";Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}});this.distance=r!==undefined?r:0;this.decay=n!==undefined?n:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,.5,500))};THREE.PointLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.PointLight,copy:function(e){THREE.Light.prototype.copy.call(this,e);this.distance=e.distance;this.decay=e.decay;this.shadow=e.shadow.clone();return this}});THREE.SpotLight=function(e,t,r,n,i,a){THREE.Light.call(this,e,t);this.type="SpotLight";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}});this.distance=r!==undefined?r:0;this.angle=n!==undefined?n:Math.PI/3;this.penumbra=i!==undefined?i:0;this.decay=a!==undefined?a:1;this.shadow=new THREE.SpotLightShadow};THREE.SpotLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.SpotLight,copy:function(e){THREE.Light.prototype.copy.call(this,e);this.distance=e.distance;this.angle=e.angle;this.penumbra=e.penumbra;this.decay=e.decay;this.target=e.target.clone();this.shadow=e.shadow.clone();return this}});THREE.SpotLightShadow=function(){THREE.LightShadow.call(this,new THREE.PerspectiveCamera(50,1,.5,500))};THREE.SpotLightShadow.prototype=Object.assign(Object.create(THREE.LightShadow.prototype),{constructor:THREE.SpotLightShadow,update:function(e){var t=THREE.Math.RAD2DEG*2*e.angle;var r=this.mapSize.width/this.mapSize.height;var n=e.distance||500;var i=this.camera;if(t!==i.fov||r!==i.aspect||n!==i.far){i.fov=t;i.aspect=r;i.far=n;i.updateProjectionMatrix()}}});THREE.AudioLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.AudioLoader.prototype={constructor:THREE.AudioLoader,load:function(e,t,r,n){var i=new THREE.XHRLoader(this.manager);i.setResponseType("arraybuffer");i.load(e,function(e){var r=THREE.AudioContext;r.decodeAudioData(e,function(e){t(e)})},r,n)}};THREE.Cache={enabled:false,files:{},add:function(e,t){if(this.enabled===false)return;this.files[e]=t},get:function(e){if(this.enabled===false)return;return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};THREE.Loader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:undefined,extractUrlBase:function(e){var t=e.split("/");if(t.length===1)return"./";t.pop();return t.join("/")+"/"},initMaterials:function(e,t,r){var n=[];for(var i=0;i<e.length;++i){n[i]=this.createMaterial(e[i],t,r)}return n},createMaterial:function(){var e,t,r;return function(n,i,a){if(e===undefined)e=new THREE.Color;if(t===undefined)t=new THREE.TextureLoader;if(r===undefined)r=new THREE.MaterialLoader;var o={};function s(e,r,n,s,c){var u=i+e;var l=THREE.Loader.Handlers.get(u);var h;if(l!==null){h=l.load(u)}else{t.setCrossOrigin(a);h=t.load(u)}if(r!==undefined){h.repeat.fromArray(r);if(r[0]!==1)h.wrapS=THREE.RepeatWrapping;if(r[1]!==1)h.wrapT=THREE.RepeatWrapping}if(n!==undefined){h.offset.fromArray(n)}if(s!==undefined){if(s[0]==="repeat")h.wrapS=THREE.RepeatWrapping;if(s[0]==="mirror")h.wrapS=THREE.MirroredRepeatWrapping;if(s[1]==="repeat")h.wrapT=THREE.RepeatWrapping;if(s[1]==="mirror")h.wrapT=THREE.MirroredRepeatWrapping}if(c!==undefined){h.anisotropy=c}var f=THREE.Math.generateUUID();o[f]=h;return f}var c={uuid:THREE.Math.generateUUID(),type:"MeshLambertMaterial"};for(var u in n){var l=n[u];switch(u){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":c.name=l;break;case"blending":c.blending=THREE[l];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",u,"is no longer supported.");break;case"colorDiffuse":c.color=e.fromArray(l).getHex();break;case"colorSpecular":c.specular=e.fromArray(l).getHex();break;case"colorEmissive":c.emissive=e.fromArray(l).getHex();break;case"specularCoef":c.shininess=l;break;case"shading":if(l.toLowerCase()==="basic")c.type="MeshBasicMaterial";if(l.toLowerCase()==="phong")c.type="MeshPhongMaterial";break;case"mapDiffuse":c.map=s(l,n.mapDiffuseRepeat,n.mapDiffuseOffset,n.mapDiffuseWrap,n.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapLight":c.lightMap=s(l,n.mapLightRepeat,n.mapLightOffset,n.mapLightWrap,n.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":c.aoMap=s(l,n.mapAORepeat,n.mapAOOffset,n.mapAOWrap,n.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":c.bumpMap=s(l,n.mapBumpRepeat,n.mapBumpOffset,n.mapBumpWrap,n.mapBumpAnisotropy);break;case"mapBumpScale":c.bumpScale=l;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":c.normalMap=s(l,n.mapNormalRepeat,n.mapNormalOffset,n.mapNormalWrap,n.mapNormalAnisotropy);break;case"mapNormalFactor":c.normalScale=[l,l];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":c.specularMap=s(l,n.mapSpecularRepeat,n.mapSpecularOffset,n.mapSpecularWrap,n.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapAlpha":c.alphaMap=s(l,n.mapAlphaRepeat,n.mapAlphaOffset,n.mapAlphaWrap,n.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":c.side=THREE.BackSide;break;case"doubleSided":c.side=THREE.DoubleSide;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity");c.opacity=l;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":c[u]=l;break;case"vertexColors":if(l===true)c.vertexColors=THREE.VertexColors;if(l==="face")c.vertexColors=THREE.FaceColors;break;default:console.error("THREE.Loader.createMaterial: Unsupported",u,l);break}}if(c.type==="MeshBasicMaterial")delete c.emissive;if(c.type!=="MeshPhongMaterial")delete c.specular;if(c.opacity<1)c.transparent=true;r.setTextures(o);return r.parse(c)}}()};THREE.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){var t=this.handlers;for(var r=0,n=t.length;r<n;r+=2){var i=t[r];var a=t[r+1];if(i.test(e)){return a}}return null}};THREE.XHRLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,r,n){if(this.path!==undefined)e=this.path+e;var i=this;var a=THREE.Cache.get(e);if(a!==undefined){if(t){setTimeout(function(){t(a)},0)}return a}var o=new XMLHttpRequest;o.overrideMimeType("text/plain");o.open("GET",e,true);o.addEventListener("load",function(r){var a=r.target.response;THREE.Cache.add(e,a);if(this.status===200){if(t)t(a);i.manager.itemEnd(e)}else if(this.status===0){console.warn("THREE.XHRLoader: HTTP Status 0 received.");if(t)t(a);i.manager.itemEnd(e)}else{if(n)n(r);i.manager.itemError(e)}},false);if(r!==undefined){o.addEventListener("progress",function(e){r(e)},false)}o.addEventListener("error",function(t){if(n)n(t);i.manager.itemError(e)},false);if(this.responseType!==undefined)o.responseType=this.responseType;if(this.withCredentials!==undefined)o.withCredentials=this.withCredentials;o.send(null);i.manager.itemStart(e);return o},setPath:function(e){this.path=e},setResponseType:function(e){this.responseType=e},setWithCredentials:function(e){this.withCredentials=e}};THREE.FontLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.FontLoader.prototype={constructor:THREE.FontLoader,load:function(e,t,r,n){var i=this;var a=new THREE.XHRLoader(this.manager);a.load(e,function(e){var r;try{r=JSON.parse(e)}catch(n){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.");r=JSON.parse(e.substring(65,e.length-2))}var a=i.parse(r);if(t)t(a)},r,n)},parse:function(e){return new THREE.Font(e)}};THREE.ImageLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,r,n){if(this.path!==undefined)e=this.path+e;var i=this;var a=THREE.Cache.get(e);if(a!==undefined){i.manager.itemStart(e);if(t){setTimeout(function(){t(a);i.manager.itemEnd(e)},0)}else{i.manager.itemEnd(e)}return a}var o=document.createElement("img");o.addEventListener("load",function(r){THREE.Cache.add(e,this);if(t)t(this);i.manager.itemEnd(e)},false);if(r!==undefined){o.addEventListener("progress",function(e){r(e)},false)}o.addEventListener("error",function(t){if(n)n(t);i.manager.itemError(e)},false);if(this.crossOrigin!==undefined)o.crossOrigin=this.crossOrigin;i.manager.itemStart(e);o.src=e;return o},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e}};THREE.JSONLoader=function(e){if(typeof e==="boolean"){console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor.");e=undefined}this.manager=e!==undefined?e:THREE.DefaultLoadingManager;this.withCredentials=false};THREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){if(this._statusDomElement===undefined){this._statusDomElement=document.createElement("div")}console.warn("THREE.JSONLoader: .statusDomElement has been removed.");return this._statusDomElement},load:function(e,t,r,n){var i=this;var a=this.texturePath&&typeof this.texturePath==="string"?this.texturePath:THREE.Loader.prototype.extractUrlBase(e);var o=new THREE.XHRLoader(this.manager);o.setWithCredentials(this.withCredentials);o.load(e,function(r){var n=JSON.parse(r);var o=n.metadata;if(o!==undefined){var s=o.type;if(s!==undefined){if(s.toLowerCase()==="object"){console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.ObjectLoader instead.");return}if(s.toLowerCase()==="scene"){console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.SceneLoader instead.");return}}}var c=i.parse(n,a);t(c.geometry,c.materials)},r,n)},setTexturePath:function(e){this.texturePath=e},parse:function(e,t){var r=new THREE.Geometry,n=e.scale!==undefined?1/e.scale:1;i(n);a();o(n);s();r.computeFaceNormals();r.computeBoundingSphere();function i(t){function n(e,t){return e&1<<t}var i,a,o,s,c,u,l,h,f,d,p,E,m,v,g,T,y,R,x,H,b,_,M,w,S,L,A,C=e.faces,P=e.vertices,I=e.normals,B=e.colors,D=0;if(e.uvs!==undefined){for(i=0;i<e.uvs.length;i++){if(e.uvs[i].length)D++}for(i=0;i<D;i++){r.faceVertexUvs[i]=[]}}s=0;c=P.length;while(s<c){R=new THREE.Vector3;R.x=P[s++]*t;R.y=P[s++]*t;R.z=P[s++]*t;r.vertices.push(R)}s=0;c=C.length;while(s<c){d=C[s++];p=n(d,0);E=n(d,1);m=n(d,3);v=n(d,4);g=n(d,5);T=n(d,6);y=n(d,7);if(p){H=new THREE.Face3;H.a=C[s];H.b=C[s+1];H.c=C[s+3];b=new THREE.Face3;b.a=C[s+1];b.b=C[s+2];b.c=C[s+3];s+=4;if(E){f=C[s++];H.materialIndex=f;b.materialIndex=f}o=r.faces.length;if(m){for(i=0;i<D;i++){w=e.uvs[i];r.faceVertexUvs[i][o]=[];r.faceVertexUvs[i][o+1]=[];for(a=0;a<4;a++){h=C[s++];L=w[h*2];A=w[h*2+1];S=new THREE.Vector2(L,A);if(a!==2)r.faceVertexUvs[i][o].push(S);if(a!==0)r.faceVertexUvs[i][o+1].push(S)}}}if(v){l=C[s++]*3;H.normal.set(I[l++],I[l++],I[l]);b.normal.copy(H.normal)}if(g){for(i=0;i<4;i++){l=C[s++]*3;M=new THREE.Vector3(I[l++],I[l++],I[l]);if(i!==2)H.vertexNormals.push(M);if(i!==0)b.vertexNormals.push(M)}}if(T){u=C[s++];_=B[u];H.color.setHex(_);b.color.setHex(_)}if(y){for(i=0;i<4;i++){u=C[s++];_=B[u];if(i!==2)H.vertexColors.push(new THREE.Color(_));if(i!==0)b.vertexColors.push(new THREE.Color(_))}}r.faces.push(H);r.faces.push(b)}else{x=new THREE.Face3;x.a=C[s++];x.b=C[s++];x.c=C[s++];if(E){f=C[s++];x.materialIndex=f}o=r.faces.length;if(m){for(i=0;i<D;i++){w=e.uvs[i];r.faceVertexUvs[i][o]=[];for(a=0;a<3;a++){h=C[s++];L=w[h*2];A=w[h*2+1];S=new THREE.Vector2(L,A);r.faceVertexUvs[i][o].push(S)}}}if(v){l=C[s++]*3;x.normal.set(I[l++],I[l++],I[l])}if(g){for(i=0;i<3;i++){l=C[s++]*3;M=new THREE.Vector3(I[l++],I[l++],I[l]);x.vertexNormals.push(M)}}if(T){u=C[s++];x.color.setHex(B[u])}if(y){for(i=0;i<3;i++){u=C[s++];x.vertexColors.push(new THREE.Color(B[u]))}}r.faces.push(x)}}}function a(){var t=e.influencesPerVertex!==undefined?e.influencesPerVertex:2;if(e.skinWeights){for(var n=0,i=e.skinWeights.length;n<i;n+=t){var a=e.skinWeights[n];var o=t>1?e.skinWeights[n+1]:0;var s=t>2?e.skinWeights[n+2]:0;var c=t>3?e.skinWeights[n+3]:0;r.skinWeights.push(new THREE.Vector4(a,o,s,c))}}if(e.skinIndices){for(var n=0,i=e.skinIndices.length;n<i;n+=t){var u=e.skinIndices[n];var l=t>1?e.skinIndices[n+1]:0;var h=t>2?e.skinIndices[n+2]:0;var f=t>3?e.skinIndices[n+3]:0;r.skinIndices.push(new THREE.Vector4(u,l,h,f))}}r.bones=e.bones;if(r.bones&&r.bones.length>0&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)){console.warn("When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match.")}}function o(t){if(e.morphTargets!==undefined){for(var n=0,i=e.morphTargets.length;n<i;n++){r.morphTargets[n]={};r.morphTargets[n].name=e.morphTargets[n].name;r.morphTargets[n].vertices=[];var a=r.morphTargets[n].vertices;var o=e.morphTargets[n].vertices;for(var s=0,c=o.length;s<c;s+=3){var u=new THREE.Vector3;u.x=o[s]*t;u.y=o[s+1]*t;u.z=o[s+2]*t;a.push(u)}}}if(e.morphColors!==undefined&&e.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');var l=r.faces;var h=e.morphColors[0].colors;for(var n=0,i=l.length;n<i;n++){l[n].color.fromArray(h,n*3)}}}function s(){var t=[];var n=[];if(e.animation!==undefined){n.push(e.animation)}if(e.animations!==undefined){if(e.animations.length){n=n.concat(e.animations)}else{n.push(e.animations)}}for(var i=0;i<n.length;i++){var a=THREE.AnimationClip.parseAnimation(n[i],r.bones);if(a)t.push(a)}if(r.morphTargets){var o=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(r.morphTargets,10);t=t.concat(o)}if(t.length>0)r.animations=t}if(e.materials===undefined||e.materials.length===0){return{geometry:r}}else{var c=THREE.Loader.prototype.initMaterials(e.materials,t,this.crossOrigin);return{geometry:r,materials:c}}}};THREE.LoadingManager=function(e,t,r){var n=this;var i=false,a=0,o=0;this.onStart=undefined;this.onLoad=e;this.onProgress=t;this.onError=r;this.itemStart=function(e){o++;if(i===false){if(n.onStart!==undefined){n.onStart(e,a,o)}}i=true};this.itemEnd=function(e){a++;if(n.onProgress!==undefined){n.onProgress(e,a,o)}if(a===o){i=false;if(n.onLoad!==undefined){n.onLoad()}}};this.itemError=function(e){if(n.onError!==undefined){n.onError(e)}}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,r,n){var i=this;var a=new THREE.XHRLoader(i.manager);a.load(e,function(e){t(i.parse(JSON.parse(e)))},r,n)},parse:function(e){var t=new THREE.BufferGeometry;var r=e.data.index;var n={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};if(r!==undefined){var i=new n[r.type](r.array);t.setIndex(new THREE.BufferAttribute(i,1))}var a=e.data.attributes;for(var o in a){var s=a[o];var i=new n[s.type](s.array);t.addAttribute(o,new THREE.BufferAttribute(i,s.itemSize,s.normalized))}var c=e.data.groups||e.data.drawcalls||e.data.offsets;if(c!==undefined){for(var u=0,l=c.length;u!==l;++u){var h=c[u];t.addGroup(h.start,h.count,h.materialIndex)}}var f=e.data.boundingSphere;if(f!==undefined){var d=new THREE.Vector3;if(f.center!==undefined){d.fromArray(f.center)}t.boundingSphere=new THREE.Sphere(d,f.radius)}return t}};THREE.MaterialLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager;this.textures={}};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,r,n){var i=this;var a=new THREE.XHRLoader(i.manager);a.load(e,function(e){t(i.parse(JSON.parse(e)))},r,n)},setTextures:function(e){this.textures=e},getTexture:function(e){var t=this.textures;if(t[e]===undefined){console.warn("THREE.MaterialLoader: Undefined texture",e);
}return t[e]},parse:function(e){var t=new THREE[e.type];if(e.uuid!==undefined)t.uuid=e.uuid;if(e.name!==undefined)t.name=e.name;if(e.color!==undefined)t.color.setHex(e.color);if(e.roughness!==undefined)t.roughness=e.roughness;if(e.metalness!==undefined)t.metalness=e.metalness;if(e.emissive!==undefined)t.emissive.setHex(e.emissive);if(e.specular!==undefined)t.specular.setHex(e.specular);if(e.shininess!==undefined)t.shininess=e.shininess;if(e.uniforms!==undefined)t.uniforms=e.uniforms;if(e.vertexShader!==undefined)t.vertexShader=e.vertexShader;if(e.fragmentShader!==undefined)t.fragmentShader=e.fragmentShader;if(e.vertexColors!==undefined)t.vertexColors=e.vertexColors;if(e.shading!==undefined)t.shading=e.shading;if(e.blending!==undefined)t.blending=e.blending;if(e.side!==undefined)t.side=e.side;if(e.opacity!==undefined)t.opacity=e.opacity;if(e.transparent!==undefined)t.transparent=e.transparent;if(e.alphaTest!==undefined)t.alphaTest=e.alphaTest;if(e.depthTest!==undefined)t.depthTest=e.depthTest;if(e.depthWrite!==undefined)t.depthWrite=e.depthWrite;if(e.colorWrite!==undefined)t.colorWrite=e.colorWrite;if(e.wireframe!==undefined)t.wireframe=e.wireframe;if(e.wireframeLinewidth!==undefined)t.wireframeLinewidth=e.wireframeLinewidth;if(e.size!==undefined)t.size=e.size;if(e.sizeAttenuation!==undefined)t.sizeAttenuation=e.sizeAttenuation;if(e.map!==undefined)t.map=this.getTexture(e.map);if(e.alphaMap!==undefined){t.alphaMap=this.getTexture(e.alphaMap);t.transparent=true}if(e.bumpMap!==undefined)t.bumpMap=this.getTexture(e.bumpMap);if(e.bumpScale!==undefined)t.bumpScale=e.bumpScale;if(e.normalMap!==undefined)t.normalMap=this.getTexture(e.normalMap);if(e.normalScale!==undefined){var r=e.normalScale;if(Array.isArray(r)===false){r=[r,r]}t.normalScale=(new THREE.Vector2).fromArray(r)}if(e.displacementMap!==undefined)t.displacementMap=this.getTexture(e.displacementMap);if(e.displacementScale!==undefined)t.displacementScale=e.displacementScale;if(e.displacementBias!==undefined)t.displacementBias=e.displacementBias;if(e.roughnessMap!==undefined)t.roughnessMap=this.getTexture(e.roughnessMap);if(e.metalnessMap!==undefined)t.metalnessMap=this.getTexture(e.metalnessMap);if(e.emissiveMap!==undefined)t.emissiveMap=this.getTexture(e.emissiveMap);if(e.emissiveIntensity!==undefined)t.emissiveIntensity=e.emissiveIntensity;if(e.specularMap!==undefined)t.specularMap=this.getTexture(e.specularMap);if(e.envMap!==undefined){t.envMap=this.getTexture(e.envMap);t.combine=THREE.MultiplyOperation}if(e.reflectivity)t.reflectivity=e.reflectivity;if(e.lightMap!==undefined)t.lightMap=this.getTexture(e.lightMap);if(e.lightMapIntensity!==undefined)t.lightMapIntensity=e.lightMapIntensity;if(e.aoMap!==undefined)t.aoMap=this.getTexture(e.aoMap);if(e.aoMapIntensity!==undefined)t.aoMapIntensity=e.aoMapIntensity;if(e.materials!==undefined){for(var n=0,i=e.materials.length;n<i;n++){t.materials.push(this.parse(e.materials[n]))}}return t}};THREE.ObjectLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager;this.texturePath=""};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,r,n){if(this.texturePath===""){this.texturePath=e.substring(0,e.lastIndexOf("/")+1)}var i=this;var a=new THREE.XHRLoader(i.manager);a.load(e,function(e){i.parse(JSON.parse(e),t)},r,n)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var r=this.parseGeometries(e.geometries);var n=this.parseImages(e.images,function(){if(t!==undefined)t(o)});var i=this.parseTextures(e.textures,n);var a=this.parseMaterials(e.materials,i);var o=this.parseObject(e.object,r,a);if(e.animations){o.animations=this.parseAnimations(e.animations)}if(e.images===undefined||e.images.length===0){if(t!==undefined)t(o)}return o},parseGeometries:function(e){var t={};if(e!==undefined){var r=new THREE.JSONLoader;var n=new THREE.BufferGeometryLoader;for(var i=0,a=e.length;i<a;i++){var o;var s=e[i];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new THREE[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new THREE[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new THREE[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new THREE[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new THREE[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new THREE[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"IcosahedronGeometry":case"OctahedronGeometry":case"TetrahedronGeometry":o=new THREE[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new THREE[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new THREE[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new THREE[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"LatheGeometry":case"LatheBufferGeometry":o=new THREE[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"BufferGeometry":o=n.parse(s);break;case"Geometry":o=r.parse(s.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}o.uuid=s.uuid;if(s.name!==undefined)o.name=s.name;t[s.uuid]=o}}return t},parseMaterials:function(e,t){var r={};if(e!==undefined){var n=new THREE.MaterialLoader;n.setTextures(t);for(var i=0,a=e.length;i<a;i++){var o=n.parse(e[i]);r[o.uuid]=o}}return r},parseAnimations:function(e){var t=[];for(var r=0;r<e.length;r++){var n=THREE.AnimationClip.parse(e[r]);t.push(n)}return t},parseImages:function(e,t){var r=this;var n={};function i(e){r.manager.itemStart(e);return o.load(e,function(){r.manager.itemEnd(e)})}if(e!==undefined&&e.length>0){var a=new THREE.LoadingManager(t);var o=new THREE.ImageLoader(a);o.setCrossOrigin(this.crossOrigin);for(var s=0,c=e.length;s<c;s++){var u=e[s];var l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(u.url)?u.url:r.texturePath+u.url;n[u.uuid]=i(l)}}return n},parseTextures:function(e,t){function r(e){if(typeof e==="number")return e;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e);return THREE[e]}var n={};if(e!==undefined){for(var i=0,a=e.length;i<a;i++){var o=e[i];if(o.image===undefined){console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid)}if(t[o.image]===undefined){console.warn("THREE.ObjectLoader: Undefined image",o.image)}var s=new THREE.Texture(t[o.image]);s.needsUpdate=true;s.uuid=o.uuid;if(o.name!==undefined)s.name=o.name;if(o.mapping!==undefined)s.mapping=r(o.mapping);if(o.offset!==undefined)s.offset=new THREE.Vector2(o.offset[0],o.offset[1]);if(o.repeat!==undefined)s.repeat=new THREE.Vector2(o.repeat[0],o.repeat[1]);if(o.minFilter!==undefined)s.minFilter=r(o.minFilter);if(o.magFilter!==undefined)s.magFilter=r(o.magFilter);if(o.anisotropy!==undefined)s.anisotropy=o.anisotropy;if(Array.isArray(o.wrap)){s.wrapS=r(o.wrap[0]);s.wrapT=r(o.wrap[1])}n[o.uuid]=s}}return n},parseObject:function(){var e=new THREE.Matrix4;return function(t,r,n){var i;function a(e){if(r[e]===undefined){console.warn("THREE.ObjectLoader: Undefined geometry",e)}return r[e]}function o(e){if(e===undefined)return undefined;if(n[e]===undefined){console.warn("THREE.ObjectLoader: Undefined material",e)}return n[e]}switch(t.type){case"Scene":i=new THREE.Scene;break;case"PerspectiveCamera":i=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);if(t.focus!==undefined)i.focus=t.focus;if(t.zoom!==undefined)i.zoom=t.zoom;if(t.filmGauge!==undefined)i.filmGauge=t.filmGauge;if(t.filmOffset!==undefined)i.filmOffset=t.filmOffset;if(t.view!==undefined)i.view=Object.assign({},t.view);break;case"OrthographicCamera":i=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":i=new THREE.AmbientLight(t.color,t.intensity);break;case"DirectionalLight":i=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":i=new THREE.PointLight(t.color,t.intensity,t.distance,t.decay);break;case"SpotLight":i=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":i=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":var s=a(t.geometry);var c=o(t.material);if(s.bones&&s.bones.length>0){i=new THREE.SkinnedMesh(s,c)}else{i=new THREE.Mesh(s,c)}break;case"LOD":i=new THREE.LOD;break;case"Line":i=new THREE.Line(a(t.geometry),o(t.material),t.mode);break;case"PointCloud":case"Points":i=new THREE.Points(a(t.geometry),o(t.material));break;case"Sprite":i=new THREE.Sprite(o(t.material));break;case"Group":i=new THREE.Group;break;default:i=new THREE.Object3D}i.uuid=t.uuid;if(t.name!==undefined)i.name=t.name;if(t.matrix!==undefined){e.fromArray(t.matrix);e.decompose(i.position,i.quaternion,i.scale)}else{if(t.position!==undefined)i.position.fromArray(t.position);if(t.rotation!==undefined)i.rotation.fromArray(t.rotation);if(t.scale!==undefined)i.scale.fromArray(t.scale)}if(t.castShadow!==undefined)i.castShadow=t.castShadow;if(t.receiveShadow!==undefined)i.receiveShadow=t.receiveShadow;if(t.visible!==undefined)i.visible=t.visible;if(t.userData!==undefined)i.userData=t.userData;if(t.children!==undefined){for(var u in t.children){i.add(this.parseObject(t.children[u],r,n))}}if(t.type==="LOD"){var l=t.levels;for(var h=0;h<l.length;h++){var f=l[h];var u=i.getObjectByProperty("uuid",f.object);if(u!==undefined){i.addLevel(u,f.distance)}}}return i}}()};THREE.TextureLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,r,n){var i=new THREE.Texture;var a=new THREE.ImageLoader(this.manager);a.setCrossOrigin(this.crossOrigin);a.setPath(this.path);a.load(e,function(e){i.image=e;i.needsUpdate=true;if(t!==undefined){t(i)}},r,n);return i},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e}};THREE.CubeTextureLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager};THREE.CubeTextureLoader.prototype={constructor:THREE.CubeTextureLoader,load:function(e,t,r,n){var i=new THREE.CubeTexture;var a=new THREE.ImageLoader(this.manager);a.setCrossOrigin(this.crossOrigin);a.setPath(this.path);var o=0;function s(r){a.load(e[r],function(e){i.images[r]=e;o++;if(o===6){i.needsUpdate=true;if(t)t(i)}},undefined,n)}for(var c=0;c<e.length;++c){s(c)}return i},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e}};THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager;this._parser=null};THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(e,t,r,n){var i=this;var a=new THREE.DataTexture;var o=new THREE.XHRLoader(this.manager);o.setResponseType("arraybuffer");o.load(e,function(e){var r=i._parser(e);if(!r)return;if(undefined!==r.image){a.image=r.image}else if(undefined!==r.data){a.image.width=r.width;a.image.height=r.height;a.image.data=r.data}a.wrapS=undefined!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping;a.wrapT=undefined!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping;a.magFilter=undefined!==r.magFilter?r.magFilter:THREE.LinearFilter;a.minFilter=undefined!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter;a.anisotropy=undefined!==r.anisotropy?r.anisotropy:1;if(undefined!==r.format){a.format=r.format}if(undefined!==r.type){a.type=r.type}if(undefined!==r.mipmaps){a.mipmaps=r.mipmaps}if(1===r.mipmapCount){a.minFilter=THREE.LinearFilter}a.needsUpdate=true;if(t)t(a,r)},r,n);return a}};THREE.CompressedTextureLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager;this._parser=null};THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(e,t,r,n){var i=this;var a=[];var o=new THREE.CompressedTexture;o.image=a;var s=new THREE.XHRLoader(this.manager);s.setPath(this.path);s.setResponseType("arraybuffer");function c(c){s.load(e[c],function(e){var r=i._parser(e,true);a[c]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps};u+=1;if(u===6){if(r.mipmapCount===1)o.minFilter=THREE.LinearFilter;o.format=r.format;o.needsUpdate=true;if(t)t(o)}},r,n)}if(Array.isArray(e)){var u=0;for(var l=0,h=e.length;l<h;++l){c(l)}}else{s.load(e,function(e){var r=i._parser(e,true);if(r.isCubemap){var n=r.mipmaps.length/r.mipmapCount;for(var s=0;s<n;s++){a[s]={mipmaps:[]};for(var c=0;c<r.mipmapCount;c++){a[s].mipmaps.push(r.mipmaps[s*r.mipmapCount+c]);a[s].format=r.format;a[s].width=r.width;a[s].height=r.height}}}else{o.image.width=r.width;o.image.height=r.height;o.mipmaps=r.mipmaps}if(r.mipmapCount===1){o.minFilter=THREE.LinearFilter}o.format=r.format;o.needsUpdate=true;if(t)t(o)},r,n)}return o},setPath:function(e){this.path=e}};THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Material";this.fog=true;this.lights=true;this.blending=THREE.NormalBlending;this.side=THREE.FrontSide;this.shading=THREE.SmoothShading;this.vertexColors=THREE.NoColors;this.opacity=1;this.transparent=false;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=THREE.LessEqualDepth;this.depthTest=true;this.depthWrite=true;this.clippingPlanes=null;this.clipShadows=false;this.colorWrite=true;this.precision=null;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.premultipliedAlpha=false;this.overdraw=0;this.visible=true;this._needsUpdate=true};THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){if(e===true)this.update();this._needsUpdate=e},setValues:function(e){if(e===undefined)return;for(var t in e){var r=e[t];if(r===undefined){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}var n=this[t];if(n===undefined){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}if(n instanceof THREE.Color){n.set(r)}else if(n instanceof THREE.Vector3&&r instanceof THREE.Vector3){n.copy(r)}else if(t==="overdraw"){this[t]=Number(r)}else{this[t]=r}}},toJSON:function(e){var t=e===undefined;if(t){e={textures:{},images:{}}}var r={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};r.uuid=this.uuid;r.type=this.type;if(this.name!=="")r.name=this.name;if(this.color instanceof THREE.Color)r.color=this.color.getHex();if(this.roughness!==.5)r.roughness=this.roughness;if(this.metalness!==.5)r.metalness=this.metalness;if(this.emissive instanceof THREE.Color)r.emissive=this.emissive.getHex();if(this.specular instanceof THREE.Color)r.specular=this.specular.getHex();if(this.shininess!==undefined)r.shininess=this.shininess;if(this.map instanceof THREE.Texture)r.map=this.map.toJSON(e).uuid;if(this.alphaMap instanceof THREE.Texture)r.alphaMap=this.alphaMap.toJSON(e).uuid;if(this.lightMap instanceof THREE.Texture)r.lightMap=this.lightMap.toJSON(e).uuid;if(this.bumpMap instanceof THREE.Texture){r.bumpMap=this.bumpMap.toJSON(e).uuid;r.bumpScale=this.bumpScale}if(this.normalMap instanceof THREE.Texture){r.normalMap=this.normalMap.toJSON(e).uuid;r.normalScale=this.normalScale.toArray()}if(this.displacementMap instanceof THREE.Texture){r.displacementMap=this.displacementMap.toJSON(e).uuid;r.displacementScale=this.displacementScale;r.displacementBias=this.displacementBias}if(this.roughnessMap instanceof THREE.Texture)r.roughnessMap=this.roughnessMap.toJSON(e).uuid;if(this.metalnessMap instanceof THREE.Texture)r.metalnessMap=this.metalnessMap.toJSON(e).uuid;if(this.emissiveMap instanceof THREE.Texture)r.emissiveMap=this.emissiveMap.toJSON(e).uuid;if(this.specularMap instanceof THREE.Texture)r.specularMap=this.specularMap.toJSON(e).uuid;if(this.envMap instanceof THREE.Texture){r.envMap=this.envMap.toJSON(e).uuid;r.reflectivity=this.reflectivity}if(this.size!==undefined)r.size=this.size;if(this.sizeAttenuation!==undefined)r.sizeAttenuation=this.sizeAttenuation;if(this.blending!==THREE.NormalBlending)r.blending=this.blending;if(this.shading!==THREE.SmoothShading)r.shading=this.shading;if(this.side!==THREE.FrontSide)r.side=this.side;if(this.vertexColors!==THREE.NoColors)r.vertexColors=this.vertexColors;if(this.opacity<1)r.opacity=this.opacity;if(this.transparent===true)r.transparent=this.transparent;if(this.alphaTest>0)r.alphaTest=this.alphaTest;if(this.premultipliedAlpha===true)r.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)r.wireframe=this.wireframe;if(this.wireframeLinewidth>1)r.wireframeLinewidth=this.wireframeLinewidth;function n(e){var t=[];for(var r in e){var n=e[r];delete n.metadata;t.push(n)}return t}if(t){var i=n(e.textures);var a=n(e.images);if(i.length>0)r.textures=i;if(a.length>0)r.images=a}return r},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name;this.fog=e.fog;this.lights=e.lights;this.blending=e.blending;this.side=e.side;this.vertexColors=e.vertexColors;this.opacity=e.opacity;this.transparent=e.transparent;this.blendSrc=e.blendSrc;this.blendDst=e.blendDst;this.blendEquation=e.blendEquation;this.blendSrcAlpha=e.blendSrcAlpha;this.blendDstAlpha=e.blendDstAlpha;this.blendEquationAlpha=e.blendEquationAlpha;this.depthFunc=e.depthFunc;this.depthTest=e.depthTest;this.depthWrite=e.depthWrite;this.colorWrite=e.colorWrite;this.precision=e.precision;this.polygonOffset=e.polygonOffset;this.polygonOffsetFactor=e.polygonOffsetFactor;this.polygonOffsetUnits=e.polygonOffsetUnits;this.alphaTest=e.alphaTest;this.premultipliedAlpha=e.premultipliedAlpha;this.overdraw=e.overdraw;this.visible=e.visible;this.clipShadows=e.clipShadows;var t=e.clippingPlanes,r=null;if(t!==null){var n=t.length;r=new Array(n);for(var i=0;i!==n;++i)r[i]=t[i].clone()}this.clippingPlanes=r;return this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};Object.assign(THREE.Material.prototype,THREE.EventDispatcher.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(e){THREE.Material.call(this);this.type="LineBasicMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.lights=false;this.setValues(e)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;THREE.LineBasicMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.color.copy(e.color);this.linewidth=e.linewidth;this.linecap=e.linecap;this.linejoin=e.linejoin;return this};THREE.LineDashedMaterial=function(e){THREE.Material.call(this);this.type="LineDashedMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.scale=1;this.dashSize=3;this.gapSize=1;this.lights=false;this.setValues(e)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;THREE.LineDashedMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.color.copy(e.color);this.linewidth=e.linewidth;this.scale=e.scale;this.dashSize=e.dashSize;this.gapSize=e.gapSize;return this};THREE.MeshBasicMaterial=function(e){THREE.Material.call(this);this.type="MeshBasicMaterial";this.color=new THREE.Color(16777215);this.map=null;this.aoMap=null;this.aoMapIntensity=1;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.lights=false;this.setValues(e)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;THREE.MeshBasicMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.color.copy(e.color);this.map=e.map;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;return this};THREE.MeshDepthMaterial=function(e){THREE.Material.call(this);this.type="MeshDepthMaterial";this.depthPacking=THREE.BasicDepthPacking;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.setValues(e)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;THREE.MeshDepthMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.depthPacking=e.depthPacking;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.map=e.map;this.alphaMap=e.alphaMap;this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;return this};THREE.MeshLambertMaterial=function(e){THREE.Material.call(this);this.type="MeshLambertMaterial";this.color=new THREE.Color(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;THREE.MeshLambertMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.color.copy(e.color);this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;return this};THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e);this.type="MeshNormalMaterial";this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.morphTargets=false;this.setValues(e)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;return this};THREE.MeshPhongMaterial=function(e){THREE.Material.call(this);this.type="MeshPhongMaterial";this.color=new THREE.Color(16777215);this.specular=new THREE.Color(1118481);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;THREE.MeshPhongMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.color.copy(e.color);this.specular.copy(e.specular);this.shininess=e.shininess;this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;return this};THREE.MeshStandardMaterial=function(e){THREE.Material.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new THREE.Color(16777215);this.roughness=.5;this.metalness=.5;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)};THREE.MeshStandardMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshStandardMaterial.prototype.constructor=THREE.MeshStandardMaterial;THREE.MeshStandardMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.defines={STANDARD:""};this.color.copy(e.color);this.roughness=e.roughness;this.metalness=e.metalness;this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.roughnessMap=e.roughnessMap;this.metalnessMap=e.metalnessMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.envMapIntensity=e.envMapIntensity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;return this};THREE.MeshPhysicalMaterial=function(e){THREE.MeshStandardMaterial.call(this);this.defines={PHYSICAL:""};this.type="MeshPhysicalMaterial";this.reflectivity=.5;this.setValues(e)};THREE.MeshPhysicalMaterial.prototype=Object.create(THREE.MeshStandardMaterial.prototype);THREE.MeshPhysicalMaterial.prototype.constructor=THREE.MeshPhysicalMaterial;THREE.MeshPhysicalMaterial.prototype.copy=function(e){THREE.MeshStandardMaterial.prototype.copy.call(this,e);this.defines={PHYSICAL:""};this.reflectivity=e.reflectivity;return this};THREE.MultiMaterial=function(e){this.uuid=THREE.Math.generateUUID();this.type="MultiMaterial";this.materials=e instanceof Array?e:[];this.visible=true};THREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(e){var t={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]};var r=this.materials;for(var n=0,i=r.length;n<i;n++){var a=r[n].toJSON(e);delete a.metadata;t.materials.push(a)}t.visible=this.visible;return t},clone:function(){var e=new this.constructor;for(var t=0;t<this.materials.length;t++){e.materials.push(this.materials[t].clone())}e.visible=this.visible;return e}};THREE.PointsMaterial=function(e){THREE.Material.call(this);this.type="PointsMaterial";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=true;this.lights=false;this.setValues(e)};THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial;THREE.PointsMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.color.copy(e.color);this.map=e.map;this.size=e.size;this.sizeAttenuation=e.sizeAttenuation;return this};THREE.ShaderMaterial=function(e){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.clipping=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.extensions={derivatives:false,fragDepth:false,drawBuffers:false,shaderTextureLOD:false};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=undefined;if(e!==undefined){if(e.attributes!==undefined){console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.")}this.setValues(e)}};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;THREE.ShaderMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.fragmentShader=e.fragmentShader;this.vertexShader=e.vertexShader;this.uniforms=THREE.UniformsUtils.clone(e.uniforms);this.defines=e.defines;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.lights=e.lights;this.clipping=e.clipping;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;this.extensions=e.extensions;return this};THREE.ShaderMaterial.prototype.toJSON=function(e){var t=THREE.Material.prototype.toJSON.call(this,e);t.uniforms=this.uniforms;t.vertexShader=this.vertexShader;t.fragmentShader=this.fragmentShader;return t};THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e);this.type="RawShaderMaterial";
};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.SpriteMaterial=function(e){THREE.Material.call(this);this.type="SpriteMaterial";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=false;this.lights=false;this.setValues(e)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;THREE.SpriteMaterial.prototype.copy=function(e){THREE.Material.prototype.copy.call(this,e);this.color.copy(e.color);this.map=e.map;this.rotation=e.rotation;return this};THREE.ShadowMaterial=function(){THREE.ShaderMaterial.call(this,{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["lights"],{opacity:{value:1}}]),vertexShader:THREE.ShaderChunk["shadow_vert"],fragmentShader:THREE.ShaderChunk["shadow_frag"]});this.lights=true;this.transparent=true;Object.defineProperties(this,{opacity:{enumerable:true,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}}})};THREE.ShadowMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.ShadowMaterial.prototype.constructor=THREE.ShadowMaterial;THREE.Texture=function(e,t,r,n,i,a,o,s,c,u){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.sourceFile="";this.image=e!==undefined?e:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=t!==undefined?t:THREE.Texture.DEFAULT_MAPPING;this.wrapS=r!==undefined?r:THREE.ClampToEdgeWrapping;this.wrapT=n!==undefined?n:THREE.ClampToEdgeWrapping;this.magFilter=i!==undefined?i:THREE.LinearFilter;this.minFilter=a!==undefined?a:THREE.LinearMipMapLinearFilter;this.anisotropy=c!==undefined?c:1;this.format=o!==undefined?o:THREE.RGBAFormat;this.type=s!==undefined?s:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.encoding=u!==undefined?u:THREE.LinearEncoding;this.version=0;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=undefined;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;THREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(e){if(e===true)this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.image=e.image;this.mipmaps=e.mipmaps.slice(0);this.mapping=e.mapping;this.wrapS=e.wrapS;this.wrapT=e.wrapT;this.magFilter=e.magFilter;this.minFilter=e.minFilter;this.anisotropy=e.anisotropy;this.format=e.format;this.type=e.type;this.offset.copy(e.offset);this.repeat.copy(e.repeat);this.generateMipmaps=e.generateMipmaps;this.premultiplyAlpha=e.premultiplyAlpha;this.flipY=e.flipY;this.unpackAlignment=e.unpackAlignment;this.encoding=e.encoding;return this},toJSON:function(e){if(e.textures[this.uuid]!==undefined){return e.textures[this.uuid]}function t(e){var t;if(e.toDataURL!==undefined){t=e}else{t=document.createElement("canvas");t.width=e.width;t.height=e.height;t.getContext("2d").drawImage(e,0,0,e.width,e.height)}if(t.width>2048||t.height>2048){return t.toDataURL("image/jpeg",.6)}else{return t.toDataURL("image/png")}}var r={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(this.image!==undefined){var n=this.image;if(n.uuid===undefined){n.uuid=THREE.Math.generateUUID()}if(e.images[n.uuid]===undefined){e.images[n.uuid]={uuid:n.uuid,url:t(n)}}r.image=n.uuid}e.textures[this.uuid]=r;return r},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==THREE.UVMapping)return;e.multiply(this.repeat);e.add(this.offset);if(e.x<0||e.x>1){switch(this.wrapS){case THREE.RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case THREE.ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case THREE.MirroredRepeatWrapping:if(Math.abs(Math.floor(e.x)%2)===1){e.x=Math.ceil(e.x)-e.x}else{e.x=e.x-Math.floor(e.x)}break}}if(e.y<0||e.y>1){switch(this.wrapT){case THREE.RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case THREE.ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case THREE.MirroredRepeatWrapping:if(Math.abs(Math.floor(e.y)%2)===1){e.y=Math.ceil(e.y)-e.y}else{e.y=e.y-Math.floor(e.y)}break}}if(this.flipY){e.y=1-e.y}}};Object.assign(THREE.Texture.prototype,THREE.EventDispatcher.prototype);THREE.TextureIdCount=0;THREE.DepthTexture=function(e,t,r,n,i,a,o,s,c){THREE.Texture.call(this,null,n,i,a,o,s,THREE.DepthFormat,r,c);this.image={width:e,height:t};this.type=r!==undefined?r:THREE.UnsignedShortType;this.magFilter=o!==undefined?o:THREE.NearestFilter;this.minFilter=s!==undefined?s:THREE.NearestFilter;this.flipY=false;this.generateMipmaps=false};THREE.DepthTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DepthTexture.prototype.constructor=THREE.DepthTexture;THREE.CanvasTexture=function(e,t,r,n,i,a,o,s,c){THREE.Texture.call(this,e,t,r,n,i,a,o,s,c);this.needsUpdate=true};THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture;THREE.CubeTexture=function(e,t,r,n,i,a,o,s,c,u){e=e!==undefined?e:[];t=t!==undefined?t:THREE.CubeReflectionMapping;THREE.Texture.call(this,e,t,r,n,i,a,o,s,c,u);this.flipY=false};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;Object.defineProperty(THREE.CubeTexture.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});THREE.CompressedTexture=function(e,t,r,n,i,a,o,s,c,u,l,h){THREE.Texture.call(this,null,a,o,s,c,u,n,i,l,h);this.image={width:t,height:r};this.mipmaps=e;this.flipY=false;this.generateMipmaps=false};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;THREE.DataTexture=function(e,t,r,n,i,a,o,s,c,u,l,h){THREE.Texture.call(this,null,a,o,s,c,u,n,i,l,h);this.image={data:e,width:t,height:r};this.magFilter=c!==undefined?c:THREE.NearestFilter;this.minFilter=u!==undefined?u:THREE.NearestFilter;this.flipY=false;this.generateMipmaps=false};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;THREE.VideoTexture=function(e,t,r,n,i,a,o,s,c){THREE.Texture.call(this,e,t,r,n,i,a,o,s,c);this.generateMipmaps=false;var u=this;function l(){requestAnimationFrame(l);if(e.readyState>=e.HAVE_CURRENT_DATA){u.needsUpdate=true}}l()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;THREE.Group=function(){THREE.Object3D.call(this);this.type="Group"};THREE.Group.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Group});THREE.Points=function(e,t){THREE.Object3D.call(this);this.type="Points";this.geometry=e!==undefined?e:new THREE.BufferGeometry;this.material=t!==undefined?t:new THREE.PointsMaterial({color:Math.random()*16777215})};THREE.Points.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Points,raycast:function(){var e=new THREE.Matrix4;var t=new THREE.Ray;var r=new THREE.Sphere;return function n(i,a){var o=this;var s=this.geometry;var c=this.matrixWorld;var u=i.params.Points.threshold;if(s.boundingSphere===null)s.computeBoundingSphere();r.copy(s.boundingSphere);r.applyMatrix4(c);if(i.ray.intersectsSphere(r)===false)return;e.getInverse(c);t.copy(i.ray).applyMatrix4(e);var l=u/((this.scale.x+this.scale.y+this.scale.z)/3);var h=l*l;var f=new THREE.Vector3;function d(e,r){var n=t.distanceSqToPoint(e);if(n<h){var s=t.closestPointToPoint(e);s.applyMatrix4(c);var u=i.ray.origin.distanceTo(s);if(u<i.near||u>i.far)return;a.push({distance:u,distanceToRay:Math.sqrt(n),point:s.clone(),index:r,face:null,object:o})}}if(s instanceof THREE.BufferGeometry){var p=s.index;var E=s.attributes;var m=E.position.array;if(p!==null){var v=p.array;for(var g=0,T=v.length;g<T;g++){var y=v[g];f.fromArray(m,y*3);d(f,y)}}else{for(var g=0,R=m.length/3;g<R;g++){f.fromArray(m,g*3);d(f,g)}}}else{var x=s.vertices;for(var g=0,R=x.length;g<R;g++){d(x[g],g)}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});THREE.Line=function(e,t,r){if(r===1){console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.");return new THREE.LineSegments(e,t)}THREE.Object3D.call(this);this.type="Line";this.geometry=e!==undefined?e:new THREE.BufferGeometry;this.material=t!==undefined?t:new THREE.LineBasicMaterial({color:Math.random()*16777215})};THREE.Line.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Line,raycast:function(){var e=new THREE.Matrix4;var t=new THREE.Ray;var r=new THREE.Sphere;return function n(i,a){var o=i.linePrecision;var s=o*o;var c=this.geometry;var u=this.matrixWorld;if(c.boundingSphere===null)c.computeBoundingSphere();r.copy(c.boundingSphere);r.applyMatrix4(u);if(i.ray.intersectsSphere(r)===false)return;e.getInverse(u);t.copy(i.ray).applyMatrix4(e);var l=new THREE.Vector3;var h=new THREE.Vector3;var f=new THREE.Vector3;var d=new THREE.Vector3;var p=this instanceof THREE.LineSegments?2:1;if(c instanceof THREE.BufferGeometry){var E=c.index;var m=c.attributes;var v=m.position.array;if(E!==null){var g=E.array;for(var T=0,y=g.length-1;T<y;T+=p){var R=g[T];var x=g[T+1];l.fromArray(v,R*3);h.fromArray(v,x*3);var H=t.distanceSqToSegment(l,h,d,f);if(H>s)continue;d.applyMatrix4(this.matrixWorld);var b=i.ray.origin.distanceTo(d);if(b<i.near||b>i.far)continue;a.push({distance:b,point:f.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}else{for(var T=0,y=v.length/3-1;T<y;T+=p){l.fromArray(v,3*T);h.fromArray(v,3*T+3);var H=t.distanceSqToSegment(l,h,d,f);if(H>s)continue;d.applyMatrix4(this.matrixWorld);var b=i.ray.origin.distanceTo(d);if(b<i.near||b>i.far)continue;a.push({distance:b,point:f.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}}else if(c instanceof THREE.Geometry){var _=c.vertices;var M=_.length;for(var T=0;T<M-1;T+=p){var H=t.distanceSqToSegment(_[T],_[T+1],d,f);if(H>s)continue;d.applyMatrix4(this.matrixWorld);var b=i.ray.origin.distanceTo(d);if(b<i.near||b>i.far)continue;a.push({distance:b,point:f.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});THREE.LineSegments=function(e,t){THREE.Line.call(this,e,t);this.type="LineSegments"};THREE.LineSegments.prototype=Object.assign(Object.create(THREE.Line.prototype),{constructor:THREE.LineSegments});THREE.Mesh=function(e,t){THREE.Object3D.call(this);this.type="Mesh";this.geometry=e!==undefined?e:new THREE.BufferGeometry;this.material=t!==undefined?t:new THREE.MeshBasicMaterial({color:Math.random()*16777215});this.drawMode=THREE.TrianglesDrawMode;this.updateMorphTargets()};THREE.Mesh.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Mesh,setDrawMode:function(e){this.drawMode=e},updateMorphTargets:function(){if(this.geometry.morphTargets!==undefined&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1;this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++){this.morphTargetInfluences.push(0);this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}}},getMorphTargetIndexByName:function(e){if(this.morphTargetDictionary[e]!==undefined){return this.morphTargetDictionary[e]}console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0.");return 0},raycast:function(){var e=new THREE.Matrix4;var t=new THREE.Ray;var r=new THREE.Sphere;var n=new THREE.Vector3;var i=new THREE.Vector3;var a=new THREE.Vector3;var o=new THREE.Vector3;var s=new THREE.Vector3;var c=new THREE.Vector3;var u=new THREE.Vector2;var l=new THREE.Vector2;var h=new THREE.Vector2;var f=new THREE.Vector3;var d=new THREE.Vector3;var p=new THREE.Vector3;function E(e,t,r,n,i,a,o){THREE.Triangle.barycoordFromPoint(e,t,r,n,f);i.multiplyScalar(f.x);a.multiplyScalar(f.y);o.multiplyScalar(f.z);i.add(a).add(o);return i.clone()}function m(e,t,r,n,i,a,o){var s;var c=e.material;if(c.side===THREE.BackSide){s=r.intersectTriangle(a,i,n,true,o)}else{s=r.intersectTriangle(n,i,a,c.side!==THREE.DoubleSide,o)}if(s===null)return null;p.copy(o);p.applyMatrix4(e.matrixWorld);var u=t.ray.origin.distanceTo(p);if(u<t.near||u>t.far)return null;return{distance:u,point:p.clone(),object:e}}function v(e,t,r,o,s,c,f,p){n.fromArray(o,c*3);i.fromArray(o,f*3);a.fromArray(o,p*3);var v=m(e,t,r,n,i,a,d);if(v){if(s){u.fromArray(s,c*2);l.fromArray(s,f*2);h.fromArray(s,p*2);v.uv=E(d,n,i,a,u,l,h)}v.face=new THREE.Face3(c,f,p,THREE.Triangle.normal(n,i,a));v.faceIndex=c}return v}return function g(f,p){var g=this.geometry;var T=this.material;var y=this.matrixWorld;if(T===undefined)return;if(g.boundingSphere===null)g.computeBoundingSphere();r.copy(g.boundingSphere);r.applyMatrix4(y);if(f.ray.intersectsSphere(r)===false)return;e.getInverse(y);t.copy(f.ray).applyMatrix4(e);if(g.boundingBox!==null){if(t.intersectsBox(g.boundingBox)===false)return}var R,x;if(g instanceof THREE.BufferGeometry){var H,b,_;var M=g.index;var w=g.attributes;var S=w.position.array;if(w.uv!==undefined){R=w.uv.array}if(M!==null){var L=M.array;for(var A=0,C=L.length;A<C;A+=3){H=L[A];b=L[A+1];_=L[A+2];x=v(this,f,t,S,R,H,b,_);if(x){x.faceIndex=Math.floor(A/3);p.push(x)}}}else{for(var A=0,C=S.length;A<C;A+=9){H=A/3;b=H+1;_=H+2;x=v(this,f,t,S,R,H,b,_);if(x){x.index=H;p.push(x)}}}}else if(g instanceof THREE.Geometry){var P,I,B;var D=T instanceof THREE.MultiMaterial;var U=D===true?T.materials:null;var O=g.vertices;var F=g.faces;var N=g.faceVertexUvs[0];if(N.length>0)R=N;for(var V=0,G=F.length;V<G;V++){var z=F[V];var k=D===true?U[z.materialIndex]:T;if(k===undefined)continue;P=O[z.a];I=O[z.b];B=O[z.c];if(k.morphTargets===true){var j=g.morphTargets;var W=this.morphTargetInfluences;n.set(0,0,0);i.set(0,0,0);a.set(0,0,0);for(var X=0,Y=j.length;X<Y;X++){var q=W[X];if(q===0)continue;var Z=j[X].vertices;n.addScaledVector(o.subVectors(Z[z.a],P),q);i.addScaledVector(s.subVectors(Z[z.b],I),q);a.addScaledVector(c.subVectors(Z[z.c],B),q)}n.add(P);i.add(I);a.add(B);P=n;I=i;B=a}x=m(this,f,t,P,I,B,d);if(x){if(R){var K=R[V];u.copy(K[0]);l.copy(K[1]);h.copy(K[2]);x.uv=E(d,P,I,B,u,l,h)}x.face=z;x.faceIndex=V;p.push(x)}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});THREE.Bone=function(e){THREE.Object3D.call(this);this.type="Bone";this.skin=e};THREE.Bone.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Bone,copy:function(e){THREE.Object3D.prototype.copy.call(this,e);this.skin=e.skin;return this}});THREE.Skeleton=function(e,t,r){this.useVertexTexture=r!==undefined?r:true;this.identityMatrix=new THREE.Matrix4;e=e||[];this.bones=e.slice(0);if(this.useVertexTexture){var n=Math.sqrt(this.bones.length*4);n=THREE.Math.nextPowerOfTwo(Math.ceil(n));n=Math.max(n,4);this.boneTextureWidth=n;this.boneTextureHeight=n;this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)}else{this.boneMatrices=new Float32Array(16*this.bones.length)}if(t===undefined){this.calculateInverses()}else{if(this.bones.length===t.length){this.boneInverses=t.slice(0)}else{console.warn("THREE.Skeleton bonInverses is the wrong length.");this.boneInverses=[];for(var i=0,a=this.bones.length;i<a;i++){this.boneInverses.push(new THREE.Matrix4)}}}};Object.assign(THREE.Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var r=new THREE.Matrix4;if(this.bones[e]){r.getInverse(this.bones[e].matrixWorld)}this.boneInverses.push(r)}},pose:function(){var e;for(var t=0,r=this.bones.length;t<r;t++){e=this.bones[t];if(e){e.matrixWorld.getInverse(this.boneInverses[t])}}for(var t=0,r=this.bones.length;t<r;t++){e=this.bones[t];if(e){if(e.parent){e.matrix.getInverse(e.parent.matrixWorld);e.matrix.multiply(e.matrixWorld)}else{e.matrix.copy(e.matrixWorld)}e.matrix.decompose(e.position,e.quaternion,e.scale)}}},update:function(){var e=new THREE.Matrix4;return function t(){for(var t=0,r=this.bones.length;t<r;t++){var n=this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix;e.multiplyMatrices(n,this.boneInverses[t]);e.toArray(this.boneMatrices,t*16)}if(this.useVertexTexture){this.boneTexture.needsUpdate=true}}}(),clone:function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)}});THREE.SkinnedMesh=function(e,t,r){THREE.Mesh.call(this,e,t);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;var n=[];if(this.geometry&&this.geometry.bones!==undefined){var i,a;for(var o=0,s=this.geometry.bones.length;o<s;++o){a=this.geometry.bones[o];i=new THREE.Bone(this);n.push(i);i.name=a.name;i.position.fromArray(a.pos);i.quaternion.fromArray(a.rotq);if(a.scl!==undefined)i.scale.fromArray(a.scl)}for(var o=0,s=this.geometry.bones.length;o<s;++o){a=this.geometry.bones[o];if(a.parent!==-1&&a.parent!==null&&n[a.parent]!==undefined){n[a.parent].add(n[o])}else{this.add(n[o])}}}this.normalizeSkinWeights();this.updateMatrixWorld(true);this.bind(new THREE.Skeleton(n,undefined,r),this.matrixWorld)};THREE.SkinnedMesh.prototype=Object.assign(Object.create(THREE.Mesh.prototype),{constructor:THREE.SkinnedMesh,bind:function(e,t){this.skeleton=e;if(t===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();t=this.matrixWorld}this.bindMatrix.copy(t);this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){if(this.geometry instanceof THREE.Geometry){for(var e=0;e<this.geometry.skinWeights.length;e++){var t=this.geometry.skinWeights[e];var r=1/t.lengthManhattan();if(r!==Infinity){t.multiplyScalar(r)}else{t.set(1,0,0,0)}}}else if(this.geometry instanceof THREE.BufferGeometry){var n=new THREE.Vector4;var i=this.geometry.attributes.skinWeight;for(var e=0;e<i.count;e++){n.x=i.getX(e);n.y=i.getY(e);n.z=i.getZ(e);n.w=i.getW(e);var r=1/n.lengthManhattan();if(r!==Infinity){n.multiplyScalar(r)}else{n.set(1,0,0,0)}i.setXYZW(e,n.x,n.y,n.z,n.w)}}},updateMatrixWorld:function(e){THREE.Mesh.prototype.updateMatrixWorld.call(this,true);if(this.bindMode==="attached"){this.bindMatrixInverse.getInverse(this.matrixWorld)}else if(this.bindMode==="detached"){this.bindMatrixInverse.getInverse(this.bindMatrix)}else{console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)}},clone:function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)}});THREE.LOD=function(){THREE.Object3D.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:true,value:[]}})};THREE.LOD.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.LOD,copy:function(e){THREE.Object3D.prototype.copy.call(this,e,false);var t=e.levels;for(var r=0,n=t.length;r<n;r++){var i=t[r];this.addLevel(i.object.clone(),i.distance)}return this},addLevel:function(e,t){if(t===undefined)t=0;t=Math.abs(t);var r=this.levels;for(var n=0;n<r.length;n++){if(t<r[n].distance){break}}r.splice(n,0,{distance:t,object:e});this.add(e)},getObjectForDistance:function(e){var t=this.levels;for(var r=1,n=t.length;r<n;r++){if(e<t[r].distance){break}}return t[r-1].object},raycast:function(){var e=new THREE.Vector3;return function t(r,n){e.setFromMatrixPosition(this.matrixWorld);var i=r.ray.origin.distanceTo(e);this.getObjectForDistance(i).raycast(r,n)}}(),update:function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function r(n){var i=this.levels;if(i.length>1){e.setFromMatrixPosition(n.matrixWorld);t.setFromMatrixPosition(this.matrixWorld);var a=e.distanceTo(t);i[0].object.visible=true;for(var o=1,s=i.length;o<s;o++){if(a>=i[o].distance){i[o-1].object.visible=false;i[o].object.visible=true}else{break}}for(;o<s;o++){i[o].object.visible=false}}}}(),toJSON:function(e){var t=THREE.Object3D.prototype.toJSON.call(this,e);t.object.levels=[];var r=this.levels;for(var n=0,i=r.length;n<i;n++){var a=r[n];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}});THREE.Sprite=function(e){THREE.Object3D.call(this);this.type="Sprite";this.material=e!==undefined?e:new THREE.SpriteMaterial};THREE.Sprite.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Sprite,raycast:function(){var e=new THREE.Vector3;return function t(r,n){e.setFromMatrixPosition(this.matrixWorld);var i=r.ray.distanceSqToPoint(e);var a=this.scale.x*this.scale.y/4;if(i>a){return}n.push({distance:Math.sqrt(i),point:this.position,face:null,object:this})}}(),clone:function(){return new this.constructor(this.material).copy(this)}});THREE.LensFlare=function(e,t,r,n,i){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=undefined;if(e!==undefined){this.add(e,t,r,n,i)}};THREE.LensFlare.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.LensFlare,copy:function(e){THREE.Object3D.prototype.copy.call(this,e);this.positionScreen.copy(e.positionScreen);this.customUpdateCallback=e.customUpdateCallback;for(var t=0,r=e.lensFlares.length;t<r;t++){this.lensFlares.push(e.lensFlares[t])}return this},add:function(e,t,r,n,i,a){if(t===undefined)t=-1;if(r===undefined)r=0;if(a===undefined)a=1;if(i===undefined)i=new THREE.Color(16777215);if(n===undefined)n=THREE.NormalBlending;r=Math.min(r,Math.max(0,r));this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:0,opacity:a,color:i,blending:n})},updateLensFlares:function(){var e,t=this.lensFlares.length;var r;var n=-this.positionScreen.x*2;var i=-this.positionScreen.y*2;for(e=0;e<t;e++){r=this.lensFlares[e];r.x=this.positionScreen.x+n*r.distance;r.y=this.positionScreen.y+i*r.distance;r.wantedRotation=r.x*Math.PI*.25;r.rotation+=(r.wantedRotation-r.rotation)*.25}}});THREE.Scene=function(){THREE.Object3D.call(this);this.type="Scene";this.fog=null;this.overrideMaterial=null;this.autoUpdate=true};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.copy=function(e,t){THREE.Object3D.prototype.copy.call(this,e,t);if(e.fog!==null)this.fog=e.fog.clone();if(e.overrideMaterial!==null)this.overrideMaterial=e.overrideMaterial.clone();this.autoUpdate=e.autoUpdate;this.matrixAutoUpdate=e.matrixAutoUpdate;return this};THREE.Fog=function(e,t,r){this.name="";this.color=new THREE.Color(e);this.near=t!==undefined?t:1;this.far=r!==undefined?r:1e3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(e,t){this.name="";this.color=new THREE.Color(e);this.density=t!==undefined?t:25e-5};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk["alphamap_fragment"]="#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n";THREE.ShaderChunk["alphamap_pars_fragment"]="#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif\n";THREE.ShaderChunk["alphatest_fragment"]="#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n";THREE.ShaderChunk["aomap_fragment"]="#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif\n";THREE.ShaderChunk["aomap_pars_fragment"]="#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif";THREE.ShaderChunk["begin_vertex"]="\nvec3 transformed = vec3( position );\n";THREE.ShaderChunk["beginnormal_vertex"]="\nvec3 objectNormal = vec3( normal );\n";THREE.ShaderChunk["bsdfs"]="bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n	return any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n		if( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n			float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n			float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n			return distanceFalloff * maxDistanceCutoffFactor;\n#else\n			return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n		}\n		return 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n	return specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n";THREE.ShaderChunk["bumpmap_pars_fragment"]="#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif\n";THREE.ShaderChunk["clipping_planes_fragment"]="#if NUM_CLIPPING_PLANES > 0\n	for ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\n		vec4 plane = clippingPlanes[ i ];\n		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n	}\n#endif\n";THREE.ShaderChunk["clipping_planes_pars_fragment"]="#if NUM_CLIPPING_PLANES > 0\n	#if ! defined( PHYSICAL ) && ! defined( PHONG )\n		varying vec3 vViewPosition;\n	#endif\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n";THREE.ShaderChunk["clipping_planes_pars_vertex"]="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n	varying vec3 vViewPosition;\n#endif\n";THREE.ShaderChunk["clipping_planes_vertex"]="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n	vViewPosition = - mvPosition.xyz;\n#endif\n";THREE.ShaderChunk["color_fragment"]="#ifdef USE_COLOR\n	diffuseColor.rgb *= vColor;\n#endif";THREE.ShaderChunk["color_pars_fragment"]="#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif\n";THREE.ShaderChunk["color_pars_vertex"]="#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif";THREE.ShaderChunk["color_vertex"]="#ifdef USE_COLOR\n	vColor.xyz = color.xyz;\n#endif";THREE.ShaderChunk["common"]="#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n";
THREE.ShaderChunk["cube_uv_reflection_fragment"]="#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n	vec3 absDirection = abs(direction);\n	int face = -1;\n	if( absDirection.x > absDirection.z ) {\n		if(absDirection.x > absDirection.y )\n			face = direction.x > 0.0 ? 0 : 3;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	else {\n		if(absDirection.z > absDirection.y )\n			face = direction.z > 0.0 ? 2 : 5;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	return face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n	float dxRoughness = dFdx(roughness);\n	float dyRoughness = dFdy(roughness);\n	vec3 dx = dFdx( vec * scale * dxRoughness );\n	vec3 dy = dFdy( vec * scale * dyRoughness );\n	float d = max( dot( dx, dx ), dot( dy, dy ) );\n	d = clamp(d, 1.0, cubeUV_rangeClamp);\n	float mipLevel = 0.5 * log2(d);\n	return vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n	float a = 16.0 * cubeUV_rcpTextureSize;\n	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n	float powScale = exp2_packed.x * exp2_packed.y;\n	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n	bool bRes = mipLevel == 0.0;\n	scale =  bRes && (scale < a) ? a : scale;\n	vec3 r;\n	vec2 offset;\n	int face = getFaceFromDirection(direction);\n	float rcpPowScale = 1.0 / powScale;\n	if( face == 0) {\n		r = vec3(direction.x, -direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 1) {\n		r = vec3(direction.y, direction.x, direction.z);\n		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 2) {\n		r = vec3(direction.z, direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 3) {\n		r = vec3(direction.x, direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	else if( face == 4) {\n		r = vec3(direction.y, direction.x, -direction.z);\n		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	else {\n		r = vec3(direction.z, -direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	r = normalize(r);\n	float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n	vec2 base = offset + vec2( texelOffset );\n	return base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n	float roughnessVal = roughness* cubeUV_maxLods3;\n	float r1 = floor(roughnessVal);\n	float r2 = r1 + 1.0;\n	float t = fract(roughnessVal);\n	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n	float s = mipInfo.y;\n	float level0 = mipInfo.x;\n	float level1 = level0 + 1.0;\n	level1 = level1 > 5.0 ? 5.0 : level1;\n	level0 += min( floor( s + 0.5 ), 5.0 );\n	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n	vec4 result = mix(color10, color20, t);\n	return vec4(result.rgb, 1.0);\n}\n#endif\n";THREE.ShaderChunk["defaultnormal_vertex"]="#ifdef FLIP_SIDED\n	objectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n";THREE.ShaderChunk["displacementmap_vertex"]="#ifdef USE_DISPLACEMENTMAP\n	transformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n";THREE.ShaderChunk["displacementmap_pars_vertex"]="#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif\n";THREE.ShaderChunk["emissivemap_fragment"]="#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n";THREE.ShaderChunk["emissivemap_pars_fragment"]="#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif\n";THREE.ShaderChunk["encodings_pars_fragment"]="\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n";THREE.ShaderChunk["encodings_fragment"]="  gl_FragColor = linearToOutputTexel( gl_FragColor );\n";THREE.ShaderChunk["envmap_fragment"]="#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n	#else\n		float flipNormal = 1.0;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n	envColor = envMapTexelToLinear( envColor );\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif\n";THREE.ShaderChunk["envmap_pars_fragment"]="#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n	uniform float reflectivity;\n	uniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n		varying vec3 vWorldPosition;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif\n";THREE.ShaderChunk["envmap_pars_vertex"]="#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif\n";THREE.ShaderChunk["envmap_vertex"]="#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif\n";THREE.ShaderChunk["fog_fragment"]="#ifdef USE_FOG\n	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	#ifdef FOG_EXP2\n		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n";THREE.ShaderChunk["fog_pars_fragment"]="#ifdef USE_FOG\n	uniform vec3 fogColor;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif";THREE.ShaderChunk["lightmap_fragment"]="#ifdef USE_LIGHTMAP\n	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n";THREE.ShaderChunk["lightmap_pars_fragment"]="#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif";THREE.ShaderChunk["lights_lambert_vertex"]="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n#endif\n";THREE.ShaderChunk["lights_pars"]="uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		if ( testLightInRange( lightDistance, pointLight.distance ) ) {\n			directLight.color = pointLight.color;\n			directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		#ifdef DOUBLE_SIDED\n			float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		#else\n			float flipNormal = 1.0;\n		#endif\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			vec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n		#else\n			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n		#endif\n		#ifdef DOUBLE_SIDED\n			float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		#else\n			float flipNormal = 1.0;\n		#endif\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n		#elif defined( ENVMAP_TYPE_EQUIREC )\n			vec2 sampleUV;\n			sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n			sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_SPHERE )\n			vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#endif\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif\n";THREE.ShaderChunk["lights_phong_fragment"]="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n";THREE.ShaderChunk["lights_phong_pars_fragment"]="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3	diffuseColor;\n	vec3	specularColor;\n	float	specularShininess;\n	float	specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)\n";THREE.ShaderChunk["lights_physical_fragment"]="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.16 * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#endif\n";THREE.ShaderChunk["lights_physical_pars_fragment"]="struct PhysicalMaterial {\n	vec3	diffuseColor;\n	float	specularRoughness;\n	vec3	specularColor;\n	#ifndef STANDARD\n	#endif\n};\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n";THREE.ShaderChunk["lights_template"]="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#ifdef USE_LIGHTMAP\n		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n	#endif\n	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n	 	irradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n	#endif\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	vec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n	RE_IndirectSpecular( radiance, geometry, material, reflectedLight );\n#endif\n";THREE.ShaderChunk["logdepthbuf_fragment"]="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif";THREE.ShaderChunk["logdepthbuf_pars_fragment"]="#ifdef USE_LOGDEPTHBUF\n	uniform float logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n#endif\n";THREE.ShaderChunk["logdepthbuf_pars_vertex"]="#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n	uniform float logDepthBufFC;\n#endif";THREE.ShaderChunk["logdepthbuf_vertex"]="#ifdef USE_LOGDEPTHBUF\n	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n	#else\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n	#endif\n#endif\n";THREE.ShaderChunk["map_fragment"]="#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif\n";THREE.ShaderChunk["map_pars_fragment"]="#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n";THREE.ShaderChunk["map_particle_fragment"]="#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n";THREE.ShaderChunk["map_particle_pars_fragment"]="#ifdef USE_MAP\n	uniform vec4 offsetRepeat;\n	uniform sampler2D map;\n#endif\n";THREE.ShaderChunk["metalnessmap_fragment"]="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.r;\n#endif\n";THREE.ShaderChunk["metalnessmap_pars_fragment"]="#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif";THREE.ShaderChunk["morphnormal_vertex"]="#ifdef USE_MORPHNORMALS\n	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n";THREE.ShaderChunk["morphtarget_pars_vertex"]="#ifdef USE_MORPHTARGETS\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif";THREE.ShaderChunk["morphtarget_vertex"]="#ifdef USE_MORPHTARGETS\n	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n	#endif\n#endif\n";THREE.ShaderChunk["normal_fragment"]="#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n	#endif\n#endif\n#ifdef USE_NORMALMAP\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n";THREE.ShaderChunk["normalmap_pars_fragment"]="#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n	}\n#endif\n";
THREE.ShaderChunk["packing"]="vec3 packNormalToRGB( const in vec3 normal ) {\n  return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n  return 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nfloat viewZToOrthoDepth( const in float viewZ, const in float near, const in float far ) {\n  return ( viewZ + near ) / ( near - far );\n}\nfloat OrthoDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n  return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n";THREE.ShaderChunk["premultiplied_alpha_fragment"]="#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n";THREE.ShaderChunk["project_vertex"]="#ifdef USE_SKINNING\n	vec4 mvPosition = modelViewMatrix * skinned;\n#else\n	vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n";THREE.ShaderChunk["roughnessmap_fragment"]="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.r;\n#endif\n";THREE.ShaderChunk["roughnessmap_pars_fragment"]="#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif";THREE.ShaderChunk["shadowmap_pars_fragment"]="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n		const vec2 offset = vec2( 0.0, 1.0 );\n		vec2 texelSize = vec2( 1.0 ) / size;\n		vec2 centroidUV = floor( uv * size + 0.5 ) / size;\n		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n		vec2 f = fract( uv * size + 0.5 );\n		float a = mix( lb, lt, f.y );\n		float b = mix( rb, rt, f.y );\n		float c = mix( a, b, f.x );\n		return c;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			return (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			return (\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return 1.0;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		vec3 bd3D = normalize( lightToPosition );\n		float dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif\n";THREE.ShaderChunk["shadowmap_pars_vertex"]="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n#endif\n";THREE.ShaderChunk["shadowmap_vertex"]="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n#endif\n";THREE.ShaderChunk["shadowmask_pars_fragment"]="float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#endif\n	return shadow;\n}\n";THREE.ShaderChunk["skinbase_vertex"]="#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";THREE.ShaderChunk["skinning_pars_vertex"]="#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif\n";THREE.ShaderChunk["skinning_vertex"]="#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n#endif\n";THREE.ShaderChunk["skinnormal_vertex"]="#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n";THREE.ShaderChunk["specularmap_fragment"]="float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif";THREE.ShaderChunk["specularmap_pars_fragment"]="#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif";THREE.ShaderChunk["tonemapping_fragment"]="#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n";THREE.ShaderChunk["tonemapping_pars_fragment"]="#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n";THREE.ShaderChunk["uv2_pars_fragment"]="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif";THREE.ShaderChunk["uv2_pars_vertex"]="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n#endif";THREE.ShaderChunk["uv2_vertex"]="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = uv2;\n#endif";THREE.ShaderChunk["uv_pars_fragment"]="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n#endif";THREE.ShaderChunk["uv_pars_vertex"]="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n#endif\n";THREE.ShaderChunk["uv_vertex"]="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif";THREE.ShaderChunk["worldpos_vertex"]="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n	#ifdef USE_SKINNING\n		vec4 worldPosition = modelMatrix * skinned;\n	#else\n		vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n	#endif\n#endif\n";THREE.UniformsUtils={merge:function(e){var t={};for(var r=0;r<e.length;r++){var n=this.clone(e[r]);for(var i in n){t[i]=n[i]}}return t},clone:function(e){var t={};for(var r in e){t[r]={};for(var n in e[r]){var i=e[r][n];if(i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix3||i instanceof THREE.Matrix4||i instanceof THREE.Texture){t[r][n]=i.clone()}else if(Array.isArray(i)){t[r][n]=i.slice()}else{t[r][n]=i}}}return t}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"1f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"1f",value:-1},reflectivity:{type:"1f",value:1},refractionRatio:{type:"1f",value:.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"1f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"1f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"1f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"1f",value:1},displacementBias:{type:"1f",value:0}},roughnessmap:{roughnessMap:{type:"t",value:null}},metalnessmap:{metalnessMap:{type:"t",value:null}},fog:{fogDensity:{type:"1f",value:25e-5},fogNear:{type:"1f",value:1},fogFar:{type:"1f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"3fv",value:[]},directionalLights:{type:"sa",value:[],properties:{direction:{type:"v3"},color:{type:"c"},shadow:{type:"1i"},shadowBias:{type:"1f"},shadowRadius:{type:"1f"},shadowMapSize:{type:"v2"}}},directionalShadowMap:{type:"tv",value:[]},directionalShadowMatrix:{type:"m4v",value:[]},spotLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},direction:{type:"v3"},distance:{type:"1f"},coneCos:{type:"1f"},penumbraCos:{type:"1f"},decay:{type:"1f"},shadow:{type:"1i"},shadowBias:{type:"1f"},shadowRadius:{type:"1f"},shadowMapSize:{type:"v2"}}},spotShadowMap:{type:"tv",value:[]},spotShadowMatrix:{type:"m4v",value:[]},pointLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},decay:{type:"1f"},distance:{type:"1f"},shadow:{type:"1i"},shadowBias:{type:"1f"},shadowRadius:{type:"1f"},shadowMapSize:{type:"v2"}}},pointShadowMap:{type:"tv",value:[]},pointShadowMatrix:{type:"m4v",value:[]},hemisphereLights:{type:"sa",value:[],properties:{direction:{type:"v3"},skyColor:{type:"c"},groundColor:{type:"c"}}}},points:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"1f",value:1},size:{type:"1f",value:1},scale:{type:"1f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)}}};THREE.ShaderChunk["cube_frag"]="uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n	#include <logdepthbuf_fragment>\n}\n";THREE.ShaderChunk["cube_vert"]="varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n";THREE.ShaderChunk["depth_frag"]="#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n	#endif\n}\n";THREE.ShaderChunk["depth_vert"]="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n";THREE.ShaderChunk["distanceRGBA_frag"]="uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	gl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n";THREE.ShaderChunk["distanceRGBA_vert"]="varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <skinbase_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition;\n}\n";THREE.ShaderChunk["equirect_frag"]="uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 direction = normalize( vWorldPosition );\n	vec2 sampleUV;\n	sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <logdepthbuf_fragment>\n}\n";THREE.ShaderChunk["equirect_vert"]="varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n";THREE.ShaderChunk["linedashed_frag"]="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n";THREE.ShaderChunk["linedashed_vert"]="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n";THREE.ShaderChunk["meshbasic_frag"]="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight;\n	reflectedLight.directDiffuse = vec3( 0.0 );\n	reflectedLight.directSpecular = vec3( 0.0 );\n	reflectedLight.indirectDiffuse = diffuseColor.rgb;\n	reflectedLight.indirectSpecular = vec3( 0.0 );\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n";THREE.ShaderChunk["meshbasic_vert"]="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n}\n";THREE.ShaderChunk["meshlambert_frag"]="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n";THREE.ShaderChunk["meshlambert_vert"]="#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n}\n";THREE.ShaderChunk["meshphong_frag"]="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n";THREE.ShaderChunk["meshphong_vert"]="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n}\n";
THREE.ShaderChunk["meshphysical_frag"]="#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n";THREE.ShaderChunk["meshphysical_vert"]="#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n";THREE.ShaderChunk["normal_frag"]="uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	gl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n	#include <logdepthbuf_fragment>\n}\n";THREE.ShaderChunk["normal_vert"]="varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vNormal = normalize( normalMatrix * normal );\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n";THREE.ShaderChunk["points_frag"]="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n";THREE.ShaderChunk["points_vert"]="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <project_vertex>\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / - mvPosition.z );\n	#else\n		gl_PointSize = size;\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n";THREE.ShaderChunk["shadow_frag"]="uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\n}\n";THREE.ShaderChunk["shadow_vert"]="#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n";THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["aomap"],THREE.UniformsLib["fog"]]),vertexShader:THREE.ShaderChunk["meshbasic_vert"],fragmentShader:THREE.ShaderChunk["meshbasic_frag"]},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["aomap"],THREE.UniformsLib["lightmap"],THREE.UniformsLib["emissivemap"],THREE.UniformsLib["fog"],THREE.UniformsLib["lights"],{emissive:{type:"c",value:new THREE.Color(0)}}]),vertexShader:THREE.ShaderChunk["meshlambert_vert"],fragmentShader:THREE.ShaderChunk["meshlambert_frag"]},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["aomap"],THREE.UniformsLib["lightmap"],THREE.UniformsLib["emissivemap"],THREE.UniformsLib["bumpmap"],THREE.UniformsLib["normalmap"],THREE.UniformsLib["displacementmap"],THREE.UniformsLib["fog"],THREE.UniformsLib["lights"],{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"1f",value:30}}]),vertexShader:THREE.ShaderChunk["meshphong_vert"],fragmentShader:THREE.ShaderChunk["meshphong_frag"]},standard:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["aomap"],THREE.UniformsLib["lightmap"],THREE.UniformsLib["emissivemap"],THREE.UniformsLib["bumpmap"],THREE.UniformsLib["normalmap"],THREE.UniformsLib["displacementmap"],THREE.UniformsLib["roughnessmap"],THREE.UniformsLib["metalnessmap"],THREE.UniformsLib["fog"],THREE.UniformsLib["lights"],{emissive:{type:"c",value:new THREE.Color(0)},roughness:{type:"1f",value:.5},metalness:{type:"1f",value:0},envMapIntensity:{type:"1f",value:1}}]),vertexShader:THREE.ShaderChunk["meshphysical_vert"],fragmentShader:THREE.ShaderChunk["meshphysical_frag"]},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["points"],THREE.UniformsLib["fog"]]),vertexShader:THREE.ShaderChunk["points_vert"],fragmentShader:THREE.ShaderChunk["points_frag"]},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["fog"],{scale:{type:"1f",value:1},dashSize:{type:"1f",value:1},totalSize:{type:"1f",value:2}}]),vertexShader:THREE.ShaderChunk["linedashed_vert"],fragmentShader:THREE.ShaderChunk["linedashed_frag"]},depth:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["displacementmap"]]),vertexShader:THREE.ShaderChunk["depth_vert"],fragmentShader:THREE.ShaderChunk["depth_frag"]},normal:{uniforms:{opacity:{type:"1f",value:1}},vertexShader:THREE.ShaderChunk["normal_vert"],fragmentShader:THREE.ShaderChunk["normal_frag"]},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"1f",value:-1}},vertexShader:THREE.ShaderChunk["cube_vert"],fragmentShader:THREE.ShaderChunk["cube_frag"]},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"1f",value:-1}},vertexShader:THREE.ShaderChunk["equirect_vert"],fragmentShader:THREE.ShaderChunk["equirect_frag"]},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new THREE.Vector3}},vertexShader:THREE.ShaderChunk["distanceRGBA_vert"],fragmentShader:THREE.ShaderChunk["distanceRGBA_frag"]}};THREE.ShaderLib["physical"]={uniforms:THREE.UniformsUtils.merge([THREE.ShaderLib["standard"].uniforms,{}]),vertexShader:THREE.ShaderChunk["meshphysical_vert"],fragmentShader:THREE.ShaderChunk["meshphysical_frag"]};THREE.WebGLRenderer=function(e){console.log("THREE.WebGLRenderer",THREE.REVISION);e=e||{};var t=e.canvas!==undefined?e.canvas:document.createElement("canvas"),r=e.context!==undefined?e.context:null,n=e.alpha!==undefined?e.alpha:false,i=e.depth!==undefined?e.depth:true,a=e.stencil!==undefined?e.stencil:true,o=e.antialias!==undefined?e.antialias:false,s=e.premultipliedAlpha!==undefined?e.premultipliedAlpha:true,c=e.preserveDrawingBuffer!==undefined?e.preserveDrawingBuffer:false;t.style.position="absolute";t.style.top=0;var u=[];var l=[];var h=-1;var f=[];var d=-1;var p=new Float32Array(8);var E=[];var m=[];this.domElement=t;this.context=null;this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.clippingPlanes=[];this.localClippingEnabled=false;this.gammaFactor=2;this.gammaInput=false;this.gammaOutput=false;this.physicallyCorrectLights=false;this.toneMapping=THREE.LinearToneMapping;this.toneMappingExposure=1;this.toneMappingWhitePoint=1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=true;var v=this,g=null,T=null,y=null,R=-1,x="",H=null,b=new THREE.Vector4,_=null,M=new THREE.Vector4,w=0,S=new THREE.Color(0),L=0,A=t.width,C=t.height,P=1,I=new THREE.Vector4(0,0,A,C),B=false,D=new THREE.Vector4(0,0,A,C),U=new THREE.Frustum,O=new THREE.WebGLClipping,F=false,N=false,V=new THREE.Sphere,G=new THREE.Matrix4,z=new THREE.Vector3,k={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},j={geometries:0,textures:0},W={calls:0,vertices:0,faces:0,points:0};this.info={render:W,memory:j,programs:null};var X;try{var Y={alpha:n,depth:i,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:c};X=r||t.getContext("webgl",Y)||t.getContext("experimental-webgl",Y);if(X===null){if(t.getContext("webgl")!==null){throw"Error creating WebGL context with your selected attributes."}else{throw"Error creating WebGL context."}}if(X.getShaderPrecisionFormat===undefined){X.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}}t.addEventListener("webglcontextlost",fe,false)}catch(q){console.error("THREE.WebGLRenderer: "+q)}var Z=typeof WebGL2RenderingContext!=="undefined"&&X instanceof WebGL2RenderingContext;var K=new THREE.WebGLExtensions(X);K.get("WEBGL_depth_texture");K.get("OES_texture_float");K.get("OES_texture_float_linear");K.get("OES_texture_half_float");K.get("OES_texture_half_float_linear");K.get("OES_standard_derivatives");K.get("ANGLE_instanced_arrays");if(K.get("OES_element_index_uint")){THREE.BufferGeometry.MaxIndex=4294967296}var Q=new THREE.WebGLCapabilities(X,K,e);var J=new THREE.WebGLState(X,K,ct);var $=new THREE.WebGLProperties;var ee=new THREE.WebGLObjects(X,$,this.info);var te=new THREE.WebGLPrograms(this,Q);var re=new THREE.WebGLLights;this.info.programs=te.programs;var ne=new THREE.WebGLBufferRenderer(X,K,W);var ie=new THREE.WebGLIndexedBufferRenderer(X,K,W);function ae(){return T===null?P:1}function oe(e,t,r,n){if(s===true){e*=n;t*=n;r*=n}J.clearColor(e,t,r,n)}function se(){J.init();J.scissor(b.copy(I).multiplyScalar(P));J.viewport(M.copy(D).multiplyScalar(P));oe(S.r,S.g,S.b,L)}function ce(){g=null;H=null;x="";R=-1;J.reset()}se();this.context=X;this.capabilities=Q;this.extensions=K;this.properties=$;this.state=J;var ue=new THREE.WebGLShadowMap(this,k,ee);this.shadowMap=ue;var le=new THREE.SpritePlugin(this,E);var he=new THREE.LensFlarePlugin(this,m);this.getContext=function(){return X};this.getContextAttributes=function(){return X.getContextAttributes()};this.forceContextLoss=function(){K.get("WEBGL_lose_context").loseContext()};this.getMaxAnisotropy=function(){var e;return function t(){if(e!==undefined)return e;var t=K.get("EXT_texture_filter_anisotropic");if(t!==null){e=X.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else{e=0}return e}}();this.getPrecision=function(){return Q.precision};this.getPixelRatio=function(){return P};this.setPixelRatio=function(e){if(e===undefined)return;P=e;this.setSize(D.z,D.w,false)};this.getSize=function(){return{width:A,height:C}};this.setSize=function(e,r,n){A=e;C=r;t.width=e*P;t.height=r*P;if(n!==false){t.style.width=e+"px";t.style.height=r+"px"}this.setViewport(0,0,e,r)};this.setViewport=function(e,t,r,n){J.viewport(D.set(e,t,r,n))};this.setScissor=function(e,t,r,n){J.scissor(I.set(e,t,r,n))};this.setScissorTest=function(e){J.setScissorTest(B=e)};this.getClearColor=function(){return S};this.setClearColor=function(e,t){S.set(e);L=t!==undefined?t:1;oe(S.r,S.g,S.b,L)};this.getClearAlpha=function(){return L};this.setClearAlpha=function(e){L=e;oe(S.r,S.g,S.b,L)};this.clear=function(e,t,r){var n=0;if(e===undefined||e)n|=X.COLOR_BUFFER_BIT;if(t===undefined||t)n|=X.DEPTH_BUFFER_BIT;if(r===undefined||r)n|=X.STENCIL_BUFFER_BIT;X.clear(n)};this.clearColor=function(){this.clear(true,false,false)};this.clearDepth=function(){this.clear(false,true,false)};this.clearStencil=function(){this.clear(false,false,true)};this.clearTarget=function(e,t,r,n){this.setRenderTarget(e);this.clear(t,r,n)};this.resetGLState=ce;this.dispose=function(){t.removeEventListener("webglcontextlost",fe,false)};function fe(e){e.preventDefault();ce();se();$.clear()}function de(e){var t=e.target;t.removeEventListener("dispose",de);me(t);j.textures--}function pe(e){var t=e.target;t.removeEventListener("dispose",pe);ve(t);j.textures--}function Ee(e){var t=e.target;t.removeEventListener("dispose",Ee);ge(t)}function me(e){var t=$.get(e);if(e.image&&t.__image__webglTextureCube){X.deleteTexture(t.__image__webglTextureCube)}else{if(t.__webglInit===undefined)return;X.deleteTexture(t.__webglTexture)}$.delete(e)}function ve(e){var t=$.get(e);var r=$.get(e.texture);if(!e)return;if(r.__webglTexture!==undefined){X.deleteTexture(r.__webglTexture)}if(e.depthTexture){e.depthTexture.dispose()}if(e instanceof THREE.WebGLRenderTargetCube){for(var n=0;n<6;n++){X.deleteFramebuffer(t.__webglFramebuffer[n]);if(t.__webglDepthbuffer)X.deleteRenderbuffer(t.__webglDepthbuffer[n])}}else{X.deleteFramebuffer(t.__webglFramebuffer);if(t.__webglDepthbuffer)X.deleteRenderbuffer(t.__webglDepthbuffer)}$.delete(e.texture);$.delete(e)}function ge(e){Te(e);$.delete(e)}function Te(e){var t=$.get(e).program;e.program=undefined;if(t!==undefined){te.releaseProgram(t)}}this.renderBufferImmediate=function(e,t,r){J.initAttributes();var n=$.get(e);if(e.hasPositions&&!n.position)n.position=X.createBuffer();if(e.hasNormals&&!n.normal)n.normal=X.createBuffer();if(e.hasUvs&&!n.uv)n.uv=X.createBuffer();if(e.hasColors&&!n.color)n.color=X.createBuffer();var i=t.getAttributes();if(e.hasPositions){X.bindBuffer(X.ARRAY_BUFFER,n.position);X.bufferData(X.ARRAY_BUFFER,e.positionArray,X.DYNAMIC_DRAW);J.enableAttribute(i.position);X.vertexAttribPointer(i.position,3,X.FLOAT,false,0,0)}if(e.hasNormals){X.bindBuffer(X.ARRAY_BUFFER,n.normal);if(r.type!=="MeshPhongMaterial"&&r.type!=="MeshStandardMaterial"&&r.type!=="MeshPhysicalMaterial"&&r.shading===THREE.FlatShading){for(var a=0,o=e.count*3;a<o;a+=9){var s=e.normalArray;var c=(s[a+0]+s[a+3]+s[a+6])/3;var u=(s[a+1]+s[a+4]+s[a+7])/3;var l=(s[a+2]+s[a+5]+s[a+8])/3;s[a+0]=c;s[a+1]=u;s[a+2]=l;s[a+3]=c;s[a+4]=u;s[a+5]=l;s[a+6]=c;s[a+7]=u;s[a+8]=l}}X.bufferData(X.ARRAY_BUFFER,e.normalArray,X.DYNAMIC_DRAW);J.enableAttribute(i.normal);X.vertexAttribPointer(i.normal,3,X.FLOAT,false,0,0)}if(e.hasUvs&&r.map){X.bindBuffer(X.ARRAY_BUFFER,n.uv);X.bufferData(X.ARRAY_BUFFER,e.uvArray,X.DYNAMIC_DRAW);J.enableAttribute(i.uv);X.vertexAttribPointer(i.uv,2,X.FLOAT,false,0,0)}if(e.hasColors&&r.vertexColors!==THREE.NoColors){X.bindBuffer(X.ARRAY_BUFFER,n.color);X.bufferData(X.ARRAY_BUFFER,e.colorArray,X.DYNAMIC_DRAW);J.enableAttribute(i.color);X.vertexAttribPointer(i.color,3,X.FLOAT,false,0,0)}J.disableUnusedAttributes();X.drawArrays(X.TRIANGLES,0,e.count);e.count=0};this.renderBufferDirect=function(e,t,r,n,i,a){Ce(n);var o=Pe(e,t,n,i);var s=false;var c=r.id+"_"+o.id+"_"+n.wireframe;if(c!==x){x=c;s=true}var u=i.morphTargetInfluences;if(u!==undefined){var l=[];for(var h=0,f=u.length;h<f;h++){var d=u[h];l.push([d,h])}l.sort(Re);if(l.length>8){l.length=8}var E=r.morphAttributes;for(var h=0,f=l.length;h<f;h++){var d=l[h];p[h]=d[0];if(d[0]!==0){var m=d[1];if(n.morphTargets===true&&E.position)r.addAttribute("morphTarget"+h,E.position[m]);if(n.morphNormals===true&&E.normal)r.addAttribute("morphNormal"+h,E.normal[m])}else{if(n.morphTargets===true)r.removeAttribute("morphTarget"+h);if(n.morphNormals===true)r.removeAttribute("morphNormal"+h)}}o.getUniforms().setValue(X,"morphTargetInfluences",p);s=true}var m=r.index;var v=r.attributes.position;if(n.wireframe===true){m=ee.getWireframeAttribute(r)}var g;if(m!==null){g=ie;g.setIndex(m)}else{g=ne}if(s){ye(n,o,r);if(m!==null){X.bindBuffer(X.ELEMENT_ARRAY_BUFFER,ee.getAttributeBuffer(m))}}var T=0;var y=Infinity;if(m!==null){y=m.count}else if(v!==undefined){y=v.count}var R=r.drawRange.start;var H=r.drawRange.count;var b=a!==null?a.start:0;var _=a!==null?a.count:Infinity;var M=Math.max(T,R,b);var w=Math.min(T+y,R+H,b+_)-1;var S=Math.max(0,w-M+1);if(i instanceof THREE.Mesh){if(n.wireframe===true){J.setLineWidth(n.wireframeLinewidth*ae());g.setMode(X.LINES)}else{switch(i.drawMode){case THREE.TrianglesDrawMode:g.setMode(X.TRIANGLES);break;case THREE.TriangleStripDrawMode:g.setMode(X.TRIANGLE_STRIP);break;case THREE.TriangleFanDrawMode:g.setMode(X.TRIANGLE_FAN);break}}}else if(i instanceof THREE.Line){var L=n.linewidth;if(L===undefined)L=1;J.setLineWidth(L*ae());if(i instanceof THREE.LineSegments){g.setMode(X.LINES)}else{g.setMode(X.LINE_STRIP)}}else if(i instanceof THREE.Points){g.setMode(X.POINTS)}if(r instanceof THREE.InstancedBufferGeometry){if(r.maxInstancedCount>0){g.renderInstances(r,M,S)}}else{g.render(M,S)}};function ye(e,t,r,n){var i;if(r instanceof THREE.InstancedBufferGeometry){i=K.get("ANGLE_instanced_arrays");if(i===null){console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}if(n===undefined)n=0;J.initAttributes();var a=r.attributes;var o=t.getAttributes();var s=e.defaultAttributeValues;for(var c in o){var u=o[c];if(u>=0){var l=a[c];if(l!==undefined){var h=X.FLOAT;var f=l.array;var d=l.normalized;if(f instanceof Float32Array){h=X.FLOAT}else if(f instanceof Float64Array){console.warn("Unsupported data buffer format: Float64Array")}else if(f instanceof Uint16Array){h=X.UNSIGNED_SHORT}else if(f instanceof Int16Array){h=X.SHORT}else if(f instanceof Uint32Array){h=X.UNSIGNED_INT}else if(f instanceof Int32Array){h=X.INT}else if(f instanceof Int8Array){h=X.BYTE}else if(f instanceof Uint8Array){h=X.UNSIGNED_BYTE}var p=l.itemSize;var E=ee.getAttributeBuffer(l);if(l instanceof THREE.InterleavedBufferAttribute){var m=l.data;var v=m.stride;var g=l.offset;if(m instanceof THREE.InstancedInterleavedBuffer){J.enableAttributeAndDivisor(u,m.meshPerAttribute,i);if(r.maxInstancedCount===undefined){r.maxInstancedCount=m.meshPerAttribute*m.count}}else{J.enableAttribute(u)}X.bindBuffer(X.ARRAY_BUFFER,E);X.vertexAttribPointer(u,p,h,d,v*m.array.BYTES_PER_ELEMENT,(n*v+g)*m.array.BYTES_PER_ELEMENT)}else{if(l instanceof THREE.InstancedBufferAttribute){J.enableAttributeAndDivisor(u,l.meshPerAttribute,i);if(r.maxInstancedCount===undefined){r.maxInstancedCount=l.meshPerAttribute*l.count}}else{J.enableAttribute(u)}X.bindBuffer(X.ARRAY_BUFFER,E);X.vertexAttribPointer(u,p,h,d,0,n*p*l.array.BYTES_PER_ELEMENT)}}else if(s!==undefined){var T=s[c];if(T!==undefined){switch(T.length){case 2:X.vertexAttrib2fv(u,T);break;case 3:X.vertexAttrib3fv(u,T);break;case 4:X.vertexAttrib4fv(u,T);break;default:X.vertexAttrib1fv(u,T)}}}}}J.disableUnusedAttributes()}function Re(e,t){return Math.abs(t[0])-Math.abs(e[0])}function xe(e,t){if(e.object.renderOrder!==t.object.renderOrder){return e.object.renderOrder-t.object.renderOrder}else if(e.material.id!==t.material.id){return e.material.id-t.material.id}else if(e.z!==t.z){return e.z-t.z}else{return e.id-t.id}}function He(e,t){if(e.object.renderOrder!==t.object.renderOrder){return e.object.renderOrder-t.object.renderOrder}if(e.z!==t.z){return t.z-e.z}else{return e.id-t.id}}this.render=function(e,t,r,n){if(t instanceof THREE.Camera===false){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}var i=e.fog;x="";R=-1;H=null;if(e.autoUpdate===true)e.updateMatrixWorld();if(t.parent===null)t.updateMatrixWorld();t.matrixWorldInverse.getInverse(t.matrixWorld);G.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);U.setFromMatrix(G);u.length=0;h=-1;d=-1;E.length=0;m.length=0;N=this.localClippingEnabled;F=O.init(this.clippingPlanes,N,t);Se(e,t);l.length=h+1;f.length=d+1;if(v.sortObjects===true){l.sort(xe);f.sort(He)}if(F)O.beginShadows();ke(u);ue.render(e,t);je(u,t);if(F)O.endShadows();W.calls=0;W.vertices=0;W.faces=0;W.points=0;if(r===undefined){r=null}this.setRenderTarget(r);if(this.autoClear||n){this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil)}if(e.overrideMaterial){var a=e.overrideMaterial;Le(l,t,i,a);Le(f,t,i,a)}else{J.setBlending(THREE.NoBlending);Le(l,t,i);Le(f,t,i)}le.render(e,t);he.render(e,t,M);if(r){var o=r.texture;if(o.generateMipmaps&&Ke(r)&&o.minFilter!==THREE.NearestFilter&&o.minFilter!==THREE.LinearFilter){ot(r)}}J.setDepthTest(true);J.setDepthWrite(true);J.setColorWrite(true)};function be(e,t,r,n,i){var a,o;if(r.transparent){a=f;o=++d}else{a=l;o=++h}var s=a[o];if(s!==undefined){s.id=e.id;s.object=e;s.geometry=t;s.material=r;s.z=z.z;s.group=i}else{s={id:e.id,object:e,geometry:t,material:r,z:z.z,group:i};a.push(s)}}function _e(e){var t=e.geometry;if(t.boundingSphere===null)t.computeBoundingSphere();V.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);return we(V)}function Me(e){V.center.set(0,0,0);V.radius=.7071067811865476;V.applyMatrix4(e.matrixWorld);return we(V)}function we(e){if(!U.intersectsSphere(e))return false;var t=O.numPlanes;if(t===0)return true;var r=v.clippingPlanes,n=e.center,i=-e.radius,a=0;do{if(r[a].distanceToPoint(n)<i)return false}while(++a!==t);return true}function Se(e,t){if(e.visible===false)return;if(e.layers.test(t.layers)){if(e instanceof THREE.Light){u.push(e)}else if(e instanceof THREE.Sprite){if(e.frustumCulled===false||Me(e)===true){E.push(e)}}else if(e instanceof THREE.LensFlare){m.push(e)}else if(e instanceof THREE.ImmediateRenderObject){if(v.sortObjects===true){z.setFromMatrixPosition(e.matrixWorld);z.applyProjection(G)}be(e,null,e.material,z.z,null)}else if(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Points){if(e instanceof THREE.SkinnedMesh){e.skeleton.update()}if(e.frustumCulled===false||_e(e)===true){var r=e.material;if(r.visible===true){if(v.sortObjects===true){z.setFromMatrixPosition(e.matrixWorld);z.applyProjection(G)}var n=ee.update(e);if(r instanceof THREE.MultiMaterial){var i=n.groups;var a=r.materials;for(var o=0,s=i.length;o<s;o++){var c=i[o];var l=a[c.materialIndex];if(l.visible===true){be(e,n,l,z.z,c)}}}else{be(e,n,r,z.z,null)}}}}}var h=e.children;for(var o=0,s=h.length;o<s;o++){Se(h[o],t)}}function Le(e,t,r,n){for(var i=0,a=e.length;i<a;i++){var o=e[i];var s=o.object;var c=o.geometry;var u=n===undefined?o.material:n;var l=o.group;s.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,s.matrixWorld);s.normalMatrix.getNormalMatrix(s.modelViewMatrix);if(s instanceof THREE.ImmediateRenderObject){Ce(u);var h=Pe(t,r,u,s);x="";s.render(function(e){v.renderBufferImmediate(e,h,u)})}else{v.renderBufferDirect(t,r,c,u,s,l)}}}function Ae(e,t,r){var n=$.get(e);var i=te.getParameters(e,k,t,O.numPlanes,r);var a=te.getProgramCode(e,i);var o=n.program;var s=true;if(o===undefined){e.addEventListener("dispose",Ee)}else if(o.code!==a){Te(e)}else if(i.shaderID!==undefined){return}else{s=false}if(s){if(i.shaderID){var c=THREE.ShaderLib[i.shaderID];n.__webglShader={name:e.type,uniforms:THREE.UniformsUtils.clone(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader}}else{n.__webglShader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}}e.__webglShader=n.__webglShader;o=te.acquireProgram(e,i,a);n.program=o;e.program=o}var u=o.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var l=0;l<v.maxMorphTargets;l++){if(u["morphTarget"+l]>=0){e.numSupportedMorphTargets++}}}if(e.morphNormals){e.numSupportedMorphNormals=0;for(var l=0;l<v.maxMorphNormals;l++){if(u["morphNormal"+l]>=0){e.numSupportedMorphNormals++}}}var h=n.__webglShader.uniforms;if(!(e instanceof THREE.ShaderMaterial)&&!(e instanceof THREE.RawShaderMaterial)||e.clipping===true){n.numClippingPlanes=O.numPlanes;h.clippingPlanes=O.uniform}if(e.lights){n.lightsHash=k.hash;h.ambientLightColor.value=k.ambient;h.directionalLights.value=k.directional;h.spotLights.value=k.spot;h.pointLights.value=k.point;h.hemisphereLights.value=k.hemi;h.directionalShadowMap.value=k.directionalShadowMap;h.directionalShadowMatrix.value=k.directionalShadowMatrix;h.spotShadowMap.value=k.spotShadowMap;h.spotShadowMatrix.value=k.spotShadowMatrix;h.pointShadowMap.value=k.pointShadowMap;h.pointShadowMatrix.value=k.pointShadowMatrix}var f=n.program.getUniforms(),d=THREE.WebGLUniforms.seqWithValue(f.seq,h);n.uniformsList=d;n.dynamicUniforms=THREE.WebGLUniforms.splitDynamic(d,h)}function Ce(e){if(e.side!==THREE.DoubleSide)J.enable(X.CULL_FACE);else J.disable(X.CULL_FACE);J.setFlipSided(e.side===THREE.BackSide);if(e.transparent===true){J.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha)}else{J.setBlending(THREE.NoBlending)}J.setDepthFunc(e.depthFunc);J.setDepthTest(e.depthTest);J.setDepthWrite(e.depthWrite);J.setColorWrite(e.colorWrite);J.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function Pe(e,t,r,n){w=0;var i=$.get(r);if(F){if(N||e!==H){var a=e===H&&r.id===R;O.setState(r.clippingPlanes,r.clipShadows,e,i,a)}if(i.numClippingPlanes!==undefined&&i.numClippingPlanes!==O.numPlanes){r.needsUpdate=true}}if(i.program===undefined){r.needsUpdate=true}if(i.lightsHash!==undefined&&i.lightsHash!==k.hash){r.needsUpdate=true}if(r.needsUpdate){Ae(r,t,n);r.needsUpdate=false}var o=false;var s=false;var c=false;var u=i.program,l=u.getUniforms(),h=i.__webglShader.uniforms;if(u.id!==g){X.useProgram(u.program);g=u.id;o=true;s=true;c=true}if(r.id!==R){R=r.id;s=true}if(o||e!==H){l.set(X,e,"projectionMatrix");if(Q.logarithmicDepthBuffer){l.setValue(X,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2))}if(e!==H){H=e;s=true;c=true}if(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshStandardMaterial||r.envMap){var f=l.map.cameraPosition;if(f!==undefined){f.setValue(X,z.setFromMatrixPosition(e.matrixWorld))}}if(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshStandardMaterial||r instanceof THREE.ShaderMaterial||r.skinning){l.setValue(X,"viewMatrix",e.matrixWorldInverse)}l.set(X,v,"toneMappingExposure");l.set(X,v,"toneMappingWhitePoint")}if(r.skinning){l.setOptional(X,n,"bindMatrix");l.setOptional(X,n,"bindMatrixInverse");var d=n.skeleton;if(d){if(Q.floatVertexTextures&&d.useVertexTexture){l.set(X,d,"boneTexture");l.set(X,d,"boneTextureWidth");l.set(X,d,"boneTextureHeight")}else{l.setOptional(X,d,"boneMatrices")}}}if(s){if(r.lights){ze(h,c)}if(t&&r.fog){Oe(h,t)}if(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshStandardMaterial||r instanceof THREE.MeshDepthMaterial){Ie(h,r)}if(r instanceof THREE.LineBasicMaterial){Be(h,r)}else if(r instanceof THREE.LineDashedMaterial){Be(h,r);De(h,r)}else if(r instanceof THREE.PointsMaterial){Ue(h,r)}else if(r instanceof THREE.MeshLambertMaterial){Fe(h,r)}else if(r instanceof THREE.MeshPhongMaterial){Ne(h,r)}else if(r instanceof THREE.MeshPhysicalMaterial){Ge(h,r)}else if(r instanceof THREE.MeshStandardMaterial){Ve(h,r)}else if(r instanceof THREE.MeshDepthMaterial){if(r.displacementMap){h.displacementMap.value=r.displacementMap;h.displacementScale.value=r.displacementScale;h.displacementBias.value=r.displacementBias}}else if(r instanceof THREE.MeshNormalMaterial){h.opacity.value=r.opacity}THREE.WebGLUniforms.upload(X,i.uniformsList,h,v)}l.set(X,n,"modelViewMatrix");l.set(X,n,"normalMatrix");l.setValue(X,"modelMatrix",n.matrixWorld);var p=i.dynamicUniforms;if(p!==null){THREE.WebGLUniforms.evalDynamic(p,h,n,e);THREE.WebGLUniforms.upload(X,p,h,v)}return u}function Ie(e,t){e.opacity.value=t.opacity;e.diffuse.value=t.color;if(t.emissive){e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity)}e.map.value=t.map;e.specularMap.value=t.specularMap;e.alphaMap.value=t.alphaMap;if(t.aoMap){e.aoMap.value=t.aoMap;e.aoMapIntensity.value=t.aoMapIntensity}var r;if(t.map){r=t.map}else if(t.specularMap){r=t.specularMap}else if(t.displacementMap){r=t.displacementMap}else if(t.normalMap){r=t.normalMap}else if(t.bumpMap){r=t.bumpMap}else if(t.roughnessMap){r=t.roughnessMap}else if(t.metalnessMap){r=t.metalnessMap}else if(t.alphaMap){r=t.alphaMap}else if(t.emissiveMap){r=t.emissiveMap}if(r!==undefined){if(r instanceof THREE.WebGLRenderTarget){r=r.texture}var n=r.offset;var i=r.repeat;e.offsetRepeat.value.set(n.x,n.y,i.x,i.y)}e.envMap.value=t.envMap;e.flipEnvMap.value=!(t.envMap instanceof THREE.CubeTexture)?1:-1;e.reflectivity.value=t.reflectivity;e.refractionRatio.value=t.refractionRatio}function Be(e,t){e.diffuse.value=t.color;e.opacity.value=t.opacity}function De(e,t){e.dashSize.value=t.dashSize;e.totalSize.value=t.dashSize+t.gapSize;e.scale.value=t.scale}function Ue(e,r){e.diffuse.value=r.color;e.opacity.value=r.opacity;e.size.value=r.size*P;e.scale.value=t.clientHeight*.5;e.map.value=r.map;if(r.map!==null){var n=r.map.offset;var i=r.map.repeat;e.offsetRepeat.value.set(n.x,n.y,i.x,i.y)}}function Oe(e,t){e.fogColor.value=t.color;if(t instanceof THREE.Fog){e.fogNear.value=t.near;e.fogFar.value=t.far}else if(t instanceof THREE.FogExp2){e.fogDensity.value=t.density}}function Fe(e,t){if(t.lightMap){e.lightMap.value=t.lightMap;e.lightMapIntensity.value=t.lightMapIntensity}if(t.emissiveMap){e.emissiveMap.value=t.emissiveMap}}function Ne(e,t){e.specular.value=t.specular;e.shininess.value=Math.max(t.shininess,1e-4);if(t.lightMap){e.lightMap.value=t.lightMap;e.lightMapIntensity.value=t.lightMapIntensity}if(t.emissiveMap){e.emissiveMap.value=t.emissiveMap}if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale)}if(t.displacementMap){
e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}function Ve(e,t){e.roughness.value=t.roughness;e.metalness.value=t.metalness;if(t.roughnessMap){e.roughnessMap.value=t.roughnessMap}if(t.metalnessMap){e.metalnessMap.value=t.metalnessMap}if(t.lightMap){e.lightMap.value=t.lightMap;e.lightMapIntensity.value=t.lightMapIntensity}if(t.emissiveMap){e.emissiveMap.value=t.emissiveMap}if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale)}if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}if(t.envMap){e.envMapIntensity.value=t.envMapIntensity}}function Ge(e,t){Ve(e,t)}function ze(e,t){e.ambientLightColor.needsUpdate=t;e.directionalLights.needsUpdate=t;e.pointLights.needsUpdate=t;e.spotLights.needsUpdate=t;e.hemisphereLights.needsUpdate=t}function ke(e){var t=0;for(var r=0,n=e.length;r<n;r++){var i=e[r];if(i.castShadow){k.shadows[t++]=i}}k.shadows.length=t}function je(e,t){var r,n,i,a=0,o=0,s=0,c,u,l,h,f=t.matrixWorldInverse,d=0,p=0,E=0,m=0;for(r=0,n=e.length;r<n;r++){i=e[r];c=i.color;u=i.intensity;l=i.distance;h=i.shadow&&i.shadow.map?i.shadow.map.texture:null;if(i instanceof THREE.AmbientLight){a+=c.r*u;o+=c.g*u;s+=c.b*u}else if(i instanceof THREE.DirectionalLight){var v=re.get(i);v.color.copy(i.color).multiplyScalar(i.intensity);v.direction.setFromMatrixPosition(i.matrixWorld);z.setFromMatrixPosition(i.target.matrixWorld);v.direction.sub(z);v.direction.transformDirection(f);v.shadow=i.castShadow;if(i.castShadow){v.shadowBias=i.shadow.bias;v.shadowRadius=i.shadow.radius;v.shadowMapSize=i.shadow.mapSize}k.directionalShadowMap[d]=h;k.directionalShadowMatrix[d]=i.shadow.matrix;k.directional[d++]=v}else if(i instanceof THREE.SpotLight){var v=re.get(i);v.position.setFromMatrixPosition(i.matrixWorld);v.position.applyMatrix4(f);v.color.copy(c).multiplyScalar(u);v.distance=l;v.direction.setFromMatrixPosition(i.matrixWorld);z.setFromMatrixPosition(i.target.matrixWorld);v.direction.sub(z);v.direction.transformDirection(f);v.coneCos=Math.cos(i.angle);v.penumbraCos=Math.cos(i.angle*(1-i.penumbra));v.decay=i.distance===0?0:i.decay;v.shadow=i.castShadow;if(i.castShadow){v.shadowBias=i.shadow.bias;v.shadowRadius=i.shadow.radius;v.shadowMapSize=i.shadow.mapSize}k.spotShadowMap[E]=h;k.spotShadowMatrix[E]=i.shadow.matrix;k.spot[E++]=v}else if(i instanceof THREE.PointLight){var v=re.get(i);v.position.setFromMatrixPosition(i.matrixWorld);v.position.applyMatrix4(f);v.color.copy(i.color).multiplyScalar(i.intensity);v.distance=i.distance;v.decay=i.distance===0?0:i.decay;v.shadow=i.castShadow;if(i.castShadow){v.shadowBias=i.shadow.bias;v.shadowRadius=i.shadow.radius;v.shadowMapSize=i.shadow.mapSize}k.pointShadowMap[p]=h;if(k.pointShadowMatrix[p]===undefined){k.pointShadowMatrix[p]=new THREE.Matrix4}z.setFromMatrixPosition(i.matrixWorld).negate();k.pointShadowMatrix[p].identity().setPosition(z);k.point[p++]=v}else if(i instanceof THREE.HemisphereLight){var v=re.get(i);v.direction.setFromMatrixPosition(i.matrixWorld);v.direction.transformDirection(f);v.direction.normalize();v.skyColor.copy(i.color).multiplyScalar(u);v.groundColor.copy(i.groundColor).multiplyScalar(u);k.hemi[m++]=v}}k.ambient[0]=a;k.ambient[1]=o;k.ambient[2]=s;k.directional.length=d;k.spot.length=E;k.point.length=p;k.hemi.length=m;k.hash=d+","+p+","+E+","+m+","+k.shadows.length}this.setFaceCulling=function(e,t){J.setCullFace(e);J.setFlipSided(t===THREE.FrontFaceDirectionCW)};function We(){var e=w;if(e>=Q.maxTextures){console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+Q.maxTextures)}w+=1;return e}function Xe(e,t,r){var n;if(r){X.texParameteri(e,X.TEXTURE_WRAP_S,ct(t.wrapS));X.texParameteri(e,X.TEXTURE_WRAP_T,ct(t.wrapT));X.texParameteri(e,X.TEXTURE_MAG_FILTER,ct(t.magFilter));X.texParameteri(e,X.TEXTURE_MIN_FILTER,ct(t.minFilter))}else{X.texParameteri(e,X.TEXTURE_WRAP_S,X.CLAMP_TO_EDGE);X.texParameteri(e,X.TEXTURE_WRAP_T,X.CLAMP_TO_EDGE);if(t.wrapS!==THREE.ClampToEdgeWrapping||t.wrapT!==THREE.ClampToEdgeWrapping){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",t)}X.texParameteri(e,X.TEXTURE_MAG_FILTER,st(t.magFilter));X.texParameteri(e,X.TEXTURE_MIN_FILTER,st(t.minFilter));if(t.minFilter!==THREE.NearestFilter&&t.minFilter!==THREE.LinearFilter){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",t)}}n=K.get("EXT_texture_filter_anisotropic");if(n){if(t.type===THREE.FloatType&&K.get("OES_texture_float_linear")===null)return;if(t.type===THREE.HalfFloatType&&K.get("OES_texture_half_float_linear")===null)return;if(t.anisotropy>1||$.get(t).__currentAnisotropy){X.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,v.getMaxAnisotropy()));$.get(t).__currentAnisotropy=t.anisotropy}}}function Ye(e,t,r){if(e.__webglInit===undefined){e.__webglInit=true;t.addEventListener("dispose",de);e.__webglTexture=X.createTexture();j.textures++}J.activeTexture(X.TEXTURE0+r);J.bindTexture(X.TEXTURE_2D,e.__webglTexture);X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,t.flipY);X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha);X.pixelStorei(X.UNPACK_ALIGNMENT,t.unpackAlignment);var n=Ze(t.image,Q.maxTextureSize);if(Qe(t)&&Ke(n)===false){n=Je(n)}var i=Ke(n),a=ct(t.format),o=ct(t.type);Xe(X.TEXTURE_2D,t,i);var s,c=t.mipmaps;if(t instanceof THREE.DepthTexture){var u=X.DEPTH_COMPONENT;if(t.type===THREE.FloatType){if(!Z)throw new Error("Float Depth Texture only supported in WebGL2.0");u=X.DEPTH_COMPONENT32F}else if(Z){u=X.DEPTH_COMPONENT16}J.texImage2D(X.TEXTURE_2D,0,u,n.width,n.height,0,a,o,null)}else if(t instanceof THREE.DataTexture){if(c.length>0&&i){for(var l=0,h=c.length;l<h;l++){s=c[l];J.texImage2D(X.TEXTURE_2D,l,a,s.width,s.height,0,a,o,s.data)}t.generateMipmaps=false}else{J.texImage2D(X.TEXTURE_2D,0,a,n.width,n.height,0,a,o,n.data)}}else if(t instanceof THREE.CompressedTexture){for(var l=0,h=c.length;l<h;l++){s=c[l];if(t.format!==THREE.RGBAFormat&&t.format!==THREE.RGBFormat){if(J.getCompressedTextureFormats().indexOf(a)>-1){J.compressedTexImage2D(X.TEXTURE_2D,l,a,s.width,s.height,0,s.data)}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()")}}else{J.texImage2D(X.TEXTURE_2D,l,a,s.width,s.height,0,a,o,s.data)}}}else{if(c.length>0&&i){for(var l=0,h=c.length;l<h;l++){s=c[l];J.texImage2D(X.TEXTURE_2D,l,a,a,o,s)}t.generateMipmaps=false}else{J.texImage2D(X.TEXTURE_2D,0,a,a,o,n)}}if(t.generateMipmaps&&i)X.generateMipmap(X.TEXTURE_2D);e.__version=t.version;if(t.onUpdate)t.onUpdate(t)}function qe(e,t){var r=$.get(e);if(e.version>0&&r.__version!==e.version){var n=e.image;if(n===undefined){console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",e);return}if(n.complete===false){console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",e);return}Ye(r,e,t);return}J.activeTexture(X.TEXTURE0+t);J.bindTexture(X.TEXTURE_2D,r.__webglTexture)}function Ze(e,t){if(e.width>t||e.height>t){var r=t/Math.max(e.width,e.height);var n=document.createElement("canvas");n.width=Math.floor(e.width*r);n.height=Math.floor(e.height*r);var i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height,0,0,n.width,n.height);console.warn("THREE.WebGLRenderer: image is too big ("+e.width+"x"+e.height+"). Resized to "+n.width+"x"+n.height,e);return n}return e}function Ke(e){return THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height)}function Qe(e){if(e.wrapS!==THREE.ClampToEdgeWrapping||e.wrapT!==THREE.ClampToEdgeWrapping)return true;if(e.minFilter!==THREE.NearestFilter&&e.minFilter!==THREE.LinearFilter)return true;return false}function Je(e){if(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement){var t=document.createElement("canvas");t.width=THREE.Math.nearestPowerOfTwo(e.width);t.height=THREE.Math.nearestPowerOfTwo(e.height);var r=t.getContext("2d");r.drawImage(e,0,0,t.width,t.height);console.warn("THREE.WebGLRenderer: image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e);return t}return e}function $e(e,t){var r=$.get(e);if(e.image.length===6){if(e.version>0&&r.__version!==e.version){if(!r.__image__webglTextureCube){e.addEventListener("dispose",de);r.__image__webglTextureCube=X.createTexture();j.textures++}J.activeTexture(X.TEXTURE0+t);J.bindTexture(X.TEXTURE_CUBE_MAP,r.__image__webglTextureCube);X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,e.flipY);var n=e instanceof THREE.CompressedTexture;var i=e.image[0]instanceof THREE.DataTexture;var a=[];for(var o=0;o<6;o++){if(v.autoScaleCubemaps&&!n&&!i){a[o]=Ze(e.image[o],Q.maxCubemapSize)}else{a[o]=i?e.image[o].image:e.image[o]}}var s=a[0],c=Ke(s),u=ct(e.format),l=ct(e.type);Xe(X.TEXTURE_CUBE_MAP,e,c);for(var o=0;o<6;o++){if(!n){if(i){J.texImage2D(X.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,u,a[o].width,a[o].height,0,u,l,a[o].data)}else{J.texImage2D(X.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,u,u,l,a[o])}}else{var h,f=a[o].mipmaps;for(var d=0,p=f.length;d<p;d++){h=f[d];if(e.format!==THREE.RGBAFormat&&e.format!==THREE.RGBFormat){if(J.getCompressedTextureFormats().indexOf(u)>-1){J.compressedTexImage2D(X.TEXTURE_CUBE_MAP_POSITIVE_X+o,d,u,h.width,h.height,0,h.data)}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()")}}else{J.texImage2D(X.TEXTURE_CUBE_MAP_POSITIVE_X+o,d,u,h.width,h.height,0,u,l,h.data)}}}}if(e.generateMipmaps&&c){X.generateMipmap(X.TEXTURE_CUBE_MAP)}r.__version=e.version;if(e.onUpdate)e.onUpdate(e)}else{J.activeTexture(X.TEXTURE0+t);J.bindTexture(X.TEXTURE_CUBE_MAP,r.__image__webglTextureCube)}}}function et(e,t){J.activeTexture(X.TEXTURE0+t);J.bindTexture(X.TEXTURE_CUBE_MAP,$.get(e).__webglTexture)}this.allocTextureUnit=We;this.setTexture2D=function(){var e=false;return function(t,r){if(t instanceof THREE.WebGLRenderTarget){if(!e){console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.");e=true}t=t.texture}qe(t,r)}}();this.setTexture=function(){var e=false;return function(t,r){if(!e){console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.");e=true}v.setTexture2D(t,r)}}();this.setTextureCube=function(){var e=false;return function(t,r){if(t instanceof THREE.WebGLRenderTargetCube){if(!e){console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.");e=true}t=t.texture}if(t instanceof THREE.CubeTexture||Array.isArray(t.image)&&t.image.length===6){$e(t,r)}else{et(t,r)}}}();function tt(e,t,r,n){var i=ct(t.texture.format);var a=ct(t.texture.type);J.texImage2D(n,0,i,t.width,t.height,0,i,a,null);X.bindFramebuffer(X.FRAMEBUFFER,e);X.framebufferTexture2D(X.FRAMEBUFFER,r,n,$.get(t.texture).__webglTexture,0);X.bindFramebuffer(X.FRAMEBUFFER,null)}function rt(e,t){X.bindRenderbuffer(X.RENDERBUFFER,e);if(t.depthBuffer&&!t.stencilBuffer){X.renderbufferStorage(X.RENDERBUFFER,X.DEPTH_COMPONENT16,t.width,t.height);X.framebufferRenderbuffer(X.FRAMEBUFFER,X.DEPTH_ATTACHMENT,X.RENDERBUFFER,e)}else if(t.depthBuffer&&t.stencilBuffer){X.renderbufferStorage(X.RENDERBUFFER,X.DEPTH_STENCIL,t.width,t.height);X.framebufferRenderbuffer(X.FRAMEBUFFER,X.DEPTH_STENCIL_ATTACHMENT,X.RENDERBUFFER,e)}else{X.renderbufferStorage(X.RENDERBUFFER,X.RGBA4,t.width,t.height)}X.bindRenderbuffer(X.RENDERBUFFER,null)}function nt(e,t){var r=t instanceof THREE.WebGLRenderTargetCube;if(r)throw new Error("Depth Texture with cube render targets is not supported!");X.bindFramebuffer(X.FRAMEBUFFER,e);if(!(t.depthTexture instanceof THREE.DepthTexture)){throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture")}if(!$.get(t.depthTexture).__webglTexture||t.depthTexture.image.width!==t.width||t.depthTexture.image.height!==t.height){t.depthTexture.image.width=t.width;t.depthTexture.image.height=t.height;t.depthTexture.needsUpdate=true}v.setTexture2D(t.depthTexture,0);var n=$.get(t.depthTexture).__webglTexture;X.framebufferTexture2D(X.FRAMEBUFFER,X.DEPTH_ATTACHMENT,X.TEXTURE_2D,n,0)}function it(e){var t=$.get(e);var r=e instanceof THREE.WebGLRenderTargetCube;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");nt(t.__webglFramebuffer,e)}else{if(r){t.__webglDepthbuffer=[];for(var n=0;n<6;n++){X.bindFramebuffer(X.FRAMEBUFFER,t.__webglFramebuffer[n]);t.__webglDepthbuffer[n]=X.createRenderbuffer();rt(t.__webglDepthbuffer[n],e)}}else{X.bindFramebuffer(X.FRAMEBUFFER,t.__webglFramebuffer);t.__webglDepthbuffer=X.createRenderbuffer();rt(t.__webglDepthbuffer,e)}}X.bindFramebuffer(X.FRAMEBUFFER,null)}function at(e){var t=$.get(e);var r=$.get(e.texture);e.addEventListener("dispose",pe);r.__webglTexture=X.createTexture();j.textures++;var n=e instanceof THREE.WebGLRenderTargetCube;var i=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height);if(n){t.__webglFramebuffer=[];for(var a=0;a<6;a++){t.__webglFramebuffer[a]=X.createFramebuffer()}}else{t.__webglFramebuffer=X.createFramebuffer()}if(n){J.bindTexture(X.TEXTURE_CUBE_MAP,r.__webglTexture);Xe(X.TEXTURE_CUBE_MAP,e.texture,i);for(var a=0;a<6;a++){tt(t.__webglFramebuffer[a],e,X.COLOR_ATTACHMENT0,X.TEXTURE_CUBE_MAP_POSITIVE_X+a)}if(e.texture.generateMipmaps&&i)X.generateMipmap(X.TEXTURE_CUBE_MAP);J.bindTexture(X.TEXTURE_CUBE_MAP,null)}else{J.bindTexture(X.TEXTURE_2D,r.__webglTexture);Xe(X.TEXTURE_2D,e.texture,i);tt(t.__webglFramebuffer,e,X.COLOR_ATTACHMENT0,X.TEXTURE_2D);if(e.texture.generateMipmaps&&i)X.generateMipmap(X.TEXTURE_2D);J.bindTexture(X.TEXTURE_2D,null)}if(e.depthBuffer){it(e)}}this.getCurrentRenderTarget=function(){return T};this.setRenderTarget=function(e){T=e;if(e&&$.get(e).__webglFramebuffer===undefined){at(e)}var t=e instanceof THREE.WebGLRenderTargetCube;var r;if(e){var n=$.get(e);if(t){r=n.__webglFramebuffer[e.activeCubeFace]}else{r=n.__webglFramebuffer}b.copy(e.scissor);_=e.scissorTest;M.copy(e.viewport)}else{r=null;b.copy(I).multiplyScalar(P);_=B;M.copy(D).multiplyScalar(P)}if(y!==r){X.bindFramebuffer(X.FRAMEBUFFER,r);y=r}J.scissor(b);J.setScissorTest(_);J.viewport(M);if(t){var i=$.get(e.texture);X.framebufferTexture2D(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,i.__webglTexture,e.activeMipMapLevel)}};this.readRenderTargetPixels=function(e,t,r,n,i,a){if(e instanceof THREE.WebGLRenderTarget===false){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var o=$.get(e).__webglFramebuffer;if(o){var s=false;if(o!==y){X.bindFramebuffer(X.FRAMEBUFFER,o);s=true}try{var c=e.texture;if(c.format!==THREE.RGBAFormat&&ct(c.format)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(c.type!==THREE.UnsignedByteType&&ct(c.type)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_TYPE)&&!(c.type===THREE.FloatType&&K.get("WEBGL_color_buffer_float"))&&!(c.type===THREE.HalfFloatType&&K.get("EXT_color_buffer_half_float"))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}if(X.checkFramebufferStatus(X.FRAMEBUFFER)===X.FRAMEBUFFER_COMPLETE){if(t>=0&&t<=e.width-n&&(r>=0&&r<=e.height-i)){X.readPixels(t,r,n,i,ct(c.format),ct(c.type),a)}}else{console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}}finally{if(s){X.bindFramebuffer(X.FRAMEBUFFER,y)}}}};function ot(e){var t=e instanceof THREE.WebGLRenderTargetCube?X.TEXTURE_CUBE_MAP:X.TEXTURE_2D;var r=$.get(e.texture).__webglTexture;J.bindTexture(t,r);X.generateMipmap(t);J.bindTexture(t,null)}function st(e){if(e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter){return X.NEAREST}return X.LINEAR}function ct(e){var t;if(e===THREE.RepeatWrapping)return X.REPEAT;if(e===THREE.ClampToEdgeWrapping)return X.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return X.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return X.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return X.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return X.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return X.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return X.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return X.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return X.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return X.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return X.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return X.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return X.BYTE;if(e===THREE.ShortType)return X.SHORT;if(e===THREE.UnsignedShortType)return X.UNSIGNED_SHORT;if(e===THREE.IntType)return X.INT;if(e===THREE.UnsignedIntType)return X.UNSIGNED_INT;if(e===THREE.FloatType)return X.FLOAT;t=K.get("OES_texture_half_float");if(t!==null){if(e===THREE.HalfFloatType)return t.HALF_FLOAT_OES}if(e===THREE.AlphaFormat)return X.ALPHA;if(e===THREE.RGBFormat)return X.RGB;if(e===THREE.RGBAFormat)return X.RGBA;if(e===THREE.LuminanceFormat)return X.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return X.LUMINANCE_ALPHA;if(e===THREE.DepthFormat)return X.DEPTH_COMPONENT;if(e===THREE.AddEquation)return X.FUNC_ADD;if(e===THREE.SubtractEquation)return X.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return X.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return X.ZERO;if(e===THREE.OneFactor)return X.ONE;if(e===THREE.SrcColorFactor)return X.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return X.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return X.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return X.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return X.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return X.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return X.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return X.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return X.SRC_ALPHA_SATURATE;t=K.get("WEBGL_compressed_texture_s3tc");if(t!==null){if(e===THREE.RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}t=K.get("WEBGL_compressed_texture_pvrtc");if(t!==null){if(e===THREE.RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===THREE.RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===THREE.RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===THREE.RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}t=K.get("WEBGL_compressed_texture_etc1");if(t!==null){if(e===THREE.RGB_ETC1_Format)return t.COMPRESSED_RGB_ETC1_WEBGL}t=K.get("EXT_blend_minmax");if(t!==null){if(e===THREE.MinEquation)return t.MIN_EXT;if(e===THREE.MaxEquation)return t.MAX_EXT}return 0}};THREE.WebGLRenderTarget=function(e,t,r){this.uuid=THREE.Math.generateUUID();this.width=e;this.height=t;this.scissor=new THREE.Vector4(0,0,e,t);this.scissorTest=false;this.viewport=new THREE.Vector4(0,0,e,t);r=r||{};if(r.minFilter===undefined)r.minFilter=THREE.LinearFilter;this.texture=new THREE.Texture(undefined,undefined,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding);this.depthBuffer=r.depthBuffer!==undefined?r.depthBuffer:true;this.stencilBuffer=r.stencilBuffer!==undefined?r.stencilBuffer:true;this.depthTexture=null};Object.assign(THREE.WebGLRenderTarget.prototype,THREE.EventDispatcher.prototype,{setSize:function(e,t){if(this.width!==e||this.height!==t){this.width=e;this.height=t;this.dispose()}this.viewport.set(0,0,e,t);this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.width=e.width;this.height=e.height;this.viewport.copy(e.viewport);this.texture=e.texture.clone();this.depthBuffer=e.depthBuffer;this.stencilBuffer=e.stencilBuffer;this.depthTexture=e.depthTexture;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r);this.activeCubeFace=0;this.activeMipMapLevel=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.WebGLBufferRenderer=function(e,t,r){var n;function i(e){n=e}function a(t,i){e.drawArrays(n,t,i);r.calls++;r.vertices+=i;if(n===e.TRIANGLES)r.faces+=i/3}function o(i){var a=t.get("ANGLE_instanced_arrays");if(a===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}var o=i.attributes.position;var s=0;if(o instanceof THREE.InterleavedBufferAttribute){s=o.data.count;a.drawArraysInstancedANGLE(n,0,s,i.maxInstancedCount)}else{s=o.count;a.drawArraysInstancedANGLE(n,0,s,i.maxInstancedCount)}r.calls++;r.vertices+=s*i.maxInstancedCount;if(n===e.TRIANGLES)r.faces+=i.maxInstancedCount*s/3}this.setMode=i;this.render=a;this.renderInstances=o};THREE.WebGLClipping=function(){var e=this,t=null,r=0,n=false,i=false,a=new THREE.Plane,o=new THREE.Matrix3,s={value:null,needsUpdate:false};this.uniform=s;this.numPlanes=0;this.init=function(e,i,a){var o=e.length!==0||i||r!==0||n;n=i;t=u(e,a,0);r=e.length;return o};this.beginShadows=function(){i=true;u(null)};this.endShadows=function(){i=false;c()};this.setState=function(e,a,o,l,h){if(!n||e===null||e.length===0||i&&!a){if(i){u(null)}else{c()}}else{var f=i?0:r,d=f*4,p=l.clippingState||null;s.value=p;p=u(e,o,d,h);for(var E=0;E!==d;++E){p[E]=t[E]}l.clippingState=p;this.numPlanes+=f}};function c(){if(s.value!==t){s.value=t;s.needsUpdate=r>0}e.numPlanes=r}function u(t,r,n,i){var c=t!==null?t.length:0,u=null;if(c!==0){u=s.value;if(i!==true||u===null){var l=n+c*4,h=r.matrixWorldInverse;o.getNormalMatrix(h);if(u===null||u.length<l){u=new Float32Array(l)}for(var f=0,d=n;f!==c;++f,d+=4){a.copy(t[f]).applyMatrix4(h,o);a.normal.toArray(u,d);u[d+3]=a.constant}}s.value=u;s.needsUpdate=true}e.numPlanes=c;return u}};THREE.WebGLIndexedBufferRenderer=function(e,t,r){var n;function i(e){n=e}var a,o;function s(r){if(r.array instanceof Uint32Array&&t.get("OES_element_index_uint")){a=e.UNSIGNED_INT;o=4}else{a=e.UNSIGNED_SHORT;o=2}}function c(t,i){e.drawElements(n,i,a,t*o);r.calls++;r.vertices+=i;if(n===e.TRIANGLES)r.faces+=i/3}function u(i,s,c){var u=t.get("ANGLE_instanced_arrays");if(u===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u.drawElementsInstancedANGLE(n,c,a,s*o,i.maxInstancedCount);r.calls++;r.vertices+=c*i.maxInstancedCount;if(n===e.TRIANGLES)r.faces+=i.maxInstancedCount*c/3}this.setMode=i;this.setIndex=s;this.render=c;this.renderInstances=u};THREE.WebGLExtensions=function(e){var t={};this.get=function(r){if(t[r]!==undefined){return t[r]}var n;switch(r){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":n=e.getExtension("WEBGL_compressed_texture_etc1");break;default:n=e.getExtension(r)}if(n===null){console.warn("THREE.WebGLRenderer: "+r+" extension not supported.")}t[r]=n;return n}};THREE.WebGLCapabilities=function(e,t,r){function n(t){if(t==="highp"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0){return"highp"}t="mediump"}if(t==="mediump"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0){return"mediump"}}return"lowp"}this.getMaxPrecision=n;this.precision=r.precision!==undefined?r.precision:"highp";this.logarithmicDepthBuffer=r.logarithmicDepthBuffer!==undefined?r.logarithmicDepthBuffer:false;this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS);this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS);this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE);this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE);this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS);this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS);this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS);this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS);this.vertexTextures=this.maxVertexTextures>0;this.floatFragmentTextures=!!t.get("OES_texture_float");this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;var i=n(this.precision);if(i!==this.precision){console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",i,"instead.");this.precision=i}if(this.logarithmicDepthBuffer){this.logarithmicDepthBuffer=!!t.get("EXT_frag_depth")}};THREE.WebGLGeometries=function(e,t,r){var n={};function i(e){var t=e.geometry;if(n[t.id]!==undefined){return n[t.id]}t.addEventListener("dispose",a);var i;if(t instanceof THREE.BufferGeometry){i=t}else if(t instanceof THREE.Geometry){if(t._bufferGeometry===undefined){t._bufferGeometry=(new THREE.BufferGeometry).setFromObject(e)}i=t._bufferGeometry}n[t.id]=i;r.memory.geometries++;return i}function a(e){var i=e.target;var o=n[i.id];if(o.index!==null){s(o.index)}c(o.attributes);i.removeEventListener("dispose",a);delete n[i.id];var u=t.get(i);if(u.wireframe){s(u.wireframe)}t.delete(i);var l=t.get(o);if(l.wireframe){s(l.wireframe)}t.delete(o);r.memory.geometries--}function o(e){if(e instanceof THREE.InterleavedBufferAttribute){return t.get(e.data).__webglBuffer}return t.get(e).__webglBuffer}function s(t){var r=o(t);if(r!==undefined){e.deleteBuffer(r);u(t)}}function c(e){for(var t in e){s(e[t])}}function u(e){if(e instanceof THREE.InterleavedBufferAttribute){t.delete(e.data)}else{t.delete(e)}}this.get=i};THREE.WebGLLights=function(){var e={};this.get=function(t){if(e[t.id]!==undefined){return e[t.id]}var r;switch(t.type){case"DirectionalLight":r={direction:new THREE.Vector3,color:new THREE.Color,shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"SpotLight":r={position:new THREE.Vector3,direction:new THREE.Vector3,color:new THREE.Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"PointLight":r={position:new THREE.Vector3,color:new THREE.Color,distance:0,decay:0,shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"HemisphereLight":r={direction:new THREE.Vector3,skyColor:new THREE.Color,groundColor:new THREE.Color};break}e[t.id]=r;return r}};THREE.WebGLObjects=function(e,t,r){var n=new THREE.WebGLGeometries(e,t,r);function i(t){var r=n.get(t);if(t.geometry instanceof THREE.Geometry){r.updateFromObject(t)}var i=r.index;var o=r.attributes;if(i!==null){a(i,e.ELEMENT_ARRAY_BUFFER)}for(var s in o){a(o[s],e.ARRAY_BUFFER)}var c=r.morphAttributes;for(var s in c){var u=c[s];for(var l=0,h=u.length;l<h;l++){a(u[l],e.ARRAY_BUFFER)}}return r}function a(e,r){var n=e instanceof THREE.InterleavedBufferAttribute?e.data:e;var i=t.get(n);if(i.__webglBuffer===undefined){o(i,n,r)}else if(i.version!==n.version){s(i,n,r)}}function o(t,r,n){t.__webglBuffer=e.createBuffer();e.bindBuffer(n,t.__webglBuffer);var i=r.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW;e.bufferData(n,r.array,i);t.version=r.version}function s(t,r,n){e.bindBuffer(n,t.__webglBuffer);if(r.dynamic===false||r.updateRange.count===-1){e.bufferSubData(n,0,r.array)}else if(r.updateRange.count===0){console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.")}else{e.bufferSubData(n,r.updateRange.offset*r.array.BYTES_PER_ELEMENT,r.array.subarray(r.updateRange.offset,r.updateRange.offset+r.updateRange.count));r.updateRange.count=0}t.version=r.version}function c(e){if(e instanceof THREE.InterleavedBufferAttribute){return t.get(e.data).__webglBuffer}return t.get(e).__webglBuffer}function u(r){var n=t.get(r);if(n.wireframe!==undefined){return n.wireframe}var i=[];var o=r.index;var s=r.attributes;var c=s.position;if(o!==null){var u={};var h=o.array;for(var f=0,d=h.length;f<d;f+=3){var p=h[f+0];var E=h[f+1];var m=h[f+2];if(l(u,p,E))i.push(p,E);if(l(u,E,m))i.push(E,m);if(l(u,m,p))i.push(m,p)}}else{var h=s.position.array;for(var f=0,d=h.length/3-1;f<d;f+=3){var p=f+0;var E=f+1;var m=f+2;i.push(p,E,E,m,m,p)}}var v=c.count>65535?Uint32Array:Uint16Array;var g=new THREE.BufferAttribute(new v(i),1);a(g,e.ELEMENT_ARRAY_BUFFER);n.wireframe=g;return g}function l(e,t,r){if(t>r){var n=t;t=r;r=n}var i=e[t];if(i===undefined){e[t]=[r];return true}else if(i.indexOf(r)===-1){i.push(r);return true}return false}this.getAttributeBuffer=c;this.getWireframeAttribute=u;this.update=i};THREE.WebGLProgram=function(){var e=0;function t(e){switch(e){case THREE.LinearEncoding:return["Linear","( value )"];case THREE.sRGBEncoding:return["sRGB","( value )"];case THREE.RGBEEncoding:return["RGBE","( value )"];case THREE.RGBM7Encoding:return["RGBM","( value, 7.0 )"];case THREE.RGBM16Encoding:return["RGBM","( value, 16.0 )"];case THREE.RGBDEncoding:return["RGBD","( value, 256.0 )"];case THREE.GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+e)}}function r(e,r){var n=t(r);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function n(e,r){var n=t(r);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function i(e,t){var r;switch(t){case THREE.LinearToneMapping:r="Linear";break;case THREE.ReinhardToneMapping:r="Reinhard";break;case THREE.Uncharted2ToneMapping:r="Uncharted2";break;case THREE.CineonToneMapping:r="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function a(e,t,r){e=e||{};var n=[e.derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap||t.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||t.logarithmicDepthBuffer)&&r.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&r.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||t.envMap)&&r.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""];return n.filter(c).join("\n")}function o(e){var t=[];for(var r in e){var n=e[r];if(n===false)continue;t.push("#define "+r+" "+n)}return t.join("\n")}function s(e,t,r){var n={};var i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(var a=0;a<i;a++){var o=e.getActiveAttrib(t,a);var s=o.name;n[s]=e.getAttribLocation(t,s)}return n}function c(e){return e!==""}function u(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights);
}function l(e){var t=/#include +<([\w\d.]+)>/g;function r(e,t){var r=THREE.ShaderChunk[t];if(r===undefined){throw new Error("Can not resolve #include <"+t+">")}return l(r)}return e.replace(t,r)}function h(e){var t=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function r(e,t,r,n){var i="";for(var a=parseInt(t);a<parseInt(r);a++){i+=n.replace(/\[ i \]/g,"[ "+a+" ]")}return i}return e.replace(t,r)}return function f(t,d,p,E){var m=t.context;var v=p.extensions;var g=p.defines;var T=p.__webglShader.vertexShader;var y=p.__webglShader.fragmentShader;var R="SHADOWMAP_TYPE_BASIC";if(E.shadowMapType===THREE.PCFShadowMap){R="SHADOWMAP_TYPE_PCF"}else if(E.shadowMapType===THREE.PCFSoftShadowMap){R="SHADOWMAP_TYPE_PCF_SOFT"}var x="ENVMAP_TYPE_CUBE";var H="ENVMAP_MODE_REFLECTION";var b="ENVMAP_BLENDING_MULTIPLY";if(E.envMap){switch(p.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:x="ENVMAP_TYPE_CUBE";break;case THREE.CubeUVReflectionMapping:case THREE.CubeUVRefractionMapping:x="ENVMAP_TYPE_CUBE_UV";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:x="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:x="ENVMAP_TYPE_SPHERE";break}switch(p.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:H="ENVMAP_MODE_REFRACTION";break}switch(p.combine){case THREE.MultiplyOperation:b="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:b="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:b="ENVMAP_BLENDING_ADD";break}}var _=t.gammaFactor>0?t.gammaFactor:1;var M=a(v,E,t.extensions);var w=o(g);var S=m.createProgram();var L,A;if(p instanceof THREE.RawShaderMaterial){L="";A=""}else{L=["precision "+E.precision+" float;","precision "+E.precision+" int;","#define SHADER_NAME "+p.__webglShader.name,w,E.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+_,"#define MAX_BONES "http://player.polyv.net/script/js/+E.maxBones,E.map?"#define USE_MAP":"",E.envMap?"#define USE_ENVMAP":"",E.envMap?"#define "+H:"",E.lightMap?"#define USE_LIGHTMAP":"",E.aoMap?"#define USE_AOMAP":"",E.emissiveMap?"#define USE_EMISSIVEMAP":"",E.bumpMap?"#define USE_BUMPMAP":"",E.normalMap?"#define USE_NORMALMAP":"",E.displacementMap&&E.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",E.specularMap?"#define USE_SPECULARMAP":"",E.roughnessMap?"#define USE_ROUGHNESSMAP":"",E.metalnessMap?"#define USE_METALNESSMAP":"",E.alphaMap?"#define USE_ALPHAMAP":"",E.vertexColors?"#define USE_COLOR":"",E.flatShading?"#define FLAT_SHADED":"",E.skinning?"#define USE_SKINNING":"",E.useVertexTexture?"#define BONE_TEXTURE":"",E.morphTargets?"#define USE_MORPHTARGETS":"",E.morphNormals&&E.flatShading===false?"#define USE_MORPHNORMALS":"",E.doubleSided?"#define DOUBLE_SIDED":"",E.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+E.numClippingPlanes,E.shadowMapEnabled?"#define USE_SHADOWMAP":"",E.shadowMapEnabled?"#define "+R:"",E.sizeAttenuation?"#define USE_SIZEATTENUATION":"",E.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",E.logarithmicDepthBuffer&&t.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(c).join("\n");A=[M,"precision "+E.precision+" float;","precision "+E.precision+" int;","#define SHADER_NAME "+p.__webglShader.name,w,E.alphaTest?"#define ALPHATEST "+E.alphaTest:"","#define GAMMA_FACTOR "http://player.polyv.net/script/js/+_,E.useFog&&E.fog?"#define USE_FOG":"",E.useFog&&E.fogExp?"#define FOG_EXP2":"",E.map?"#define USE_MAP":"",E.envMap?"#define USE_ENVMAP":"",E.envMap?"#define "+x:"",E.envMap?"#define "+H:"",E.envMap?"#define "+b:"",E.lightMap?"#define USE_LIGHTMAP":"",E.aoMap?"#define USE_AOMAP":"",E.emissiveMap?"#define USE_EMISSIVEMAP":"",E.bumpMap?"#define USE_BUMPMAP":"",E.normalMap?"#define USE_NORMALMAP":"",E.specularMap?"#define USE_SPECULARMAP":"",E.roughnessMap?"#define USE_ROUGHNESSMAP":"",E.metalnessMap?"#define USE_METALNESSMAP":"",E.alphaMap?"#define USE_ALPHAMAP":"",E.vertexColors?"#define USE_COLOR":"",E.flatShading?"#define FLAT_SHADED":"",E.doubleSided?"#define DOUBLE_SIDED":"",E.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+E.numClippingPlanes,E.shadowMapEnabled?"#define USE_SHADOWMAP":"",E.shadowMapEnabled?"#define "+R:"",E.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",E.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",E.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",E.logarithmicDepthBuffer&&t.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",E.envMap&&t.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",E.toneMapping!==THREE.NoToneMapping?"#define TONE_MAPPING":"",E.toneMapping!==THREE.NoToneMapping?THREE.ShaderChunk["tonemapping_pars_fragment"]:"",E.toneMapping!==THREE.NoToneMapping?i("toneMapping",E.toneMapping):"",E.outputEncoding||E.mapEncoding||E.envMapEncoding||E.emissiveMapEncoding?THREE.ShaderChunk["encodings_pars_fragment"]:"",E.mapEncoding?r("mapTexelToLinear",E.mapEncoding):"",E.envMapEncoding?r("envMapTexelToLinear",E.envMapEncoding):"",E.emissiveMapEncoding?r("emissiveMapTexelToLinear",E.emissiveMapEncoding):"",E.outputEncoding?n("linearToOutputTexel",E.outputEncoding):"",E.depthPacking?"#define DEPTH_PACKING "+p.depthPacking:"","\n"].filter(c).join("\n")}T=l(T,E);T=u(T,E);y=l(y,E);y=u(y,E);if(p instanceof THREE.ShaderMaterial===false){T=h(T);y=h(y)}var C=L+T;var P=A+y;var I=THREE.WebGLShader(m,m.VERTEX_SHADER,C);var B=THREE.WebGLShader(m,m.FRAGMENT_SHADER,P);m.attachShader(S,I);m.attachShader(S,B);if(p.index0AttributeName!==undefined){m.bindAttribLocation(S,0,p.index0AttributeName)}else if(E.morphTargets===true){m.bindAttribLocation(S,0,"position")}m.linkProgram(S);var D=m.getProgramInfoLog(S);var U=m.getShaderInfoLog(I);var O=m.getShaderInfoLog(B);var F=true;var N=true;if(m.getProgramParameter(S,m.LINK_STATUS)===false){F=false;console.error("THREE.WebGLProgram: shader error: ",m.getError(),"gl.VALIDATE_STATUS",m.getProgramParameter(S,m.VALIDATE_STATUS),"gl.getProgramInfoLog",D,U,O)}else if(D!==""){console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",D)}else if(U===""||O===""){N=false}if(N){this.diagnostics={runnable:F,material:p,programLog:D,vertexShader:{log:U,prefix:L},fragmentShader:{log:O,prefix:A}}}m.deleteShader(I);m.deleteShader(B);var V;this.getUniforms=function(){if(V===undefined){V=new THREE.WebGLUniforms(m,S,t)}return V};var G;this.getAttributes=function(){if(G===undefined){G=s(m,S)}return G};this.destroy=function(){m.deleteProgram(S);this.program=undefined};Object.defineProperties(this,{uniforms:{get:function(){console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms().");return this.getUniforms()}},attributes:{get:function(){console.warn("THREE.WebGLProgram: .attributes is now .getAttributes().");return this.getAttributes()}}});this.id=e++;this.code=d;this.usedTimes=1;this.program=S;this.vertexShader=I;this.fragmentShader=B;return this}}();THREE.WebGLPrograms=function(e,t){var r=[];var n={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"};var i=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","depthPacking"];function a(e){if(t.floatVertexTextures&&e&&e.skeleton&&e.skeleton.useVertexTexture){return 1024}else{var r=t.maxVertexUniforms;var n=Math.floor((r-20)/4);var i=n;if(e!==undefined&&e instanceof THREE.SkinnedMesh){i=Math.min(e.skeleton.bones.length,i);if(i<e.skeleton.bones.length){console.warn("WebGLRenderer: too many bones - "+e.skeleton.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)")}}return i}}function o(e,t){var r;if(!e){r=THREE.LinearEncoding}else if(e instanceof THREE.Texture){r=e.encoding}else if(e instanceof THREE.WebGLRenderTarget){console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.");r=e.texture.encoding}if(r===THREE.LinearEncoding&&t){r=THREE.GammaEncoding}return r}this.getParameters=function(r,i,s,c,u){var l=n[r.type];var h=a(u);var f=e.getPrecision();if(r.precision!==null){f=t.getMaxPrecision(r.precision);if(f!==r.precision){console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",f,"instead.")}}var d=e.getCurrentRenderTarget();var p={shaderID:l,precision:f,supportsVertexTextures:t.vertexTextures,outputEncoding:o(!d?null:d.texture,e.gammaOutput),map:!!r.map,mapEncoding:o(r.map,e.gammaInput),envMap:!!r.envMap,envMapMode:r.envMap&&r.envMap.mapping,envMapEncoding:o(r.envMap,e.gammaInput),envMapCubeUV:!!r.envMap&&(r.envMap.mapping===THREE.CubeUVReflectionMapping||r.envMap.mapping===THREE.CubeUVRefractionMapping),lightMap:!!r.lightMap,aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:o(r.emissiveMap,e.gammaInput),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,combine:r.combine,vertexColors:r.vertexColors,fog:s,useFog:r.fog,fogExp:s instanceof THREE.FogExp2,flatShading:r.shading===THREE.FlatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:t.logarithmicDepthBuffer,skinning:r.skinning,maxBones:h,useVertexTexture:t.floatVertexTextures&&u&&u.skeleton&&u.skeleton.useVertexTexture,morphTargets:r.morphTargets,morphNormals:r.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:i.directional.length,numPointLights:i.point.length,numSpotLights:i.spot.length,numHemiLights:i.hemi.length,numClippingPlanes:c,shadowMapEnabled:e.shadowMap.enabled&&u.receiveShadow&&i.shadows.length>0,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:r.side===THREE.DoubleSide,flipSided:r.side===THREE.BackSide,depthPacking:r.depthPacking!==undefined?r.depthPacking:false};return p};this.getProgramCode=function(e,t){var r=[];if(t.shaderID){r.push(t.shaderID)}else{r.push(e.fragmentShader);r.push(e.vertexShader)}if(e.defines!==undefined){for(var n in e.defines){r.push(n);r.push(e.defines[n])}}for(var a=0;a<i.length;a++){r.push(t[i[a]])}return r.join()};this.acquireProgram=function(t,n,i){var a;for(var o=0,s=r.length;o<s;o++){var c=r[o];if(c.code===i){a=c;++a.usedTimes;break}}if(a===undefined){a=new THREE.WebGLProgram(e,i,t,n);r.push(a)}return a};this.releaseProgram=function(e){if(--e.usedTimes===0){var t=r.indexOf(e);r[t]=r[r.length-1];r.pop();e.destroy()}};this.programs=r};THREE.WebGLProperties=function(){var e={};this.get=function(t){var r=t.uuid;var n=e[r];if(n===undefined){n={};e[r]=n}return n};this.delete=function(t){delete e[t.uuid]};this.clear=function(){e={}}};THREE.WebGLShader=function(){function e(e){var t=e.split("\n");for(var r=0;r<t.length;r++){t[r]=r+1+": "+t[r]}return t.join("\n")}return function t(r,n,i){var a=r.createShader(n);r.shaderSource(a,i);r.compileShader(a);if(r.getShaderParameter(a,r.COMPILE_STATUS)===false){console.error("THREE.WebGLShader: Shader couldn't compile.")}if(r.getShaderInfoLog(a)!==""){console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",n===r.VERTEX_SHADER?"vertex":"fragment",r.getShaderInfoLog(a),e(i))}return a}}();THREE.WebGLShadowMap=function(e,t,r){var n=e.context,i=e.state,a=new THREE.Frustum,o=new THREE.Matrix4,s=t.shadows,c=new THREE.Vector2,u=new THREE.Vector3,l=new THREE.Vector3,h=[],f=1,d=2,p=(f|d)+1,E=new Array(p),m=new Array(p),v={};var g=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)];var T=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)];var y=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4];var R=new THREE.MeshDepthMaterial;R.depthPacking=THREE.RGBADepthPacking;R.clipping=true;var x=THREE.ShaderLib["distanceRGBA"];var H=THREE.UniformsUtils.clone(x.uniforms);for(var b=0;b!==p;++b){var _=(b&f)!==0;var M=(b&d)!==0;var w=R.clone();w.morphTargets=_;w.skinning=M;E[b]=w;var S=new THREE.ShaderMaterial({defines:{USE_SHADOWMAP:""},uniforms:H,vertexShader:x.vertexShader,fragmentShader:x.fragmentShader,morphTargets:_,skinning:M,clipping:true});m[b]=S}var L=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=THREE.PCFShadowMap;this.renderReverseSided=true;this.renderSingleSided=true;this.render=function(t,f){if(L.enabled===false)return;if(L.autoUpdate===false&&L.needsUpdate===false)return;if(s.length===0)return;i.clearColor(1,1,1,1);i.disable(n.BLEND);i.setDepthTest(true);i.setScissorTest(false);var d,p;for(var E=0,m=s.length;E<m;E++){var v=s[E];var R=v.shadow;if(R===undefined){console.warn("THREE.WebGLShadowMap:",v,"has no shadow.");continue}var x=R.camera;c.copy(R.mapSize);if(v instanceof THREE.PointLight){d=6;p=true;var H=c.x;var b=c.y;y[0].set(H*2,b,H,b);y[1].set(0,b,H,b);y[2].set(H*3,b,H,b);y[3].set(H,b,H,b);y[4].set(H*3,0,H,b);y[5].set(H,0,H,b);c.x*=4;c.y*=2}else{d=1;p=false}if(R.map===null){var _={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat};R.map=new THREE.WebGLRenderTarget(c.x,c.y,_);x.updateProjectionMatrix()}if(R instanceof THREE.SpotLightShadow){R.update(v)}var M=R.map;var w=R.matrix;l.setFromMatrixPosition(v.matrixWorld);x.position.copy(l);e.setRenderTarget(M);e.clear();for(var S=0;S<d;S++){if(p){u.copy(x.position);u.add(g[S]);x.up.copy(T[S]);x.lookAt(u);var P=y[S];i.viewport(P)}else{u.setFromMatrixPosition(v.target.matrixWorld);x.lookAt(u)}x.updateMatrixWorld();x.matrixWorldInverse.getInverse(x.matrixWorld);w.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);w.multiply(x.projectionMatrix);w.multiply(x.matrixWorldInverse);o.multiplyMatrices(x.projectionMatrix,x.matrixWorldInverse);a.setFromMatrix(o);h.length=0;C(t,f,x);for(var I=0,B=h.length;I<B;I++){var D=h[I];var U=r.update(D);var O=D.material;if(O instanceof THREE.MultiMaterial){var F=U.groups;var N=O.materials;for(var V=0,G=F.length;V<G;V++){var z=F[V];var k=N[z.materialIndex];if(k.visible===true){var j=A(D,k,p,l);e.renderBufferDirect(x,null,U,j,D,z)}}}else{var j=A(D,O,p,l);e.renderBufferDirect(x,null,U,j,D,null)}}}}var W=e.getClearColor(),X=e.getClearAlpha();e.setClearColor(W,X);L.needsUpdate=false};function A(t,r,n,i){var a=t.geometry;var o=null;var s=E;var c=t.customDepthMaterial;if(n){s=m;c=t.customDistanceMaterial}if(!c){var u=a.morphTargets!==undefined&&a.morphTargets.length>0&&r.morphTargets;var l=t instanceof THREE.SkinnedMesh&&r.skinning;var h=0;if(u)h|=f;if(l)h|=d;o=s[h]}else{o=c}if(e.localClippingEnabled&&r.clipShadows===true&&r.clippingPlanes.length!==0){var p=o.uuid,g=r.uuid;var T=v[p];if(T===undefined){T={};v[p]=T}var y=T[g];if(y===undefined){y=o.clone();T[g]=y}o=y}o.visible=r.visible;o.wireframe=r.wireframe;var R=r.side;if(L.renderSingleSided&&R==THREE.DoubleSide){R=THREE.FrontSide}if(L.renderReverseSided){if(R===THREE.FrontSide)R=THREE.BackSide;else if(R===THREE.BackSide)R=THREE.FrontSide}o.side=R;o.clipShadows=r.clipShadows;o.clippingPlanes=r.clippingPlanes;o.wireframeLinewidth=r.wireframeLinewidth;o.linewidth=r.linewidth;if(n&&o.uniforms.lightPos!==undefined){o.uniforms.lightPos.value.copy(i)}return o}function C(e,t,r){if(e.visible===false)return;if(e.layers.test(t.layers)&&(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Points)){if(e.castShadow&&(e.frustumCulled===false||a.intersectsObject(e)===true)){var n=e.material;if(n.visible===true){e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld);h.push(e)}}}var i=e.children;for(var o=0,s=i.length;o<s;o++){C(i[o],t,r)}}};THREE.WebGLState=function(e,t,r){var n=this;this.buffers={color:new THREE.WebGLColorBuffer(e,this),depth:new THREE.WebGLDepthBuffer(e,this),stencil:new THREE.WebGLStencilBuffer(e,this)};var i=e.getParameter(e.MAX_VERTEX_ATTRIBS);var a=new Uint8Array(i);var o=new Uint8Array(i);var s=new Uint8Array(i);var c={};var u=null;var l=null;var h=null;var f=null;var d=null;var p=null;var E=null;var m=null;var v=false;var g=null;var T=null;var y=null;var R=null;var x=null;var H=null;var b=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS);var _=null;var M={};var w=new THREE.Vector4;var S=new THREE.Vector4;function L(t,r,n){var i=new Uint8Array(3);var a=e.createTexture();e.bindTexture(t,a);e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST);e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var o=0;o<n;o++){e.texImage2D(r+o,0,e.RGB,1,1,0,e.RGB,e.UNSIGNED_BYTE,i)}return a}var A={};A[e.TEXTURE_2D]=L(e.TEXTURE_2D,e.TEXTURE_2D,1);A[e.TEXTURE_CUBE_MAP]=L(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6);this.init=function(){this.clearColor(0,0,0,1);this.clearDepth(1);this.clearStencil(0);this.enable(e.DEPTH_TEST);this.setDepthFunc(THREE.LessEqualDepth);this.setFlipSided(false);this.setCullFace(THREE.CullFaceBack);this.enable(e.CULL_FACE);this.enable(e.BLEND);this.setBlending(THREE.NormalBlending)};this.initAttributes=function(){for(var e=0,t=a.length;e<t;e++){a[e]=0}};this.enableAttribute=function(r){a[r]=1;if(o[r]===0){e.enableVertexAttribArray(r);o[r]=1}if(s[r]!==0){var n=t.get("ANGLE_instanced_arrays");n.vertexAttribDivisorANGLE(r,0);s[r]=0}};this.enableAttributeAndDivisor=function(t,r,n){a[t]=1;if(o[t]===0){e.enableVertexAttribArray(t);o[t]=1}if(s[t]!==r){n.vertexAttribDivisorANGLE(t,r);s[t]=r}};this.disableUnusedAttributes=function(){for(var t=0,r=o.length;t!==r;++t){if(o[t]!==a[t]){e.disableVertexAttribArray(t);o[t]=0}}};this.enable=function(t){if(c[t]!==true){e.enable(t);c[t]=true}};this.disable=function(t){if(c[t]!==false){e.disable(t);c[t]=false}};this.getCompressedTextureFormats=function(){if(u===null){u=[];if(t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")||t.get("WEBGL_compressed_texture_etc1")){var r=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS);for(var n=0;n<r.length;n++){u.push(r[n])}}}return u};this.setBlending=function(t,n,i,a,o,s,c,u){if(t!==THREE.NoBlending){this.enable(e.BLEND)}else{this.disable(e.BLEND);l=t;return}if(t!==l||u!==v){if(t===THREE.AdditiveBlending){if(u){e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD);e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)}else{e.blendEquation(e.FUNC_ADD);e.blendFunc(e.SRC_ALPHA,e.ONE)}}else if(t===THREE.SubtractiveBlending){if(u){e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD);e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA)}else{e.blendEquation(e.FUNC_ADD);e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)}}else if(t===THREE.MultiplyBlending){if(u){e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD);e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA)}else{e.blendEquation(e.FUNC_ADD);e.blendFunc(e.ZERO,e.SRC_COLOR)}}else{if(u){e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD);e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)}else{e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD);e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)}}l=t;v=u}if(t===THREE.CustomBlending){o=o||n;s=s||i;c=c||a;if(n!==h||o!==p){e.blendEquationSeparate(r(n),r(o));h=n;p=o}if(i!==f||a!==d||s!==E||c!==m){e.blendFuncSeparate(r(i),r(a),r(s),r(c));f=i;d=a;E=s;m=c}}else{h=null;f=null;d=null;p=null;E=null;m=null}};this.setColorWrite=function(e){this.buffers.color.setMask(e)};this.setDepthTest=function(e){this.buffers.depth.setTest(e)};this.setDepthWrite=function(e){this.buffers.depth.setMask(e)};this.setDepthFunc=function(e){this.buffers.depth.setFunc(e)};this.setStencilTest=function(e){this.buffers.stencil.setTest(e)};this.setStencilWrite=function(e){this.buffers.stencil.setMask(e)};this.setStencilFunc=function(e,t,r){this.buffers.stencil.setFunc(e,t,r)};this.setStencilOp=function(e,t,r){this.buffers.stencil.setOp(e,t,r)};this.setFlipSided=function(t){if(g!==t){if(t){e.frontFace(e.CW)}else{e.frontFace(e.CCW)}g=t}};this.setCullFace=function(t){if(t!==THREE.CullFaceNone){this.enable(e.CULL_FACE);if(t!==T){if(t===THREE.CullFaceBack){e.cullFace(e.BACK)}else if(t===THREE.CullFaceFront){e.cullFace(e.FRONT)}else{e.cullFace(e.FRONT_AND_BACK)}}}else{this.disable(e.CULL_FACE)}T=t};this.setLineWidth=function(t){if(t!==y){e.lineWidth(t);y=t}};this.setPolygonOffset=function(t,r,n){if(t){this.enable(e.POLYGON_OFFSET_FILL);if(R!==r||x!==n){e.polygonOffset(r,n);R=r;x=n}}else{this.disable(e.POLYGON_OFFSET_FILL)}};this.getScissorTest=function(){return H};this.setScissorTest=function(t){H=t;if(t){this.enable(e.SCISSOR_TEST)}else{this.disable(e.SCISSOR_TEST)}};this.activeTexture=function(t){if(t===undefined)t=e.TEXTURE0+b-1;if(_!==t){e.activeTexture(t);_=t}};this.bindTexture=function(t,r){if(_===null){n.activeTexture()}var i=M[_];if(i===undefined){i={type:undefined,texture:undefined};M[_]=i}if(i.type!==t||i.texture!==r){e.bindTexture(t,r||A[t]);i.type=t;i.texture=r}};this.compressedTexImage2D=function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error(t)}};this.texImage2D=function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error(t)}};this.clearColor=function(e,t,r,n){this.buffers.color.setClear(e,t,r,n)};this.clearDepth=function(e){this.buffers.depth.setClear(e)};this.clearStencil=function(e){this.buffers.stencil.setClear(e)};this.scissor=function(t){if(w.equals(t)===false){e.scissor(t.x,t.y,t.z,t.w);w.copy(t)}};this.viewport=function(t){if(S.equals(t)===false){e.viewport(t.x,t.y,t.z,t.w);S.copy(t)}};this.reset=function(){for(var t=0;t<o.length;t++){if(o[t]===1){e.disableVertexAttribArray(t);o[t]=0}}c={};u=null;_=null;M={};l=null;g=null;T=null;this.buffers.color.reset();this.buffers.depth.reset();this.buffers.stencil.reset()}};THREE.WebGLColorBuffer=function(e,t){var r=false;var n=new THREE.Vector4;var i=null;var a=new THREE.Vector4;this.setMask=function(t){if(i!==t&&!r){e.colorMask(t,t,t,t);i=t}};this.setLocked=function(e){r=e};this.setClear=function(t,r,i,o){n.set(t,r,i,o);if(a.equals(n)===false){e.clearColor(t,r,i,o);a.copy(n)}};this.reset=function(){r=false;i=null;a=new THREE.Vector4}};THREE.WebGLDepthBuffer=function(e,t){var r=false;var n=null;var i=null;var a=null;this.setTest=function(r){if(r){t.enable(e.DEPTH_TEST)}else{t.disable(e.DEPTH_TEST)}};this.setMask=function(t){if(n!==t&&!r){e.depthMask(t);n=t}};this.setFunc=function(t){if(i!==t){if(t){switch(t){case THREE.NeverDepth:e.depthFunc(e.NEVER);break;case THREE.AlwaysDepth:e.depthFunc(e.ALWAYS);break;case THREE.LessDepth:e.depthFunc(e.LESS);break;case THREE.LessEqualDepth:e.depthFunc(e.LEQUAL);break;case THREE.EqualDepth:e.depthFunc(e.EQUAL);break;case THREE.GreaterEqualDepth:e.depthFunc(e.GEQUAL);break;case THREE.GreaterDepth:e.depthFunc(e.GREATER);break;case THREE.NotEqualDepth:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}}else{e.depthFunc(e.LEQUAL)}i=t}};this.setLocked=function(e){r=e};this.setClear=function(t){if(a!==t){e.clearDepth(t);a=t}};this.reset=function(){r=false;n=null;i=null;a=null}};THREE.WebGLStencilBuffer=function(e,t){var r=false;var n=null;var i=null;var a=null;var o=null;var s=null;var c=null;var u=null;var l=null;this.setTest=function(r){if(r){t.enable(e.STENCIL_TEST)}else{t.disable(e.STENCIL_TEST)}};this.setMask=function(t){if(n!==t&&!r){e.stencilMask(t);n=t}};this.setFunc=function(t,r,n){if(i!==t||a!==r||o!==n){e.stencilFunc(t,r,n);i=t;a=r;o=n}};this.setOp=function(t,r,n){if(s!==t||c!==r||u!==n){e.stencilOp(t,r,n);s=t;c=r;u=n}};this.setLocked=function(e){r=e};this.setClear=function(t){if(l!==t){e.clearStencil(t);l=t}};this.reset=function(){r=false;n=null;i=null;a=null;o=null;s=null;c=null;u=null;l=null}};THREE.WebGLUniforms=function(){var e=function(){this.seq=[];this.map={}},t=[],r=[],n=function(){t.length=0;r.length=0},i=function(e,r,n){var i=e[0];if(i<=0||i>0)return e;var a=r*n,o=t[a];if(o===undefined){o=new Float32Array(a);t[a]=o}if(r!==0){i.toArray(o,0);for(var s=1,c=0;s!==r;++s){c+=n;e[s].toArray(o,c)}}return o},a=function(e,t){var n=r[t];if(n===undefined){n=new Int32Array(t);r[t]=n}for(var i=0;i!==t;++i)n[i]=e.allocTextureUnit();return n},o=function(e,t){e.uniform1f(this.addr,t)},s=function(e,t){e.uniform1i(this.addr,t)},c=function(e,t){if(t.x===undefined)e.uniform2fv(this.addr,t);else e.uniform2f(this.addr,t.x,t.y)},u=function(e,t){if(t.x!==undefined)e.uniform3f(this.addr,t.x,t.y,t.z);else if(t.r!==undefined)e.uniform3f(this.addr,t.r,t.g,t.b);else e.uniform3fv(this.addr,t)},l=function(e,t){if(t.x===undefined)e.uniform4fv(this.addr,t);else e.uniform4f(this.addr,t.x,t.y,t.z,t.w)},h=function(e,t){e.uniformMatrix2fv(this.addr,false,t.elements||t)},f=function(e,t){e.uniformMatrix3fv(this.addr,false,t.elements||t)},d=function(e,t){e.uniformMatrix4fv(this.addr,false,t.elements||t)},p=function(e,t,r){var n=r.allocTextureUnit();e.uniform1i(this.addr,n);if(t)r.setTexture2D(t,n)},E=function(e,t,r){var n=r.allocTextureUnit();e.uniform1i(this.addr,n);if(t)r.setTextureCube(t,n)},m=function(e,t){e.uniform2iv(this.addr,t)},v=function(e,t){e.uniform3iv(this.addr,t)},g=function(e,t){e.uniform4iv(this.addr,t)},T=function(e){switch(e){case 5126:return o;case 35664:return c;case 35665:return u;case 35666:return l;case 35674:return h;case 35675:return f;case 35676:return d;case 35678:return p;case 35680:return E;case 5124:case 35670:return s;case 35667:case 35671:return m;case 35668:case 35672:return v;case 35669:case 35673:return g}},y=function(e,t){e.uniform1fv(this.addr,t)},R=function(e,t){e.uniform1iv(this.addr,t)},x=function(e,t){e.uniform2fv(this.addr,i(t,this.size,2))},H=function(e,t){e.uniform3fv(this.addr,i(t,this.size,3))},b=function(e,t){e.uniform4fv(this.addr,i(t,this.size,4))},_=function(e,t){e.uniformMatrix2fv(this.addr,false,i(t,this.size,4))},M=function(e,t){e.uniformMatrix3fv(this.addr,false,i(t,this.size,9))},w=function(e,t){e.uniformMatrix4fv(this.addr,false,i(t,this.size,16))},S=function(e,t,r){var n=t.length,i=a(r,n);e.uniform1iv(this.addr,i);for(var o=0;o!==n;++o){var s=t[o];if(s)r.setTexture2D(s,i[o])}},L=function(e,t,r){var n=t.length,i=a(r,n);e.uniform1iv(this.addr,i);for(var o=0;o!==n;++o){var s=t[o];if(s)r.setTextureCube(s,i[o])}},A=function(e){switch(e){case 5126:return y;case 35664:return x;case 35665:return H;case 35666:return b;case 35674:return _;case 35675:return M;case 35676:return w;case 35678:return S;case 35680:return L;case 5124:case 35670:return R;case 35667:case 35671:return m;case 35668:case 35672:return v;case 35669:case 35673:return g}},C=function F(e,t,r){this.id=e;this.addr=r;this.setValue=T(t.type)},P=function(e,t,r){this.id=e;this.addr=r;this.size=t.size;this.setValue=A(t.type)},I=function(t){this.id=t;e.call(this)};I.prototype.setValue=function(e,t){var r=this.seq;for(var n=0,i=r.length;n!==i;++n){var a=r[n];a.setValue(e,t[a.id])}};var B=/([\w\d_]+)(\])?(\[|\.)?/g,D=function(e,t){e.seq.push(t);e.map[t.id]=t},U=function(e,t,r){var n=e.name,i=n.length;B.lastIndex=0;for(;;){var a=B.exec(n),o=B.lastIndex,s=a[1],c=a[2]==="]",u=a[3];if(c)s=s|0;if(u===undefined||u==="["&&o+2===i){D(r,u===undefined?new C(s,e,t):new P(s,e,t));break}else{var l=r.map,h=l[s];if(h===undefined){h=new I(s);D(r,h)}r=h}}},O=function N(t,r,n){e.call(this);this.renderer=n;var i=t.getProgramParameter(r,t.ACTIVE_UNIFORMS);for(var a=0;a!==i;++a){var o=t.getActiveUniform(r,a),s=o.name,c=t.getUniformLocation(r,s);U(o,c,this)}};O.prototype.setValue=function(e,t,r){var n=this.map[t];if(n!==undefined)n.setValue(e,r,this.renderer)};O.prototype.set=function(e,t,r){var n=this.map[r];if(n!==undefined)n.setValue(e,t[r],this.renderer)};O.prototype.setOptional=function(e,t,r){var n=t[r];if(n!==undefined)this.setValue(e,r,n)};O.upload=function(e,t,r,n){for(var i=0,a=t.length;i!==a;++i){var o=t[i],s=r[o.id];if(s.needsUpdate!==false){o.setValue(e,s.value,n)}}};O.seqWithValue=function(e,t){var r=[];for(var n=0,i=e.length;n!==i;++n){var a=e[n];if(a.id in t)r.push(a)}return r};O.splitDynamic=function(e,t){var r=null,n=e.length,i=0;for(var a=0;a!==n;++a){var o=e[a],s=t[o.id];if(s&&s.dynamic===true){if(r===null)r=[];r.push(o)}else{if(i<a)e[i]=o;++i}}if(i<n)e.length=i;return r};O.evalDynamic=function(e,t,r,n){for(var i=0,a=e.length;i!==a;++i){var o=t[e[i].id],s=o.onUpdateCallback;if(s!==undefined)s.call(o,r,n)}};return O}();THREE.LensFlarePlugin=function(e,t){var r=e.context;var n=e.state;var i,a;var o,s,c,u;var l,h;function f(){var e=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]);var t=new Uint16Array([0,1,2,0,2,3]);i=r.createBuffer();a=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,i);r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a);r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW);l=r.createTexture();h=r.createTexture();n.bindTexture(r.TEXTURE_2D,l);r.texImage2D(r.TEXTURE_2D,0,r.RGB,16,16,0,r.RGB,r.UNSIGNED_BYTE,null);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST);n.bindTexture(r.TEXTURE_2D,h);r.texImage2D(r.TEXTURE_2D,0,r.RGBA,16,16,0,r.RGBA,r.UNSIGNED_BYTE,null);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST);o={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),
fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")};s=d(o);c={vertex:r.getAttribLocation(s,"position"),uv:r.getAttribLocation(s,"uv")};u={renderType:r.getUniformLocation(s,"renderType"),map:r.getUniformLocation(s,"map"),occlusionMap:r.getUniformLocation(s,"occlusionMap"),opacity:r.getUniformLocation(s,"opacity"),color:r.getUniformLocation(s,"color"),scale:r.getUniformLocation(s,"scale"),rotation:r.getUniformLocation(s,"rotation"),screenPosition:r.getUniformLocation(s,"screenPosition")}}this.render=function(o,d,p){if(t.length===0)return;var E=new THREE.Vector3;var m=p.w/p.z,v=p.z*.5,g=p.w*.5;var T=16/p.w,y=new THREE.Vector2(T*m,T);var R=new THREE.Vector3(1,1,0),x=new THREE.Vector2(1,1);var H=new THREE.Box2;H.min.set(0,0);H.max.set(p.z-16,p.w-16);if(s===undefined){f()}r.useProgram(s);n.initAttributes();n.enableAttribute(c.vertex);n.enableAttribute(c.uv);n.disableUnusedAttributes();r.uniform1i(u.occlusionMap,0);r.uniform1i(u.map,1);r.bindBuffer(r.ARRAY_BUFFER,i);r.vertexAttribPointer(c.vertex,2,r.FLOAT,false,2*8,0);r.vertexAttribPointer(c.uv,2,r.FLOAT,false,2*8,8);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a);n.disable(r.CULL_FACE);n.setDepthWrite(false);for(var b=0,_=t.length;b<_;b++){T=16/p.w;y.set(T*m,T);var M=t[b];E.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]);E.applyMatrix4(d.matrixWorldInverse);E.applyProjection(d.projectionMatrix);R.copy(E);x.x=p.x+R.x*v+v-8;x.y=p.y+R.y*g+g-8;if(H.containsPoint(x)===true){n.activeTexture(r.TEXTURE0);n.bindTexture(r.TEXTURE_2D,null);n.activeTexture(r.TEXTURE1);n.bindTexture(r.TEXTURE_2D,l);r.copyTexImage2D(r.TEXTURE_2D,0,r.RGB,x.x,x.y,16,16,0);r.uniform1i(u.renderType,0);r.uniform2f(u.scale,y.x,y.y);r.uniform3f(u.screenPosition,R.x,R.y,R.z);n.disable(r.BLEND);n.enable(r.DEPTH_TEST);r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0);n.activeTexture(r.TEXTURE0);n.bindTexture(r.TEXTURE_2D,h);r.copyTexImage2D(r.TEXTURE_2D,0,r.RGBA,x.x,x.y,16,16,0);r.uniform1i(u.renderType,1);n.disable(r.DEPTH_TEST);n.activeTexture(r.TEXTURE1);n.bindTexture(r.TEXTURE_2D,l);r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0);M.positionScreen.copy(R);if(M.customUpdateCallback){M.customUpdateCallback(M)}else{M.updateLensFlares()}r.uniform1i(u.renderType,2);n.enable(r.BLEND);for(var w=0,S=M.lensFlares.length;w<S;w++){var L=M.lensFlares[w];if(L.opacity>.001&&L.scale>.001){R.x=L.x;R.y=L.y;R.z=L.z;T=L.size*L.scale/p.w;y.x=T*m;y.y=T;r.uniform3f(u.screenPosition,R.x,R.y,R.z);r.uniform2f(u.scale,y.x,y.y);r.uniform1f(u.rotation,L.rotation);r.uniform1f(u.opacity,L.opacity);r.uniform3f(u.color,L.color.r,L.color.g,L.color.b);n.setBlending(L.blending,L.blendEquation,L.blendSrc,L.blendDst);e.setTexture2D(L.texture,1);r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0)}}}}n.enable(r.CULL_FACE);n.enable(r.DEPTH_TEST);n.setDepthWrite(true);e.resetGLState()};function d(t){var n=r.createProgram();var i=r.createShader(r.FRAGMENT_SHADER);var a=r.createShader(r.VERTEX_SHADER);var o="precision "+e.getPrecision()+" float;\n";r.shaderSource(i,o+t.fragmentShader);r.shaderSource(a,o+t.vertexShader);r.compileShader(i);r.compileShader(a);r.attachShader(n,i);r.attachShader(n,a);r.linkProgram(n);return n}};THREE.SpritePlugin=function(e,t){var r=e.context;var n=e.state;var i,a;var o,s,c;var u;var l=new THREE.Vector3;var h=new THREE.Quaternion;var f=new THREE.Vector3;function d(){var e=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]);var t=new Uint16Array([0,1,2,0,2,3]);i=r.createBuffer();a=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,i);r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a);r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW);o=p();s={position:r.getAttribLocation(o,"position"),uv:r.getAttribLocation(o,"uv")};c={uvOffset:r.getUniformLocation(o,"uvOffset"),uvScale:r.getUniformLocation(o,"uvScale"),rotation:r.getUniformLocation(o,"rotation"),scale:r.getUniformLocation(o,"scale"),color:r.getUniformLocation(o,"color"),map:r.getUniformLocation(o,"map"),opacity:r.getUniformLocation(o,"opacity"),modelViewMatrix:r.getUniformLocation(o,"modelViewMatrix"),projectionMatrix:r.getUniformLocation(o,"projectionMatrix"),fogType:r.getUniformLocation(o,"fogType"),fogDensity:r.getUniformLocation(o,"fogDensity"),fogNear:r.getUniformLocation(o,"fogNear"),fogFar:r.getUniformLocation(o,"fogFar"),fogColor:r.getUniformLocation(o,"fogColor"),alphaTest:r.getUniformLocation(o,"alphaTest")};var n=document.createElement("canvas");n.width=8;n.height=8;var l=n.getContext("2d");l.fillStyle="white";l.fillRect(0,0,8,8);console.log("canvas3");u=new THREE.Texture(n);u.needsUpdate=true}this.render=function(p,m){if(t.length===0)return;if(o===undefined){d()}r.useProgram(o);n.initAttributes();n.enableAttribute(s.position);n.enableAttribute(s.uv);n.disableUnusedAttributes();n.disable(r.CULL_FACE);n.enable(r.BLEND);r.bindBuffer(r.ARRAY_BUFFER,i);r.vertexAttribPointer(s.position,2,r.FLOAT,false,2*8,0);r.vertexAttribPointer(s.uv,2,r.FLOAT,false,2*8,8);r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a);r.uniformMatrix4fv(c.projectionMatrix,false,m.projectionMatrix.elements);n.activeTexture(r.TEXTURE0);r.uniform1i(c.map,0);var v=0;var g=0;var T=p.fog;if(T){r.uniform3f(c.fogColor,T.color.r,T.color.g,T.color.b);if(T instanceof THREE.Fog){r.uniform1f(c.fogNear,T.near);r.uniform1f(c.fogFar,T.far);r.uniform1i(c.fogType,1);v=1;g=1}else if(T instanceof THREE.FogExp2){r.uniform1f(c.fogDensity,T.density);r.uniform1i(c.fogType,2);v=2;g=2}}else{r.uniform1i(c.fogType,0);v=0;g=0}for(var y=0,R=t.length;y<R;y++){var x=t[y];x.modelViewMatrix.multiplyMatrices(m.matrixWorldInverse,x.matrixWorld);x.z=-x.modelViewMatrix.elements[14]}t.sort(E);var H=[];for(var y=0,R=t.length;y<R;y++){var x=t[y];var b=x.material;r.uniform1f(c.alphaTest,b.alphaTest);r.uniformMatrix4fv(c.modelViewMatrix,false,x.modelViewMatrix.elements);x.matrixWorld.decompose(l,h,f);H[0]=f.x;H[1]=f.y;var _=0;if(p.fog&&b.fog){_=g}if(v!==_){r.uniform1i(c.fogType,_);v=_}if(b.map!==null){r.uniform2f(c.uvOffset,b.map.offset.x,b.map.offset.y);r.uniform2f(c.uvScale,b.map.repeat.x,b.map.repeat.y)}else{r.uniform2f(c.uvOffset,0,0);r.uniform2f(c.uvScale,1,1)}r.uniform1f(c.opacity,b.opacity);r.uniform3f(c.color,b.color.r,b.color.g,b.color.b);r.uniform1f(c.rotation,b.rotation);r.uniform2fv(c.scale,H);n.setBlending(b.blending,b.blendEquation,b.blendSrc,b.blendDst);n.setDepthTest(b.depthTest);n.setDepthWrite(b.depthWrite);if(b.map){e.setTexture2D(b.map,0)}else{e.setTexture2D(u,0)}r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0)}n.enable(r.CULL_FACE);e.resetGLState()};function p(){var t=r.createProgram();var n=r.createShader(r.VERTEX_SHADER);var i=r.createShader(r.FRAGMENT_SHADER);r.shaderSource(n,["precision "+e.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n"));r.shaderSource(i,["precision "+e.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n"));r.compileShader(n);r.compileShader(i);r.attachShader(t,n);r.attachShader(t,i);r.linkProgram(t);return t}function E(e,t){if(e.renderOrder!==t.renderOrder){return e.renderOrder-t.renderOrder}else if(e.z!==t.z){return t.z-e.z}else{return t.id-e.id}}};Object.assign(THREE,{Face4:function(e,t,r,n,i,a,o){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(e,t,r,i,a,o)},LineStrip:0,LinePieces:1,MeshFaceMaterial:THREE.MultiMaterial,PointCloud:function(e,t){console.warn("THREE.PointCloud has been renamed to THREE.Points.");return new THREE.Points(e,t)},Particle:THREE.Sprite,ParticleSystem:function(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.Points.");return new THREE.Points(e,t)},PointCloudMaterial:function(e){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(e)},ParticleBasicMaterial:function(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(e)},ParticleSystemMaterial:function(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(e)},Vertex:function(e,t,r){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead.");return new THREE.Vector3(e,t,r)}});Object.assign(THREE.Box2.prototype,{empty:function(){console.warn("THREE.Box2: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(e){console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(e)}});Object.assign(THREE.Box3.prototype,{empty:function(){console.warn("THREE.Box3: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(e){console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(e)},isIntersectionSphere:function(e){console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(e)}});Object.assign(THREE.Matrix3.prototype,{multiplyVector3:function(e){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return e.applyMatrix3(this)},multiplyVector3Array:function(e){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(e)}});Object.assign(THREE.Matrix4.prototype,{extractPosition:function(e){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(e)},setRotationFromQuaternion:function(e){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(e)},multiplyVector3:function(e){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return e.applyProjection(this)},multiplyVector4:function(e){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},multiplyVector3Array:function(e){console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(e)},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");e.transformDirection(this)},crossVector:function(e){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},translate:function(e){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(e){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(e){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(e){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")}});Object.assign(THREE.Plane.prototype,{isIntersectionLine:function(e){console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");return this.intersectsLine(e)}});Object.assign(THREE.Quaternion.prototype,{multiplyVector3:function(e){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return e.applyQuaternion(this)}});Object.assign(THREE.Ray.prototype,{isIntersectionBox:function(e){console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(e)},isIntersectionPlane:function(e){console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().");return this.intersectsPlane(e)},isIntersectionSphere:function(e){console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(e)}});Object.assign(THREE.Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(t,e)}});Object.assign(THREE.Object3D.prototype,{getChildByName:function(e){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(e)},renderDepth:function(e){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(t,e)}});Object.defineProperties(THREE.Object3D.prototype,{eulerOrder:{get:function(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(e){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.defineProperties(THREE.LOD.prototype,{objects:{get:function(){console.warn("THREE.LOD: .objects has been renamed to .levels.");return this.levels}}});THREE.PerspectiveCamera.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. "+"Use .setFocalLength and .filmGauge for a photographic setup.");if(t!==undefined)this.filmGauge=t;this.setFocalLength(e)};Object.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(e){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left.");this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right.");this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top.");this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.");this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near.");this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far.");this.shadow.camera.far=e}},shadowCameraVisible:{set:function(e){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias.");this.shadow.bias=e}},shadowDarkness:{set:function(e){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.");this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.");this.shadow.mapSize.height=e}}});Object.defineProperties(THREE.BufferAttribute.prototype,{length:{get:function(){console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count.");return this.array.length}}});Object.assign(THREE.BufferGeometry.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(e)},addDrawCall:function(e,t,r){if(r!==undefined){console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.")}console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}});Object.defineProperties(THREE.BufferGeometry.prototype,{drawcalls:{get:function(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups}},offsets:{get:function(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups}}});Object.defineProperties(THREE.Material.prototype,{wrapAround:{get:function(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set:function(e){console.warn("THREE."+this.type+": .wrapAround has been removed.")}},wrapRGB:{get:function(){console.warn("THREE."+this.type+": .wrapRGB has been removed.");return new THREE.Color}}});Object.defineProperties(THREE.MeshPhongMaterial.prototype,{metal:{get:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.");return false},set:function(e){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(THREE.ShaderMaterial.prototype,{derivatives:{get:function(){console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");return this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");this.extensions.derivatives=e}}});THREE.EventDispatcher.prototype=Object.assign(Object.create({constructor:THREE.EventDispatcher,apply:function(e){console.warn("THREE.EventDispatcher: .apply is deprecated, "+"just inherit or Object.assign the prototype to mix-in.");Object.assign(e,this)}}),THREE.EventDispatcher.prototype);Object.assign(THREE.WebGLRenderer.prototype,{supportsFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");return this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");return this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");return this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");return this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");return this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");return this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return this.capabilities.vertexTextures},supportsInstancedArrays:function(){console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");return this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}});Object.defineProperties(THREE.WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");this.shadowMap.type=e}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.");this.shadowMap.cullFace=e}}});Object.defineProperties(THREE.WebGLShadowMap.prototype,{cullFace:{get:function(){return this.renderReverseSided?THREE.CullFaceFront:THREE.CullFaceBack},set:function(e){var t=e!==THREE.CullFaceBack;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+t+".");this.renderReverseSided=t}}});Object.defineProperties(THREE.WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");this.texture.wrapS=e}},wrapT:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=e}},magFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=e}},minFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");return this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");this.texture.minFilter=e}},anisotropy:{get:function(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");return this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=e}},offset:{get:function(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");return this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");this.texture.offset=e}},repeat:{get:function(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");return this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");this.texture.repeat=e}},format:{get:function(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");return this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=e}},type:{get:function(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=e}},generateMipmaps:{get:function(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=e}}});Object.assign(THREE.Audio.prototype,{load:function(e){console.warn("THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.");var t=this;var r=new THREE.AudioLoader;r.load(e,function(e){t.setBuffer(e)});return this}});Object.assign(THREE.AudioAnalyser.prototype,{getData:function(e){console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData().");return this.getFrequencyData()}});THREE.GeometryUtils={merge:function(e,t,r){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var n;if(t instanceof THREE.Mesh){t.matrixAutoUpdate&&t.updateMatrix();n=t.matrix;t=t.geometry}e.merge(t,n,r)},center:function(e){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return e.center()}};THREE.ImageUtils={crossOrigin:undefined,loadTexture:function(e,t,r,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new THREE.TextureLoader;i.setCrossOrigin(this.crossOrigin);var a=i.load(e,r,undefined,n);if(t)a.mapping=t;return a},loadTextureCube:function(e,t,r,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new THREE.CubeTextureLoader;i.setCrossOrigin(this.crossOrigin);var a=i.load(e,r,undefined,n);if(t)a.mapping=t;return a},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};THREE.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js.");this.projectVector=function(e,t){console.warn("THREE.Projector: .projectVector() is now vector.project().");e.project(t)};this.unprojectVector=function(e,t){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");e.unproject(t)};this.pickingRay=function(e,t){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}};THREE.CanvasRenderer=function(){console.error("CanvasRenderer.js"/*tpa=http://player.polyv.net/script/js/THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js*/);this.domElement=document.createElement("canvas");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.CurveUtils={tangentQuadraticBezier:function(e,t,r,n){return 2*(1-e)*(r-t)+2*e*(n-r)},tangentCubicBezier:function(e,t,r,n,i){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*n*(1-e)-3*e*e*n+3*e*e*i},tangentSpline:function(e,t,r,n,i){var a=6*e*e-6*e;var o=3*e*e-4*e+1;var s=-6*e*e+6*e;var c=3*e*e-2*e;return a+o+s+c},interpolate:function(e,t,r,n,i){var a=(r-e)*.5;var o=(n-t)*.5;var s=i*i;var c=i*s;return(2*t-2*r+a+o)*c+(-3*t+3*r-2*a-o)*s+a*i+t}};THREE.SceneUtils={createMultiMaterialObject:function(e,t){var r=new THREE.Group;for(var n=0,i=t.length;n<i;n++){r.add(new THREE.Mesh(e,t[n]))}return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld);t.remove(e);r.add(e)},attach:function(e,t,r){var n=new THREE.Matrix4;n.getInverse(r.matrixWorld);e.applyMatrix(n);t.remove(e);r.add(e)}};THREE.ShapeUtils={area:function(e){var t=e.length;var r=0;for(var n=t-1,i=0;i<t;n=i++){r+=e[n].x*e[i].y-e[i].x*e[n].y}return r*.5},triangulate:function(){function e(e,t,r,n,i,a){var o;var s,c,u,l;var h,f,d,p;s=e[a[t]].x;c=e[a[t]].y;u=e[a[r]].x;l=e[a[r]].y;h=e[a[n]].x;f=e[a[n]].y;if(Number.EPSILON>(u-s)*(f-c)-(l-c)*(h-s))return false;var E,m,v,g,T,y;var R,x,H,b,_,M;var w,S,L;E=h-u;m=f-l;v=s-h;g=c-f;T=u-s;y=l-c;for(o=0;o<i;o++){d=e[a[o]].x;p=e[a[o]].y;if(d===s&&p===c||d===u&&p===l||d===h&&p===f)continue;R=d-s;x=p-c;H=d-u;b=p-l;_=d-h;M=p-f;L=E*b-m*H;w=T*x-y*R;S=v*M-g*_;if(L>=-Number.EPSILON&&S>=-Number.EPSILON&&w>=-Number.EPSILON)return false}return true}return function(t,r){var n=t.length;if(n<3)return null;var i=[],a=[],o=[];var s,c,u;if(THREE.ShapeUtils.area(t)>0){for(c=0;c<n;c++)a[c]=c}else{for(c=0;c<n;c++)a[c]=n-1-c}var l=n;var h=2*l;for(c=l-1;l>2;){if(h--<=0){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");if(r)return o;return i}s=c;if(l<=s)s=0;c=s+1;if(l<=c)c=0;u=c+1;if(l<=u)u=0;if(e(t,s,c,u,l,a)){var f,d,p,E,m;f=a[s];d=a[c];p=a[u];i.push([t[f],t[d],t[p]]);o.push([a[s],a[c],a[u]]);for(E=c,m=c+1;m<l;E++,m++){a[E]=a[m]}l--;h=2*l}}if(r)return o;return i}}(),triangulateShape:function(e,t){function r(e,t,r){if(e.x!==t.x){if(e.x<t.x){return e.x<=r.x&&r.x<=t.x}else{return t.x<=r.x&&r.x<=e.x}}else{if(e.y<t.y){return e.y<=r.y&&r.y<=t.y}else{return t.y<=r.y&&r.y<=e.y}}}function n(e,t,n,i,a){var o=t.x-e.x,s=t.y-e.y;var c=i.x-n.x,u=i.y-n.y;var l=e.x-n.x;var h=e.y-n.y;var f=s*c-o*u;var d=s*l-o*h;if(Math.abs(f)>Number.EPSILON){var p;if(f>0){if(d<0||d>f)return[];p=u*l-c*h;if(p<0||p>f)return[]}else{if(d>0||d<f)return[];p=u*l-c*h;if(p>0||p<f)return[]}if(p===0){if(a&&(d===0||d===f))return[];return[e]}if(p===f){if(a&&(d===0||d===f))return[];return[t]}if(d===0)return[n];if(d===f)return[i];var E=p/f;return[{x:e.x+E*o,y:e.y+E*s}]}else{if(d!==0||u*l!==c*h)return[];var m=o===0&&s===0;var v=c===0&&u===0;if(m&&v){if(e.x!==n.x||e.y!==n.y)return[];return[e]}if(m){if(!r(n,i,e))return[];return[e]}if(v){if(!r(e,t,n))return[];return[n]}var g,T,y,R;var x,H,b,_;if(o!==0){if(e.x<t.x){g=e;y=e.x;T=t;R=t.x}else{g=t;y=t.x;T=e;R=e.x}if(n.x<i.x){x=n;b=n.x;H=i;_=i.x}else{x=i;b=i.x;H=n;_=n.x}}else{if(e.y<t.y){g=e;y=e.y;T=t;R=t.y}else{g=t;y=t.y;T=e;R=e.y}if(n.y<i.y){x=n;b=n.y;H=i;_=i.y}else{x=i;b=i.y;H=n;_=n.y}}if(y<=b){if(R<b)return[];if(R===b){if(a)return[];return[x]}if(R<=_)return[x,T];return[x,H]}else{if(y>_)return[];if(y===_){if(a)return[];return[g]}if(R<=_)return[g,T];return[g,H]}}}function i(e,t,r,n){var i=t.x-e.x,a=t.y-e.y;var o=r.x-e.x,s=r.y-e.y;var c=n.x-e.x,u=n.y-e.y;var l=i*s-a*o;var h=i*u-a*c;if(Math.abs(l)>Number.EPSILON){var f=c*s-u*o;if(l>0){return h>=0&&f>=0;
}else{return h>=0||f>=0}}else{return h>0}}function a(e,t){var r=e.concat();var a;function o(e,t){var n=r.length-1;var o=e-1;if(o<0)o=n;var s=e+1;if(s>n)s=0;var c=i(r[e],r[o],r[s],a[t]);if(!c){return false}var u=a.length-1;var l=t-1;if(l<0)l=u;var h=t+1;if(h>u)h=0;c=i(a[t],a[l],a[h],r[e]);if(!c){return false}return true}function s(e,t){var i,a,o;for(i=0;i<r.length;i++){a=i+1;a%=r.length;o=n(e,t,r[i],r[a],true);if(o.length>0)return true}return false}var c=[];function u(e,r){var i,a,o,s,u;for(i=0;i<c.length;i++){a=t[c[i]];for(o=0;o<a.length;o++){s=o+1;s%=a.length;u=n(e,r,a[o],a[s],true);if(u.length>0)return true}}return false}var l,h,f,d,p,E,m=[],v,g,T,y;for(var R=0,x=t.length;R<x;R++){c.push(R)}var H=0;var b=c.length*2;while(c.length>0){b--;if(b<0){console.log("Infinite Loop! Holes left:"+c.length+", Probably Hole outside Shape!");break}for(h=H;h<r.length;h++){f=r[h];l=-1;for(var R=0;R<c.length;R++){p=c[R];E=f.x+":"+f.y+":"+p;if(m[E]!==undefined)continue;a=t[p];for(var _=0;_<a.length;_++){d=a[_];if(!o(h,_))continue;if(s(f,d))continue;if(u(f,d))continue;l=_;c.splice(R,1);v=r.slice(0,h+1);g=r.slice(h);T=a.slice(l);y=a.slice(0,l+1);r=v.concat(T).concat(y).concat(g);H=h;break}if(l>=0)break;m[E]=true}if(l>=0)break}}return r}var o,s,c,u,l,h,f={};var d=e.concat();for(var p=0,E=t.length;p<E;p++){Array.prototype.push.apply(d,t[p])}for(o=0,s=d.length;o<s;o++){l=d[o].x+":"+d[o].y;if(f[l]!==undefined){console.warn("THREE.Shape: Duplicate point",l)}f[l]=o}var m=a(e,t);var v=THREE.ShapeUtils.triangulate(m,false);for(o=0,s=v.length;o<s;o++){u=v[o];for(c=0;c<3;c++){l=u[c].x+":"+u[c].y;h=f[l];if(h!==undefined){u[c]=h}}}return v.concat()},isClockWise:function(e){return THREE.ShapeUtils.area(e)<0},b2:function(){function e(e,t){var r=1-e;return r*r*t}function t(e,t){return 2*(1-e)*e*t}function r(e,t){return e*e*t}return function(n,i,a,o){return e(n,i)+t(n,a)+r(n,o)}}(),b3:function(){function e(e,t){var r=1-e;return r*r*r*t}function t(e,t){var r=1-e;return 3*r*r*e*t}function r(e,t){var r=1-e;return 3*r*e*e*t}function n(e,t){return e*e*e*t}return function(i,a,o,s,c){return e(i,a)+t(i,o)+r(i,s)+n(i,c)}}()};THREE.Curve=function(){};THREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(e){console.warn("THREE.Curve: Warning, getPoint() not implemented!");return null},getPointAt:function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},getPoints:function(e){if(!e)e=5;var t,r=[];for(t=0;t<=e;t++){r.push(this.getPoint(t/e))}return r},getSpacedPoints:function(e){if(!e)e=5;var t,r=[];for(t=0;t<=e;t++){r.push(this.getPointAt(t/e))}return r},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(!e)e=this.__arcLengthDivisions?this.__arcLengthDivisions:200;if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=false;var t=[];var r,n=this.getPoint(0);var i,a=0;t.push(0);for(i=1;i<=e;i++){r=this.getPoint(i/e);a+=r.distanceTo(n);t.push(a);n=r}this.cacheArcLengths=t;return t},updateArcLengths:function(){this.needsUpdate=true;this.getLengths()},getUtoTmapping:function(e,t){var r=this.getLengths();var n=0,i=r.length;var a;if(t){a=t}else{a=e*r[i-1]}var o=0,s=i-1,c;while(o<=s){n=Math.floor(o+(s-o)/2);c=r[n]-a;if(c<0){o=n+1}else if(c>0){s=n-1}else{s=n;break}}n=s;if(r[n]===a){var u=n/(i-1);return u}var l=r[n];var h=r[n+1];var f=h-l;var d=(a-l)/f;var u=(n+d)/(i-1);return u},getTangent:function(e){var t=1e-4;var r=e-t;var n=e+t;if(r<0)r=0;if(n>1)n=1;var i=this.getPoint(r);var a=this.getPoint(n);var o=a.clone().sub(i);return o.normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)}};THREE.Curve.create=function(e,t){e.prototype=Object.create(THREE.Curve.prototype);e.prototype.constructor=e;e.prototype.getPoint=t;return e};THREE.CurvePath=function(){this.curves=[];this.autoClose=false};THREE.CurvePath.prototype=Object.assign(Object.create(THREE.Curve.prototype),{constructor:THREE.CurvePath,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0);var t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){this.curves.push(new THREE.LineCurve(t,e))}},getPoint:function(e){var t=e*this.getLength();var r=this.getCurveLengths();var n=0;while(n<r.length){if(r[n]>=t){var i=r[n]-t;var a=this.curves[n];var o=1-i/a.getLength();return a.getPointAt(o)}n++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths}var e=[],t=0;for(var r=0,n=this.curves.length;r<n;r++){t+=this.curves[r].getLength();e.push(t)}this.cacheLengths=e;return e},createPointsGeometry:function(e){var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){var t=new THREE.Geometry;for(var r=0,n=e.length;r<n;r++){var i=e[r];t.vertices.push(new THREE.Vector3(i.x,i.y,i.z||0))}return t}});THREE.Font=function(e){this.data=e};Object.assign(THREE.Font.prototype,{generateShapes:function(e,t,r){function n(e){var r=String(e).split("");var n=t/a.resolution;var o=0;var s=[];for(var c=0;c<r.length;c++){var u=i(r[c],n,o);o+=u.offset;s.push(u.path)}return s}function i(e,t,n){var i=a.glyphs[e]||a.glyphs["?"];if(!i)return;var o=new THREE.Path;var s=[],c=THREE.ShapeUtils.b2,u=THREE.ShapeUtils.b3;var l,h,f,d,p,E,m,v,g,T,y;if(i.o){var R=i._cachedOutline||(i._cachedOutline=i.o.split(" "));for(var x=0,H=R.length;x<H;){var b=R[x++];switch(b){case"m":l=R[x++]*t+n;h=R[x++]*t;o.moveTo(l,h);break;case"l":l=R[x++]*t+n;h=R[x++]*t;o.lineTo(l,h);break;case"q":f=R[x++]*t+n;d=R[x++]*t;m=R[x++]*t+n;v=R[x++]*t;o.quadraticCurveTo(m,v,f,d);y=s[s.length-1];if(y){p=y.x;E=y.y;for(var _=1;_<=r;_++){var M=_/r;c(M,p,m,f);c(M,E,v,d)}}break;case"b":f=R[x++]*t+n;d=R[x++]*t;m=R[x++]*t+n;v=R[x++]*t;g=R[x++]*t+n;T=R[x++]*t;o.bezierCurveTo(m,v,g,T,f,d);y=s[s.length-1];if(y){p=y.x;E=y.y;for(var _=1;_<=r;_++){var M=_/r;u(M,p,m,g,f);u(M,E,v,T,d)}}break}}}return{offset:i.ha*t,path:o}}if(t===undefined)t=100;if(r===undefined)r=4;var a=this.data;var o=n(e);var s=[];for(var c=0,u=o.length;c<u;c++){Array.prototype.push.apply(s,o[c].toShapes())}return s}});THREE.Path=function(e){THREE.CurvePath.call(this);this.actions=[];if(e){this.fromPoints(e)}};THREE.Path.prototype=Object.assign(Object.create(THREE.CurvePath.prototype),{constructor:THREE.Path,fromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++){this.lineTo(e[t].x,e[t].y)}},moveTo:function(e,t){this.actions.push({action:"moveTo",args:[e,t]})},lineTo:function(e,t){var r=this.actions[this.actions.length-1].args;var n=r[r.length-2];var i=r[r.length-1];var a=new THREE.LineCurve(new THREE.Vector2(n,i),new THREE.Vector2(e,t));this.curves.push(a);this.actions.push({action:"lineTo",args:[e,t]})},quadraticCurveTo:function(e,t,r,n){var i=this.actions[this.actions.length-1].args;var a=i[i.length-2];var o=i[i.length-1];var s=new THREE.QuadraticBezierCurve(new THREE.Vector2(a,o),new THREE.Vector2(e,t),new THREE.Vector2(r,n));this.curves.push(s);this.actions.push({action:"quadraticCurveTo",args:[e,t,r,n]})},bezierCurveTo:function(e,t,r,n,i,a){var o=this.actions[this.actions.length-1].args;var s=o[o.length-2];var c=o[o.length-1];var u=new THREE.CubicBezierCurve(new THREE.Vector2(s,c),new THREE.Vector2(e,t),new THREE.Vector2(r,n),new THREE.Vector2(i,a));this.curves.push(u);this.actions.push({action:"bezierCurveTo",args:[e,t,r,n,i,a]})},splineThru:function(e){var t=Array.prototype.slice.call(arguments);var r=this.actions[this.actions.length-1].args;var n=r[r.length-2];var i=r[r.length-1];var a=[new THREE.Vector2(n,i)];Array.prototype.push.apply(a,e);var o=new THREE.SplineCurve(a);this.curves.push(o);this.actions.push({action:"splineThru",args:t})},arc:function(e,t,r,n,i,a){var o=this.actions[this.actions.length-1].args;var s=o[o.length-2];var c=o[o.length-1];this.absarc(e+s,t+c,r,n,i,a)},absarc:function(e,t,r,n,i,a){this.absellipse(e,t,r,r,n,i,a)},ellipse:function(e,t,r,n,i,a,o,s){var c=this.actions[this.actions.length-1].args;var u=c[c.length-2];var l=c[c.length-1];this.absellipse(e+u,t+l,r,n,i,a,o,s)},absellipse:function(e,t,r,n,i,a,o,s){var c=[e,t,r,n,i,a,o,s||0];var u=new THREE.EllipseCurve(e,t,r,n,i,a,o,s);this.curves.push(u);var l=u.getPoint(1);c.push(l.x);c.push(l.y);this.actions.push({action:"ellipse",args:c})},getSpacedPoints:function(e){if(!e)e=40;var t=[];for(var r=0;r<e;r++){t.push(this.getPoint(r/e))}if(this.autoClose){t.push(t[0])}return t},getPoints:function(e){e=e||12;var t=THREE.ShapeUtils.b2;var r=THREE.ShapeUtils.b3;var n=[];var i,a,o,s,c,u,l,h,f,d,p;for(var E=0,m=this.actions.length;E<m;E++){var v=this.actions[E];var g=v.action;var T=v.args;switch(g){case"moveTo":n.push(new THREE.Vector2(T[0],T[1]));break;case"lineTo":n.push(new THREE.Vector2(T[0],T[1]));break;case"quadraticCurveTo":i=T[2];a=T[3];c=T[0];u=T[1];if(n.length>0){f=n[n.length-1];l=f.x;h=f.y}else{f=this.actions[E-1].args;l=f[f.length-2];h=f[f.length-1]}for(var y=1;y<=e;y++){var R=y/e;d=t(R,l,c,i);p=t(R,h,u,a);n.push(new THREE.Vector2(d,p))}break;case"bezierCurveTo":i=T[4];a=T[5];c=T[0];u=T[1];o=T[2];s=T[3];if(n.length>0){f=n[n.length-1];l=f.x;h=f.y}else{f=this.actions[E-1].args;l=f[f.length-2];h=f[f.length-1]}for(var y=1;y<=e;y++){var R=y/e;d=r(R,l,c,o,i);p=r(R,h,u,s,a);n.push(new THREE.Vector2(d,p))}break;case"splineThru":f=this.actions[E-1].args;var x=new THREE.Vector2(f[f.length-2],f[f.length-1]);var H=[x];var b=e*T[0].length;H=H.concat(T[0]);var _=new THREE.SplineCurve(H);for(var y=1;y<=b;y++){n.push(_.getPointAt(y/b))}break;case"arc":var M=T[0],w=T[1],S=T[2],L=T[3],A=T[4],C=!!T[5];var P=A-L;var I;var B=e*2;for(var y=1;y<=B;y++){var R=y/B;if(!C){R=1-R}I=L+R*P;d=M+S*Math.cos(I);p=w+S*Math.sin(I);n.push(new THREE.Vector2(d,p))}break;case"ellipse":var M=T[0],w=T[1],D=T[2],U=T[3],L=T[4],A=T[5],C=!!T[6],O=T[7];var P=A-L;var I;var B=e*2;var F,N;if(O!==0){F=Math.cos(O);N=Math.sin(O)}for(var y=1;y<=B;y++){var R=y/B;if(!C){R=1-R}I=L+R*P;d=M+D*Math.cos(I);p=w+U*Math.sin(I);if(O!==0){var V=d,G=p;d=(V-M)*F-(G-w)*N+M;p=(V-M)*N+(G-w)*F+w}n.push(new THREE.Vector2(d,p))}break}}var z=n[n.length-1];if(Math.abs(z.x-n[0].x)<Number.EPSILON&&Math.abs(z.y-n[0].y)<Number.EPSILON)n.splice(n.length-1,1);if(this.autoClose){n.push(n[0])}return n},toShapes:function(e,t){function r(e){var t=[],r=new THREE.Path;for(var n=0,i=e.length;n<i;n++){var a=e[n];var o=a.args;var s=a.action;if(s==="moveTo"){if(r.actions.length!==0){t.push(r);r=new THREE.Path}}r[s].apply(r,o)}if(r.actions.length!==0){t.push(r)}return t}function n(e){var t=[];for(var r=0,n=e.length;r<n;r++){var i=e[r];var a=new THREE.Shape;a.actions=i.actions;a.curves=i.curves;t.push(a)}return t}function i(e,t){var r=t.length;var n=false;for(var i=r-1,a=0;a<r;i=a++){var o=t[i];var s=t[a];var c=s.x-o.x;var u=s.y-o.y;if(Math.abs(u)>Number.EPSILON){if(u<0){o=t[a];c=-c;s=t[i];u=-u}if(e.y<o.y||e.y>s.y)continue;if(e.y===o.y){if(e.x===o.x)return true}else{var l=u*(e.x-o.x)-c*(e.y-o.y);if(l===0)return true;if(l<0)continue;n=!n}}else{if(e.y!==o.y)continue;if(s.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=s.x)return true}}return n}var a=THREE.ShapeUtils.isClockWise;var o=r(this.actions);if(o.length===0)return[];if(t===true)return n(o);var s,c,u,l=[];if(o.length===1){c=o[0];u=new THREE.Shape;u.actions=c.actions;u.curves=c.curves;l.push(u);return l}var h=!a(o[0].getPoints());h=e?!h:h;var f=[];var d=[];var p=[];var E=0;var m;d[E]=undefined;p[E]=[];for(var v=0,g=o.length;v<g;v++){c=o[v];m=c.getPoints();s=a(m);s=e?!s:s;if(s){if(!h&&d[E])E++;d[E]={s:new THREE.Shape,p:m};d[E].s.actions=c.actions;d[E].s.curves=c.curves;if(h)E++;p[E]=[]}else{p[E].push({h:c,p:m[0]})}}if(!d[0])return n(o);if(d.length>1){var T=false;var y=[];for(var R=0,x=d.length;R<x;R++){f[R]=[]}for(var R=0,x=d.length;R<x;R++){var H=p[R];for(var b=0;b<H.length;b++){var _=H[b];var M=true;for(var w=0;w<d.length;w++){if(i(_.p,d[w].p)){if(R!==w)y.push({froms:R,tos:w,hole:b});if(M){M=false;f[w].push(_)}else{T=true}}}if(M){f[R].push(_)}}}if(y.length>0){if(!T)p=f}}var S;for(var v=0,L=d.length;v<L;v++){u=d[v].s;l.push(u);S=p[v];for(var A=0,C=S.length;A<C;A++){u.holes.push(S[A].h)}}return l}});THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.assign(Object.create(THREE.Path.prototype),{constructor:THREE.Shape,extrude:function(e){return new THREE.ExtrudeGeometry(this,e)},makeGeometry:function(e){return new THREE.ShapeGeometry(this,e)},getPointsHoles:function(e){var t=[];for(var r=0,n=this.holes.length;r<n;r++){t[r]=this.holes[r].getPoints(e)}return t},extractAllPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},extractPoints:function(e){return this.extractAllPoints(e)}});THREE.LineCurve=function(e,t){this.v1=e;this.v2=t};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);t.multiplyScalar(e).add(this.v1);return t};THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)};THREE.LineCurve.prototype.getTangent=function(e){var t=this.v2.clone().sub(this.v1);return t.normalize()};THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e;this.v1=t;this.v2=r};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t=THREE.ShapeUtils.b2;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y))};THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t=THREE.CurveUtils.tangentQuadraticBezier;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y)).normalize()};THREE.CubicBezierCurve=function(e,t,r,n){this.v0=e;this.v1=t;this.v2=r;this.v3=n};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(e){var t=THREE.ShapeUtils.b3;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y))};THREE.CubicBezierCurve.prototype.getTangent=function(e){var t=THREE.CurveUtils.tangentCubicBezier;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()};THREE.SplineCurve=function(e){this.points=e==undefined?[]:e};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;THREE.SplineCurve.prototype.getPoint=function(e){var t=this.points;var r=(t.length-1)*e;var n=Math.floor(r);var i=r-n;var a=t[n===0?n:n-1];var o=t[n];var s=t[n>t.length-2?t.length-1:n+1];var c=t[n>t.length-3?t.length-1:n+2];var u=THREE.CurveUtils.interpolate;return new THREE.Vector2(u(a.x,o.x,s.x,c.x,i),u(a.y,o.y,s.y,c.y,i))};THREE.EllipseCurve=function(e,t,r,n,i,a,o,s){this.aX=e;this.aY=t;this.xRadius=r;this.yRadius=n;this.aStartAngle=i;this.aEndAngle=a;this.aClockwise=o;this.aRotation=s||0};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;if(t<0)t+=Math.PI*2;if(t>Math.PI*2)t-=Math.PI*2;var r;if(this.aClockwise===true){r=this.aEndAngle+(1-e)*(Math.PI*2-t)}else{r=this.aStartAngle+e*t}var n=this.aX+this.xRadius*Math.cos(r);var i=this.aY+this.yRadius*Math.sin(r);if(this.aRotation!==0){var a=Math.cos(this.aRotation);var o=Math.sin(this.aRotation);var s=n,c=i;n=(s-this.aX)*a-(c-this.aY)*o+this.aX;i=(s-this.aX)*o+(c-this.aY)*a+this.aY}return new THREE.Vector2(n,i)};THREE.ArcCurve=function(e,t,r,n,i,a){THREE.EllipseCurve.call(this,e,t,r,r,n,i,a)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e;this.v2=t},function(e){var t=new THREE.Vector3;t.subVectors(this.v2,this.v1);t.multiplyScalar(e);t.add(this.v1);return t});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e;this.v1=t;this.v2=r},function(e){var t=THREE.ShapeUtils.b2;return new THREE.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y),t(e,this.v0.z,this.v1.z,this.v2.z))});THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,n){this.v0=e;this.v1=t;this.v2=r;this.v3=n},function(e){var t=THREE.ShapeUtils.b3;return new THREE.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z))});THREE.SplineCurve3=THREE.Curve.create(function(e){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3");this.points=e==undefined?[]:e},function(e){var t=this.points;var r=(t.length-1)*e;var n=Math.floor(r);var i=r-n;var a=t[n==0?n:n-1];var o=t[n];var s=t[n>t.length-2?t.length-1:n+1];var c=t[n>t.length-3?t.length-1:n+2];var u=THREE.CurveUtils.interpolate;return new THREE.Vector3(u(a.x,o.x,s.x,c.x,i),u(a.y,o.y,s.y,c.y,i),u(a.z,o.z,s.z,c.z,i))});THREE.CatmullRomCurve3=function(){var e=new THREE.Vector3,t=new i,r=new i,n=new i;function i(){}i.prototype.init=function(e,t,r,n){this.c0=e;this.c1=r;this.c2=-3*e+3*t-2*r-n;this.c3=2*e-2*t+r+n};i.prototype.initNonuniformCatmullRom=function(e,t,r,n,i,a,o){var s=(t-e)/i-(r-e)/(i+a)+(r-t)/a;var c=(r-t)/a-(n-t)/(a+o)+(n-r)/o;s*=a;c*=a;this.init(t,r,s,c)};i.prototype.initCatmullRom=function(e,t,r,n,i){this.init(t,r,i*(r-e),i*(n-t))};i.prototype.calc=function(e){var t=e*e;var r=t*e;return this.c0+this.c1*e+this.c2*t+this.c3*r};return THREE.Curve.create(function(e){this.points=e||[];this.closed=false},function(i){var a=this.points,o,s,c,u;u=a.length;if(u<2)console.log("duh, you need at least 2 points");o=(u-(this.closed?0:1))*i;s=Math.floor(o);c=o-s;if(this.closed){s+=s>0?0:(Math.floor(Math.abs(s)/a.length)+1)*a.length}else if(c===0&&s===u-1){s=u-2;c=1}var l,h,f,d;if(this.closed||s>0){l=a[(s-1)%u]}else{e.subVectors(a[0],a[1]).add(a[0]);l=e}h=a[s%u];f=a[(s+1)%u];if(this.closed||s+2<u){d=a[(s+2)%u]}else{e.subVectors(a[u-1],a[u-2]).add(a[u-1]);d=e}if(this.type===undefined||this.type==="centripetal"||this.type==="chordal"){var p=this.type==="chordal"?.5:.25;var E=Math.pow(l.distanceToSquared(h),p);var m=Math.pow(h.distanceToSquared(f),p);var v=Math.pow(f.distanceToSquared(d),p);if(m<1e-4)m=1;if(E<1e-4)E=m;if(v<1e-4)v=m;t.initNonuniformCatmullRom(l.x,h.x,f.x,d.x,E,m,v);r.initNonuniformCatmullRom(l.y,h.y,f.y,d.y,E,m,v);n.initNonuniformCatmullRom(l.z,h.z,f.z,d.z,E,m,v)}else if(this.type==="catmullrom"){var g=this.tension!==undefined?this.tension:.5;t.initCatmullRom(l.x,h.x,f.x,d.x,g);r.initCatmullRom(l.y,h.y,f.y,d.y,g);n.initCatmullRom(l.z,h.z,f.z,d.z,g)}var T=new THREE.Vector3(t.calc(c),r.calc(c),n.calc(c));return T})}();THREE.ClosedSplineCurve3=function(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.");THREE.CatmullRomCurve3.call(this,e);this.type="catmullrom";this.closed=true};THREE.ClosedSplineCurve3.prototype=Object.create(THREE.CatmullRomCurve3.prototype);THREE.BoxGeometry=function(e,t,r,n,i,a){THREE.Geometry.call(this);this.type="BoxGeometry";this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:a};this.fromBufferGeometry(new THREE.BoxBufferGeometry(e,t,r,n,i,a));this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;THREE.CubeGeometry=THREE.BoxGeometry;THREE.BoxBufferGeometry=function(e,t,r,n,i,a){THREE.BufferGeometry.call(this);this.type="BoxBufferGeometry";this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:a};var o=this;n=Math.floor(n)||1;i=Math.floor(i)||1;a=Math.floor(a)||1;var s=g(n,i,a);var c=T(n,i,a);var u=new(c>65535?Uint32Array:Uint16Array)(c);var l=new Float32Array(s*3);var h=new Float32Array(s*3);var f=new Float32Array(s*2);var d=0;var p=0;var E=0;var m=0;var v=0;y("z","y","x",-1,-1,r,t,e,a,i,0);y("z","y","x",1,-1,r,t,-e,a,i,1);y("x","z","y",1,1,e,r,t,n,a,2);y("x","z","y",1,-1,e,r,-t,n,a,3);y("x","y","z",1,-1,e,t,r,n,i,4);y("x","y","z",-1,-1,e,t,-r,n,i,5);this.setIndex(new THREE.BufferAttribute(u,1));this.addAttribute("position",new THREE.BufferAttribute(l,3));this.addAttribute("normal",new THREE.BufferAttribute(h,3));this.addAttribute("uv",new THREE.BufferAttribute(f,2));function g(e,t,r){var n=0;n+=(e+1)*(t+1)*2;n+=(e+1)*(r+1)*2;n+=(r+1)*(t+1)*2;return n}function T(e,t,r){var n=0;n+=e*t*2;n+=e*r*2;n+=r*t*2;return n*6}function y(e,t,r,n,i,a,s,c,g,T,y){var R=a/g;var x=s/T;var H=a/2;var b=s/2;var _=c/2;var M=g+1;var w=T+1;var S=0;var L=0;var A=new THREE.Vector3;for(var C=0;C<w;C++){var P=C*x-b;for(var I=0;I<M;I++){var B=I*R-H;A[e]=B*n;A[t]=P*i;A[r]=_;l[d]=A.x;l[d+1]=A.y;l[d+2]=A.z;A[e]=0;A[t]=0;A[r]=c>0?1:-1;h[d]=A.x;h[d+1]=A.y;h[d+2]=A.z;f[p]=I/g;f[p+1]=1-C/T;d+=3;p+=2;S+=1}}for(C=0;C<T;C++){for(I=0;I<g;I++){var D=m+I+M*C;var U=m+I+M*(C+1);var O=m+(I+1)+M*(C+1);var F=m+(I+1)+M*C;u[E]=D;u[E+1]=U;u[E+2]=F;u[E+3]=U;u[E+4]=O;u[E+5]=F;E+=6;L+=6}}o.addGroup(v,L,y);v+=L;m+=S}};THREE.BoxBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.BoxBufferGeometry.prototype.constructor=THREE.BoxBufferGeometry;THREE.CircleGeometry=function(e,t,r,n){THREE.Geometry.call(this);this.type="CircleGeometry";this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n};this.fromBufferGeometry(new THREE.CircleBufferGeometry(e,t,r,n))};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;THREE.CircleBufferGeometry=function(e,t,r,n){THREE.BufferGeometry.call(this);this.type="CircleBufferGeometry";this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n};e=e||50;t=t!==undefined?Math.max(3,t):8;r=r!==undefined?r:0;n=n!==undefined?n:Math.PI*2;var i=t+2;var a=new Float32Array(i*3);var o=new Float32Array(i*3);var s=new Float32Array(i*2);o[2]=1;s[0]=.5;s[1]=.5;for(var c=0,u=3,l=2;c<=t;c++,u+=3,l+=2){var h=r+c/t*n;a[u]=e*Math.cos(h);a[u+1]=e*Math.sin(h);o[u+2]=1;s[l]=(a[u]/e+1)/2;s[l+1]=(a[u+1]/e+1)/2}var f=[];for(var u=1;u<=t;u++){f.push(u,u+1,0)}this.setIndex(new THREE.BufferAttribute(new Uint16Array(f),1));this.addAttribute("position",new THREE.BufferAttribute(a,3));this.addAttribute("normal",new THREE.BufferAttribute(o,3));this.addAttribute("uv",new THREE.BufferAttribute(s,2));this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)};THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry;THREE.CylinderBufferGeometry=function(e,t,r,n,i,a,o,s){THREE.BufferGeometry.call(this);this.type="CylinderBufferGeometry";this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};var c=this;e=e!==undefined?e:20;t=t!==undefined?t:20;r=r!==undefined?r:100;n=Math.floor(n)||8;i=Math.floor(i)||1;a=a!==undefined?a:false;o=o!==undefined?o:0;s=s!==undefined?s:2*Math.PI;var u=0;if(a===false){if(e>0)u++;if(t>0)u++}var l=R();var h=x();var f=new THREE.BufferAttribute(new(h>65535?Uint32Array:Uint16Array)(h),1);var d=new THREE.BufferAttribute(new Float32Array(l*3),3);var p=new THREE.BufferAttribute(new Float32Array(l*3),3);var E=new THREE.BufferAttribute(new Float32Array(l*2),2);var m=0,v=0,g=[],T=r/2;var y=0;H();if(a===false){if(e>0)b(true);if(t>0)b(false)}this.setIndex(f);this.addAttribute("position",d);this.addAttribute("normal",p);this.addAttribute("uv",E);function R(){var e=(n+1)*(i+1);if(a===false){e+=(n+1)*u+n*u}return e}function x(){var e=n*i*2*3;if(a===false){e+=n*u*3}return e}function H(){var a,u;var l=new THREE.Vector3;var h=new THREE.Vector3;var R=0;var x=(t-e)/r;for(u=0;u<=i;u++){var H=[];var b=u/i;var _=b*(t-e)+e;for(a=0;a<=n;a++){var M=a/n;h.x=_*Math.sin(M*s+o);h.y=-b*r+T;h.z=_*Math.cos(M*s+o);d.setXYZ(m,h.x,h.y,h.z);l.copy(h);if(e===0&&u===0||t===0&&u===i){l.x=Math.sin(M*s+o);l.z=Math.cos(M*s+o)}l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*x).normalize();p.setXYZ(m,l.x,l.y,l.z);E.setXY(m,M,1-b);H.push(m);m++}g.push(H)}for(a=0;a<n;a++){for(u=0;u<i;u++){var w=g[u][a];var S=g[u+1][a];var L=g[u+1][a+1];var A=g[u][a+1];f.setX(v,w);v++;f.setX(v,S);v++;f.setX(v,A);v++;f.setX(v,S);v++;f.setX(v,L);v++;f.setX(v,A);v++;R+=6}}c.addGroup(y,R,0);y+=R}function b(r){var i,a,u;var l=new THREE.Vector2;var h=new THREE.Vector3;var g=0;var R=r===true?e:t;var x=r===true?1:-1;a=m;for(i=1;i<=n;i++){d.setXYZ(m,0,T*x,0);p.setXYZ(m,0,x,0);l.x=.5;l.y=.5;E.setXY(m,l.x,l.y);m++}u=m;for(i=0;i<=n;i++){var H=i/n;var b=H*s+o;var _=Math.cos(b);var M=Math.sin(b);h.x=R*M;h.y=T*x;h.z=R*_;d.setXYZ(m,h.x,h.y,h.z);p.setXYZ(m,0,x,0);l.x=_*.5+.5;l.y=M*.5*x+.5;E.setXY(m,l.x,l.y);m++}for(i=0;i<n;i++){var w=a+i;var S=u+i;if(r===true){f.setX(v,S);v++;f.setX(v,S+1);v++;f.setX(v,w);v++}else{f.setX(v,S+1);v++;f.setX(v,S);v++;f.setX(v,w);v++}g+=3}c.addGroup(y,g,r===true?1:2);y+=g}};THREE.CylinderBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CylinderBufferGeometry.prototype.constructor=THREE.CylinderBufferGeometry;THREE.CylinderGeometry=function(e,t,r,n,i,a,o,s){THREE.Geometry.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};this.fromBufferGeometry(new THREE.CylinderBufferGeometry(e,t,r,n,i,a,o,s));this.mergeVertices()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.ConeBufferGeometry=function(e,t,r,n,i,a,o){THREE.CylinderBufferGeometry.call(this,0,e,t,r,n,i,a,o);this.type="ConeBufferGeometry";this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,thetaStart:a,thetaLength:o}};THREE.ConeBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.ConeBufferGeometry.prototype.constructor=THREE.ConeBufferGeometry;THREE.ConeGeometry=function(e,t,r,n,i,a,o){THREE.CylinderGeometry.call(this,0,e,t,r,n,i,a,o);this.type="ConeGeometry";this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:a,thetaLength:o}};THREE.ConeGeometry.prototype=Object.create(THREE.CylinderGeometry.prototype);THREE.ConeGeometry.prototype.constructor=THREE.ConeGeometry;THREE.EdgesGeometry=function(e,t){THREE.BufferGeometry.call(this);t=t!==undefined?t:1;var r=Math.cos(THREE.Math.DEG2RAD*t);var n=[0,0],i={};function a(e,t){return e-t}var o=["a","b","c"];var s;if(e instanceof THREE.BufferGeometry){s=new THREE.Geometry;s.fromBufferGeometry(e)}else{s=e.clone()}s.mergeVertices();s.computeFaceNormals();var c=s.vertices;var u=s.faces;for(var l=0,h=u.length;l<h;l++){var f=u[l];for(var d=0;d<3;d++){n[0]=f[o[d]];n[1]=f[o[(d+1)%3]];n.sort(a);var p=n.toString();if(i[p]===undefined){i[p]={vert1:n[0],vert2:n[1],face1:l,face2:undefined}}else{i[p].face2=l}}}var E=[];for(var p in i){var m=i[p];if(m.face2===undefined||u[m.face1].normal.dot(u[m.face2].normal)<=r){var v=c[m.vert1];E.push(v.x);E.push(v.y);E.push(v.z);v=c[m.vert2];E.push(v.x);E.push(v.y);E.push(v.z)}}this.addAttribute("position",new THREE.BufferAttribute(new Float32Array(E),3))};THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry;THREE.ExtrudeGeometry=function(e,t){if(typeof e==="undefined"){e=[];return}THREE.Geometry.call(this);this.type="ExtrudeGeometry";e=Array.isArray(e)?e:[e];this.addShapeList(e,t);this.computeFaceNormals()};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){var r=e.length;for(var n=0;n<r;n++){var i=e[n];this.addShape(i,t)}};THREE.ExtrudeGeometry.prototype.addShape=function(e,t){var r=t.amount!==undefined?t.amount:100;var n=t.bevelThickness!==undefined?t.bevelThickness:6;var i=t.bevelSize!==undefined?t.bevelSize:n-2;var a=t.bevelSegments!==undefined?t.bevelSegments:3;var o=t.bevelEnabled!==undefined?t.bevelEnabled:true;var s=t.curveSegments!==undefined?t.curveSegments:12;var c=t.steps!==undefined?t.steps:1;var u=t.extrudePath;var l,h=false;var f=t.UVGenerator!==undefined?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;var d,p,E,m;if(u){l=u.getSpacedPoints(c);h=true;o=false;d=t.frames!==undefined?t.frames:new THREE.TubeGeometry.FrenetFrames(u,c,false);p=new THREE.Vector3;E=new THREE.Vector3;m=new THREE.Vector3}if(!o){a=0;n=0;i=0}var v,g,T;var y=this;var R=this.vertices.length;var x=e.extractPoints(s);var H=x.shape;var b=x.holes;var _=!THREE.ShapeUtils.isClockWise(H);if(_){H=H.reverse();for(g=0,T=b.length;g<T;g++){v=b[g];if(THREE.ShapeUtils.isClockWise(v)){b[g]=v.reverse()}}_=false}var M=THREE.ShapeUtils.triangulateShape(H,b);var w=H;for(g=0,T=b.length;g<T;g++){v=b[g];H=H.concat(v)}function S(e,t,r){if(!t)console.error("THREE.ExtrudeGeometry: vec does not exist");return t.clone().multiplyScalar(r).add(e)}var L,A,C,P,I,B=H.length,D,U=M.length;function O(e,t,r){var n,i,a=1;var o=e.x-t.x,s=e.y-t.y;var c=r.x-e.x,u=r.y-e.y;var l=o*o+s*s;var h=o*u-s*c;if(Math.abs(h)>Number.EPSILON){var f=Math.sqrt(l);var d=Math.sqrt(c*c+u*u);var p=t.x-s/f;var E=t.y+o/f;var m=r.x-u/d;var v=r.y+c/d;var g=((m-p)*u-(v-E)*c)/(o*u-s*c);n=p+o*g-e.x;i=E+s*g-e.y;var T=n*n+i*i;if(T<=2){return new THREE.Vector2(n,i)}else{a=Math.sqrt(T/2)}}else{var y=false;if(o>Number.EPSILON){if(c>Number.EPSILON){y=true}}else{if(o<-Number.EPSILON){if(c<-Number.EPSILON){y=true}}else{if(Math.sign(s)===Math.sign(u)){y=true}}}if(y){n=-s;i=o;a=Math.sqrt(l)}else{n=o;i=s;a=Math.sqrt(l/2)}}return new THREE.Vector2(n/a,i/a)}var F=[];for(var N=0,V=w.length,G=V-1,z=N+1;N<V;N++,G++,z++){if(G===V)G=0;if(z===V)z=0;F[N]=O(w[N],w[G],w[z])}var k=[],j,W=F.concat();for(g=0,T=b.length;g<T;g++){v=b[g];j=[];for(N=0,V=v.length,G=V-1,z=N+1;N<V;N++,G++,z++){if(G===V)G=0;if(z===V)z=0;j[N]=O(v[N],v[G],v[z])}k.push(j);W=W.concat(j)}for(L=0;L<a;L++){C=L/a;P=n*(1-C);A=i*Math.sin(C*Math.PI/2);for(N=0,V=w.length;N<V;N++){I=S(w[N],F[N],A);K(I.x,I.y,-P)}for(g=0,T=b.length;g<T;g++){v=b[g];j=k[g];for(N=0,V=v.length;N<V;N++){I=S(v[N],j[N],A);K(I.x,I.y,-P)}}}A=i;for(N=0;N<B;N++){I=o?S(H[N],W[N],A):H[N];if(!h){K(I.x,I.y,0)}else{E.copy(d.normals[0]).multiplyScalar(I.x);p.copy(d.binormals[0]).multiplyScalar(I.y);m.copy(l[0]).add(E).add(p);K(m.x,m.y,m.z)}}var X;for(X=1;X<=c;X++){for(N=0;N<B;N++){I=o?S(H[N],W[N],A):H[N];if(!h){K(I.x,I.y,r/c*X)}else{E.copy(d.normals[X]).multiplyScalar(I.x);p.copy(d.binormals[X]).multiplyScalar(I.y);m.copy(l[X]).add(E).add(p);K(m.x,m.y,m.z)}}}for(L=a-1;L>=0;L--){C=L/a;P=n*(1-C);A=i*Math.sin(C*Math.PI/2);for(N=0,V=w.length;N<V;N++){I=S(w[N],F[N],A);K(I.x,I.y,r+P)}for(g=0,T=b.length;g<T;g++){v=b[g];j=k[g];for(N=0,V=v.length;N<V;N++){I=S(v[N],j[N],A);if(!h){K(I.x,I.y,r+P)}else{K(I.x,I.y+l[c-1].y,l[c-1].x+P)}}}}Y();q();function Y(){if(o){var e=0;var t=B*e;for(N=0;N<U;N++){D=M[N];Q(D[2]+t,D[1]+t,D[0]+t)}e=c+a*2;t=B*e;for(N=0;N<U;N++){D=M[N];Q(D[0]+t,D[1]+t,D[2]+t)}}else{for(N=0;N<U;N++){D=M[N];Q(D[2],D[1],D[0])}for(N=0;N<U;N++){D=M[N];Q(D[0]+B*c,D[1]+B*c,D[2]+B*c)}}}function q(){var e=0;Z(w,e);e+=w.length;for(g=0,T=b.length;g<T;g++){v=b[g];Z(v,e);e+=v.length}}function Z(e,t){var r,n;N=e.length;while(--N>=0){r=N;n=N-1;if(n<0)n=e.length-1;var i=0,o=c+a*2;for(i=0;i<o;i++){var s=B*i;var u=B*(i+1);var l=t+r+s,h=t+n+s,f=t+n+u,d=t+r+u;J(l,h,f,d,e,i,o,r,n)}}}function K(e,t,r){y.vertices.push(new THREE.Vector3(e,t,r))}function Q(e,t,r){e+=R;t+=R;r+=R;y.faces.push(new THREE.Face3(e,t,r,null,null,0));var n=f.generateTopUV(y,e,t,r);y.faceVertexUvs[0].push(n)}function J(e,t,r,n,i,a,o,s,c){e+=R;t+=R;r+=R;n+=R;y.faces.push(new THREE.Face3(e,t,n,null,null,1));
y.faces.push(new THREE.Face3(t,r,n,null,null,1));var u=f.generateSideWallUV(y,e,t,r,n);y.faceVertexUvs[0].push([u[0],u[1],u[3]]);y.faceVertexUvs[0].push([u[1],u[2],u[3]])}};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,n){var i=e.vertices;var a=i[t];var o=i[r];var s=i[n];return[new THREE.Vector2(a.x,a.y),new THREE.Vector2(o.x,o.y),new THREE.Vector2(s.x,s.y)]},generateSideWallUV:function(e,t,r,n,i){var a=e.vertices;var o=a[t];var s=a[r];var c=a[n];var u=a[i];if(Math.abs(o.y-s.y)<.01){return[new THREE.Vector2(o.x,1-o.z),new THREE.Vector2(s.x,1-s.z),new THREE.Vector2(c.x,1-c.z),new THREE.Vector2(u.x,1-u.z)]}else{return[new THREE.Vector2(o.y,1-o.z),new THREE.Vector2(s.y,1-s.z),new THREE.Vector2(c.y,1-c.z),new THREE.Vector2(u.y,1-u.z)]}}};THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this);this.type="ShapeGeometry";if(Array.isArray(e)===false)e=[e];this.addShapeList(e,t);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,n=e.length;r<n;r++){this.addShape(e[r],t)}return this};THREE.ShapeGeometry.prototype.addShape=function(e,t){if(t===undefined)t={};var r=t.curveSegments!==undefined?t.curveSegments:12;var n=t.material;var i=t.UVGenerator===undefined?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator;var a,o,s;var c=this.vertices.length;var u=e.extractPoints(r);var l=u.shape;var h=u.holes;var f=!THREE.ShapeUtils.isClockWise(l);if(f){l=l.reverse();for(a=0,o=h.length;a<o;a++){s=h[a];if(THREE.ShapeUtils.isClockWise(s)){h[a]=s.reverse()}}f=false}var d=THREE.ShapeUtils.triangulateShape(l,h);for(a=0,o=h.length;a<o;a++){s=h[a];l=l.concat(s)}var p,E=l.length;var m,v=d.length;for(a=0;a<E;a++){p=l[a];this.vertices.push(new THREE.Vector3(p.x,p.y,0))}for(a=0;a<v;a++){m=d[a];var g=m[0]+c;var T=m[1]+c;var y=m[2]+c;this.faces.push(new THREE.Face3(g,T,y,null,null,n));this.faceVertexUvs[0].push(i.generateTopUV(this,g,T,y))}};THREE.LatheBufferGeometry=function(e,t,r,n){THREE.BufferGeometry.call(this);this.type="LatheBufferGeometry";this.parameters={points:e,segments:t,phiStart:r,phiLength:n};t=Math.floor(t)||12;r=r||0;n=n||Math.PI*2;n=THREE.Math.clamp(n,0,Math.PI*2);var i=(t+1)*e.length;var a=t*e.length*2*3;var o=new THREE.BufferAttribute(new(a>65535?Uint32Array:Uint16Array)(a),1);var s=new THREE.BufferAttribute(new Float32Array(i*3),3);var c=new THREE.BufferAttribute(new Float32Array(i*2),2);var u=0,l=0,h;var f=1/(e.length-1);var d=1/t;var p=new THREE.Vector3;var E=new THREE.Vector2;var m,v;for(m=0;m<=t;m++){var g=r+m*d*n;var T=Math.sin(g);var y=Math.cos(g);for(v=0;v<=e.length-1;v++){p.x=e[v].x*T;p.y=e[v].y;p.z=e[v].x*y;s.setXYZ(u,p.x,p.y,p.z);E.x=m/t;E.y=v/(e.length-1);c.setXY(u,E.x,E.y);u++}}for(m=0;m<t;m++){for(v=0;v<e.length-1;v++){h=v+m*e.length;var R=h;var x=h+e.length;var H=h+e.length+1;var b=h+1;o.setX(l,R);l++;o.setX(l,x);l++;o.setX(l,b);l++;o.setX(l,x);l++;o.setX(l,H);l++;o.setX(l,b);l++}}this.setIndex(o);this.addAttribute("position",s);this.addAttribute("uv",c);this.computeVertexNormals();if(n===Math.PI*2){var _=this.attributes.normal.array;var M=new THREE.Vector3;var w=new THREE.Vector3;var S=new THREE.Vector3;h=t*e.length*3;for(m=0,v=0;m<e.length;m++,v+=3){M.x=_[v+0];M.y=_[v+1];M.z=_[v+2];w.x=_[h+v+0];w.y=_[h+v+1];w.z=_[h+v+2];S.addVectors(M,w).normalize();_[v+0]=_[h+v+0]=S.x;_[v+1]=_[h+v+1]=S.y;_[v+2]=_[h+v+2]=S.z}}};THREE.LatheBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.LatheBufferGeometry.prototype.constructor=THREE.LatheBufferGeometry;THREE.LatheGeometry=function(e,t,r,n){THREE.Geometry.call(this);this.type="LatheGeometry";this.parameters={points:e,segments:t,phiStart:r,phiLength:n};this.fromBufferGeometry(new THREE.LatheBufferGeometry(e,t,r,n));this.mergeVertices()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;THREE.PlaneGeometry=function(e,t,r,n){THREE.Geometry.call(this);this.type="PlaneGeometry";this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(e,t,r,n))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;THREE.PlaneBufferGeometry=function(e,t,r,n){THREE.BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};var i=e/2;var a=t/2;var o=Math.floor(r)||1;var s=Math.floor(n)||1;var c=o+1;var u=s+1;var l=e/o;var h=t/s;var f=new Float32Array(c*u*3);var d=new Float32Array(c*u*3);var p=new Float32Array(c*u*2);var E=0;var m=0;for(var v=0;v<u;v++){var g=v*h-a;for(var T=0;T<c;T++){var y=T*l-i;f[E]=y;f[E+1]=-g;d[E+2]=1;p[m]=T/o;p[m+1]=1-v/s;E+=3;m+=2}}E=0;var R=new(f.length/3>65535?Uint32Array:Uint16Array)(o*s*6);for(var v=0;v<s;v++){for(var T=0;T<o;T++){var x=T+c*v;var H=T+c*(v+1);var b=T+1+c*(v+1);var _=T+1+c*v;R[E]=x;R[E+1]=H;R[E+2]=_;R[E+3]=H;R[E+4]=b;R[E+5]=_;E+=6}}this.setIndex(new THREE.BufferAttribute(R,1));this.addAttribute("position",new THREE.BufferAttribute(f,3));this.addAttribute("normal",new THREE.BufferAttribute(d,3));this.addAttribute("uv",new THREE.BufferAttribute(p,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;THREE.RingBufferGeometry=function(e,t,r,n,i,a){THREE.BufferGeometry.call(this);this.type="RingBufferGeometry";this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:a};e=e||20;t=t||50;i=i!==undefined?i:0;a=a!==undefined?a:Math.PI*2;r=r!==undefined?Math.max(3,r):8;n=n!==undefined?Math.max(1,n):1;var o=(r+1)*(n+1);var s=r*n*2*3;var c=new THREE.BufferAttribute(new(s>65535?Uint32Array:Uint16Array)(s),1);var u=new THREE.BufferAttribute(new Float32Array(o*3),3);var l=new THREE.BufferAttribute(new Float32Array(o*3),3);var h=new THREE.BufferAttribute(new Float32Array(o*2),2);var f=0,d=0,p;var E=e;var m=(t-e)/n;var v=new THREE.Vector3;var g=new THREE.Vector2;var T,y;for(T=0;T<=n;T++){for(y=0;y<=r;y++){p=i+y/r*a;v.x=E*Math.cos(p);v.y=E*Math.sin(p);u.setXYZ(f,v.x,v.y,v.z);l.setXYZ(f,0,0,1);g.x=(v.x/t+1)/2;g.y=(v.y/t+1)/2;h.setXY(f,g.x,g.y);f++}E+=m}for(T=0;T<n;T++){var R=T*(r+1);for(y=0;y<r;y++){p=y+R;var x=p;var H=p+r+1;var b=p+r+2;var _=p+1;c.setX(d,x);d++;c.setX(d,H);d++;c.setX(d,b);d++;c.setX(d,x);d++;c.setX(d,b);d++;c.setX(d,_);d++}}this.setIndex(c);this.addAttribute("position",u);this.addAttribute("normal",l);this.addAttribute("uv",h)};THREE.RingBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.RingBufferGeometry.prototype.constructor=THREE.RingBufferGeometry;THREE.RingGeometry=function(e,t,r,n,i,a){THREE.Geometry.call(this);this.type="RingGeometry";this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:a};this.fromBufferGeometry(new THREE.RingBufferGeometry(e,t,r,n,i,a))};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;THREE.SphereGeometry=function(e,t,r,n,i,a,o){THREE.Geometry.call(this);this.type="SphereGeometry";this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:a,thetaLength:o};this.fromBufferGeometry(new THREE.SphereBufferGeometry(e,t,r,n,i,a,o))};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;THREE.SphereBufferGeometry=function(e,t,r,n,i,a,o){THREE.BufferGeometry.call(this);this.type="SphereBufferGeometry";this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:a,thetaLength:o};e=e||50;t=Math.max(3,Math.floor(t)||8);r=Math.max(2,Math.floor(r)||6);n=n!==undefined?n:0;i=i!==undefined?i:Math.PI*2;a=a!==undefined?a:0;o=o!==undefined?o:Math.PI;var s=a+o;var c=(t+1)*(r+1);var u=new THREE.BufferAttribute(new Float32Array(c*3),3);var l=new THREE.BufferAttribute(new Float32Array(c*3),3);var h=new THREE.BufferAttribute(new Float32Array(c*2),2);var f=0,d=[],p=new THREE.Vector3;for(var E=0;E<=r;E++){var m=[];var v=E/r;for(var g=0;g<=t;g++){var T=g/t;var y=-e*Math.cos(n+T*i)*Math.sin(a+v*o);var R=e*Math.cos(a+v*o);var x=e*Math.sin(n+T*i)*Math.sin(a+v*o);p.set(y,R,x).normalize();u.setXYZ(f,y,R,x);l.setXYZ(f,p.x,p.y,p.z);h.setXY(f,T,1-v);m.push(f);f++}d.push(m)}var H=[];for(var E=0;E<r;E++){for(var g=0;g<t;g++){var b=d[E][g+1];var _=d[E][g];var M=d[E+1][g];var w=d[E+1][g+1];if(E!==0||a>0)H.push(b,_,w);if(E!==r-1||s<Math.PI)H.push(_,M,w)}}this.setIndex(new(u.count>65535?THREE.Uint32Attribute:THREE.Uint16Attribute)(H,1));this.addAttribute("position",u);this.addAttribute("normal",l);this.addAttribute("uv",h);this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)};THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry;THREE.TextGeometry=function(e,t){t=t||{};var r=t.font;if(r instanceof THREE.Font===false){console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font.");return new THREE.Geometry}var n=r.generateShapes(e,t.size,t.curveSegments);t.amount=t.height!==undefined?t.height:50;if(t.bevelThickness===undefined)t.bevelThickness=10;if(t.bevelSize===undefined)t.bevelSize=8;if(t.bevelEnabled===undefined)t.bevelEnabled=false;THREE.ExtrudeGeometry.call(this,n,t);this.type="TextGeometry"};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;THREE.TorusBufferGeometry=function(e,t,r,n,i){THREE.BufferGeometry.call(this);this.type="TorusBufferGeometry";this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i};e=e||100;t=t||40;r=Math.floor(r)||8;n=Math.floor(n)||6;i=i||Math.PI*2;var a=(r+1)*(n+1);var o=r*n*2*3;var s=new(o>65535?Uint32Array:Uint16Array)(o);var c=new Float32Array(a*3);var u=new Float32Array(a*3);var l=new Float32Array(a*2);var h=0;var f=0;var d=0;var p=new THREE.Vector3;var E=new THREE.Vector3;var m=new THREE.Vector3;var v,g;for(v=0;v<=r;v++){for(g=0;g<=n;g++){var T=g/n*i;var y=v/r*Math.PI*2;E.x=(e+t*Math.cos(y))*Math.cos(T);E.y=(e+t*Math.cos(y))*Math.sin(T);E.z=t*Math.sin(y);c[h]=E.x;c[h+1]=E.y;c[h+2]=E.z;p.x=e*Math.cos(T);p.y=e*Math.sin(T);m.subVectors(E,p).normalize();u[h]=m.x;u[h+1]=m.y;u[h+2]=m.z;l[f]=g/n;l[f+1]=v/r;h+=3;f+=2}}for(v=1;v<=r;v++){for(g=1;g<=n;g++){var R=(n+1)*v+g-1;var x=(n+1)*(v-1)+g-1;var H=(n+1)*(v-1)+g;var b=(n+1)*v+g;s[d]=R;s[d+1]=x;s[d+2]=b;s[d+3]=x;s[d+4]=H;s[d+5]=b;d+=6}}this.setIndex(new THREE.BufferAttribute(s,1));this.addAttribute("position",new THREE.BufferAttribute(c,3));this.addAttribute("normal",new THREE.BufferAttribute(u,3));this.addAttribute("uv",new THREE.BufferAttribute(l,2))};THREE.TorusBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.TorusBufferGeometry.prototype.constructor=THREE.TorusBufferGeometry;THREE.TorusGeometry=function(e,t,r,n,i){THREE.Geometry.call(this);this.type="TorusGeometry";this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i};this.fromBufferGeometry(new THREE.TorusBufferGeometry(e,t,r,n,i))};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;THREE.TorusKnotBufferGeometry=function(e,t,r,n,i,a){THREE.BufferGeometry.call(this);this.type="TorusKnotBufferGeometry";this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:a};e=e||100;t=t||40;r=Math.floor(r)||64;n=Math.floor(n)||8;i=i||2;a=a||3;var o=(n+1)*(r+1);var s=n*r*2*3;var c=new THREE.BufferAttribute(new(s>65535?Uint32Array:Uint16Array)(s),1);var u=new THREE.BufferAttribute(new Float32Array(o*3),3);var l=new THREE.BufferAttribute(new Float32Array(o*3),3);var h=new THREE.BufferAttribute(new Float32Array(o*2),2);var f,d,p=0,E=0;var m=new THREE.Vector3;var v=new THREE.Vector3;var g=new THREE.Vector2;var T=new THREE.Vector3;var y=new THREE.Vector3;var R=new THREE.Vector3;var x=new THREE.Vector3;var H=new THREE.Vector3;for(f=0;f<=r;++f){var b=f/r*i*Math.PI*2;P(b,i,a,e,T);P(b+.01,i,a,e,y);x.subVectors(y,T);H.addVectors(y,T);R.crossVectors(x,H);H.crossVectors(R,x);R.normalize();H.normalize();for(d=0;d<=n;++d){var _=d/n*Math.PI*2;var M=-t*Math.cos(_);var w=t*Math.sin(_);m.x=T.x+(M*H.x+w*R.x);m.y=T.y+(M*H.y+w*R.y);m.z=T.z+(M*H.z+w*R.z);u.setXYZ(p,m.x,m.y,m.z);v.subVectors(m,T).normalize();l.setXYZ(p,v.x,v.y,v.z);g.x=f/r;g.y=d/n;h.setXY(p,g.x,g.y);p++}}for(d=1;d<=r;d++){for(f=1;f<=n;f++){var S=(n+1)*(d-1)+(f-1);var L=(n+1)*d+(f-1);var A=(n+1)*d+f;var C=(n+1)*(d-1)+f;c.setX(E,S);E++;c.setX(E,L);E++;c.setX(E,C);E++;c.setX(E,L);E++;c.setX(E,A);E++;c.setX(E,C);E++}}this.setIndex(c);this.addAttribute("position",u);this.addAttribute("normal",l);this.addAttribute("uv",h);function P(e,t,r,n,i){var a=Math.cos(e);var o=Math.sin(e);var s=r/t*e;var c=Math.cos(s);i.x=n*(2+c)*.5*a;i.y=n*(2+c)*o*.5;i.z=n*Math.sin(s)*.5}};THREE.TorusKnotBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.TorusKnotBufferGeometry.prototype.constructor=THREE.TorusKnotBufferGeometry;THREE.TorusKnotGeometry=function(e,t,r,n,i,a,o){THREE.Geometry.call(this);this.type="TorusKnotGeometry";this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:a};if(o!==undefined)console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(e,t,r,n,i,a));this.mergeVertices()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;THREE.TubeGeometry=function(e,t,r,n,i,a){THREE.Geometry.call(this);this.type="TubeGeometry";this.parameters={path:e,segments:t,radius:r,radialSegments:n,closed:i,taper:a};t=t||64;r=r||1;n=n||8;i=i||false;a=a||THREE.TubeGeometry.NoTaper;var o=[];var s=this,c,u,l,h=t+1,f,d,p,E,m,v,g=new THREE.Vector3,T,y,R,x,H,b,_,M,w,S,L,A;var C=new THREE.TubeGeometry.FrenetFrames(e,t,i),P=C.tangents,I=C.normals,B=C.binormals;this.tangents=P;this.normals=I;this.binormals=B;function D(e,t,r){return s.vertices.push(new THREE.Vector3(e,t,r))-1}for(T=0;T<h;T++){o[T]=[];f=T/(h-1);v=e.getPointAt(f);c=P[T];u=I[T];l=B[T];p=r*a(f);for(y=0;y<n;y++){d=y/n*2*Math.PI;E=-p*Math.cos(d);m=p*Math.sin(d);g.copy(v);g.x+=E*u.x+m*l.x;g.y+=E*u.y+m*l.y;g.z+=E*u.z+m*l.z;o[T][y]=D(g.x,g.y,g.z)}}for(T=0;T<t;T++){for(y=0;y<n;y++){R=i?(T+1)%t:T+1;x=(y+1)%n;H=o[T][y];b=o[R][y];_=o[R][x];M=o[T][x];w=new THREE.Vector2(T/t,y/n);S=new THREE.Vector2((T+1)/t,y/n);L=new THREE.Vector2((T+1)/t,(y+1)/n);A=new THREE.Vector2(T/t,(y+1)/n);this.faces.push(new THREE.Face3(H,b,M));this.faceVertexUvs[0].push([w,S,A]);this.faces.push(new THREE.Face3(b,_,M));this.faceVertexUvs[0].push([S.clone(),L,A.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(e){return 1};THREE.TubeGeometry.SinusoidalTaper=function(e){return Math.sin(Math.PI*e)};THREE.TubeGeometry.FrenetFrames=function(e,t,r){var n=new THREE.Vector3,i=[],a=[],o=[],s=new THREE.Vector3,c=new THREE.Matrix4,u=t+1,l,h,f,d,p,E,m;this.tangents=i;this.normals=a;this.binormals=o;for(E=0;E<u;E++){m=E/(u-1);i[E]=e.getTangentAt(m);i[E].normalize()}v();function v(){a[0]=new THREE.Vector3;o[0]=new THREE.Vector3;h=Number.MAX_VALUE;f=Math.abs(i[0].x);d=Math.abs(i[0].y);p=Math.abs(i[0].z);if(f<=h){h=f;n.set(1,0,0)}if(d<=h){h=d;n.set(0,1,0)}if(p<=h){n.set(0,0,1)}s.crossVectors(i[0],n).normalize();a[0].crossVectors(i[0],s);o[0].crossVectors(i[0],a[0])}for(E=1;E<u;E++){a[E]=a[E-1].clone();o[E]=o[E-1].clone();s.crossVectors(i[E-1],i[E]);if(s.length()>Number.EPSILON){s.normalize();l=Math.acos(THREE.Math.clamp(i[E-1].dot(i[E]),-1,1));a[E].applyMatrix4(c.makeRotationAxis(s,l))}o[E].crossVectors(i[E],a[E])}if(r){l=Math.acos(THREE.Math.clamp(a[0].dot(a[u-1]),-1,1));l/=u-1;if(i[0].dot(s.crossVectors(a[0],a[u-1]))>0){l=-l}for(E=1;E<u;E++){a[E].applyMatrix4(c.makeRotationAxis(i[E],l*E));o[E].crossVectors(i[E],a[E])}}};THREE.PolyhedronGeometry=function(e,t,r,n){THREE.Geometry.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:e,indices:t,radius:r,detail:n};r=r||1;n=n||0;var i=this;for(var a=0,o=e.length;a<o;a+=3){y(new THREE.Vector3(e[a],e[a+1],e[a+2]))}var s=this.vertices;var c=[];for(var a=0,u=0,o=t.length;a<o;a+=3,u++){var l=s[t[a]];var h=s[t[a+1]];var f=s[t[a+2]];c[u]=new THREE.Face3(l.index,h.index,f.index,[l.clone(),h.clone(),f.clone()],undefined,u)}var d=new THREE.Vector3;for(var a=0,o=c.length;a<o;a++){x(c[a],n)}for(var a=0,o=this.faceVertexUvs[0].length;a<o;a++){var p=this.faceVertexUvs[0][a];var E=p[0].x;var m=p[1].x;var v=p[2].x;var g=Math.max(E,m,v);var T=Math.min(E,m,v);if(g>.9&&T<.1){if(E<.2)p[0].x+=1;if(m<.2)p[1].x+=1;if(v<.2)p[2].x+=1}}for(var a=0,o=this.vertices.length;a<o;a++){this.vertices[a].multiplyScalar(r)}this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r);function y(e){var t=e.normalize().clone();t.index=i.vertices.push(t)-1;var r=H(e)/2/Math.PI+.5;var n=b(e)/Math.PI+.5;t.uv=new THREE.Vector2(r,1-n);return t}function R(e,t,r,n){var a=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()],undefined,n);i.faces.push(a);d.copy(e).add(t).add(r).divideScalar(3);var o=H(d);i.faceVertexUvs[0].push([_(e.uv,e,o),_(t.uv,t,o),_(r.uv,r,o)])}function x(e,t){var r=Math.pow(2,t);var n=y(i.vertices[e.a]);var a=y(i.vertices[e.b]);var o=y(i.vertices[e.c]);var s=[];var c=e.materialIndex;for(var u=0;u<=r;u++){s[u]=[];var l=y(n.clone().lerp(o,u/r));var h=y(a.clone().lerp(o,u/r));var f=r-u;for(var d=0;d<=f;d++){if(d===0&&u===r){s[u][d]=l}else{s[u][d]=y(l.clone().lerp(h,d/f))}}}for(var u=0;u<r;u++){for(var d=0;d<2*(r-u)-1;d++){var p=Math.floor(d/2);if(d%2===0){R(s[u][p+1],s[u+1][p],s[u][p],c)}else{R(s[u][p+1],s[u+1][p+1],s[u+1][p],c)}}}}function H(e){return Math.atan2(e.z,-e.x)}function b(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}function _(e,t,r){if(r<0&&e.x===1)e=new THREE.Vector2(e.x-1,e.y);if(t.x===0&&t.z===0)e=new THREE.Vector2(r/2/Math.PI+.5,e.y);return e.clone()}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;THREE.DodecahedronGeometry=function(e,t){var r=(1+Math.sqrt(5))/2;var n=1/r;var i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n];var a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];THREE.PolyhedronGeometry.call(this,i,a,e,t);this.type="DodecahedronGeometry";this.parameters={radius:e,detail:t}};THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;THREE.IcosahedronGeometry=function(e,t){var r=(1+Math.sqrt(5))/2;var n=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1];var i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];THREE.PolyhedronGeometry.call(this,n,i,e,t);this.type="IcosahedronGeometry";this.parameters={radius:e,detail:t}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(e,t){var r=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];var n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];THREE.PolyhedronGeometry.call(this,r,n,e,t);this.type="OctahedronGeometry";this.parameters={radius:e,detail:t}};THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;THREE.TetrahedronGeometry=function(e,t){var r=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];var n=[2,1,0,0,3,2,1,3,0,2,3,1];THREE.PolyhedronGeometry.call(this,r,n,e,t);this.type="TetrahedronGeometry";this.parameters={radius:e,detail:t}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;THREE.ParametricGeometry=function(e,t,r){THREE.Geometry.call(this);this.type="ParametricGeometry";this.parameters={func:e,slices:t,stacks:r};var n=this.vertices;var i=this.faces;var a=this.faceVertexUvs[0];var o,s,c;var u,l;var h=t+1;for(o=0;o<=r;o++){l=o/r;for(s=0;s<=t;s++){u=s/t;c=e(u,l);n.push(c)}}var f,d,p,E;var m,v,g,T;for(o=0;o<r;o++){for(s=0;s<t;s++){f=o*h+s;d=o*h+s+1;p=(o+1)*h+s+1;E=(o+1)*h+s;m=new THREE.Vector2(s/t,o/r);v=new THREE.Vector2((s+1)/t,o/r);g=new THREE.Vector2((s+1)/t,(o+1)/r);T=new THREE.Vector2(s/t,(o+1)/r);i.push(new THREE.Face3(f,d,E));a.push([m,v,T]);i.push(new THREE.Face3(d,p,E));a.push([v.clone(),g,T.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;THREE.WireframeGeometry=function(e){THREE.BufferGeometry.call(this);var t=[0,0],r={};function n(e,t){return e-t}var i=["a","b","c"];if(e instanceof THREE.Geometry){var a=e.vertices;var o=e.faces;var s=0;var c=new Uint32Array(6*o.length);for(var u=0,l=o.length;u<l;u++){var h=o[u];for(var f=0;f<3;f++){t[0]=h[i[f]];t[1]=h[i[(f+1)%3]];t.sort(n);var d=t.toString();if(r[d]===undefined){c[2*s]=t[0];c[2*s+1]=t[1];r[d]=true;s++}}}var p=new Float32Array(s*2*3);for(var u=0,l=s;u<l;u++){for(var f=0;f<2;f++){var E=a[c[2*u+f]];var m=6*u+3*f;p[m+0]=E.x;p[m+1]=E.y;p[m+2]=E.z}}this.addAttribute("position",new THREE.BufferAttribute(p,3))}else if(e instanceof THREE.BufferGeometry){if(e.index!==null){var v=e.index.array;var a=e.attributes.position;var g=e.groups;var s=0;if(g.length===0){e.addGroup(0,v.length)}var c=new Uint32Array(2*v.length);for(var T=0,y=g.length;T<y;++T){var R=g[T];var x=R.start;var H=R.count;for(var u=x,b=x+H;u<b;u+=3){for(var f=0;f<3;f++){t[0]=v[u+f];t[1]=v[u+(f+1)%3];t.sort(n);var d=t.toString();if(r[d]===undefined){c[2*s]=t[0];c[2*s+1]=t[1];r[d]=true;s++}}}}var p=new Float32Array(s*2*3);for(var u=0,l=s;u<l;u++){for(var f=0;f<2;f++){var m=6*u+3*f;var _=c[2*u+f];p[m+0]=a.getX(_);p[m+1]=a.getY(_);p[m+2]=a.getZ(_)}}this.addAttribute("position",new THREE.BufferAttribute(p,3))}else{var a=e.attributes.position.array;var s=a.length/3;var M=s/3;var p=new Float32Array(s*2*3);for(var u=0,l=M;u<l;u++){for(var f=0;f<3;f++){var m=18*u+6*f;var w=9*u+3*f;p[m+0]=a[w];p[m+1]=a[w+1];p[m+2]=a[w+2];var _=9*u+3*((f+1)%3);p[m+3]=a[_];p[m+4]=a[_+1];p[m+5]=a[_+2]}}this.addAttribute("position",new THREE.BufferAttribute(p,3))}}};THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry;THREE.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]);var r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);var n=new THREE.BufferGeometry;n.addAttribute("position",new THREE.BufferAttribute(t,3));n.addAttribute("color",new THREE.BufferAttribute(r,3));var i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,n,i)};THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;THREE.ArrowHelper=function(){var e=new THREE.BufferGeometry;e.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,1,0],3));var t=new THREE.CylinderBufferGeometry(0,.5,1,5,1);t.translate(0,-.5,0);return function r(n,i,a,o,s,c){THREE.Object3D.call(this);if(o===undefined)o=16776960;if(a===undefined)a=1;if(s===undefined)s=.2*a;if(c===undefined)c=.2*s;this.position.copy(i);this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:o}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:o}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(n);this.setLength(a,s,c)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;THREE.ArrowHelper.prototype.setDirection=function(){var e=new THREE.Vector3;var t;return function r(n){if(n.y>.99999){this.quaternion.set(0,0,0,1)}else if(n.y<-.99999){this.quaternion.set(1,0,0,0)}else{e.set(n.z,0,-n.x).normalize();t=Math.acos(n.y);this.quaternion.setFromAxisAngle(e,t)}}}();THREE.ArrowHelper.prototype.setLength=function(e,t,r){if(t===undefined)t=.2*e;if(r===undefined)r=.2*t;this.line.scale.set(1,Math.max(0,e-t),1);this.line.updateMatrix();this.cone.scale.set(r,t,r);this.cone.position.y=e;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.copy(e);this.cone.material.color.copy(e)};THREE.BoxHelper=function(e){var t=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var r=new Float32Array(8*3);var n=new THREE.BufferGeometry;n.setIndex(new THREE.BufferAttribute(t,1));n.addAttribute("position",new THREE.BufferAttribute(r,3));THREE.LineSegments.call(this,n,new THREE.LineBasicMaterial({color:16776960}));if(e!==undefined){this.update(e)}};THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;THREE.BoxHelper.prototype.update=function(){var e=new THREE.Box3;return function(t){if(t instanceof THREE.Box3){e.copy(t)}else{e.setFromObject(t)}if(e.isEmpty())return;var r=e.min;var n=e.max;var i=this.geometry.attributes.position;var a=i.array;a[0]=n.x;a[1]=n.y;a[2]=n.z;a[3]=r.x;a[4]=n.y;a[5]=n.z;a[6]=r.x;a[7]=r.y;a[8]=n.z;a[9]=n.x;a[10]=r.y;a[11]=n.z;a[12]=n.x;a[13]=n.y;a[14]=r.z;a[15]=r.x;a[16]=n.y;a[17]=r.z;a[18]=r.x;a[19]=r.y;a[20]=r.z;a[21]=n.x;a[22]=r.y;a[23]=r.z;i.needsUpdate=true;this.geometry.computeBoundingSphere()}}();THREE.BoundingBoxHelper=function(e,t){var r=t!==undefined?t:8947848;this.object=e;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:true}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(e){var t=new THREE.Geometry;var r=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});var n={};var i=16755200;var a=16711680;var o=43775;var s=16777215;var c=3355443;u("n1","n2",i);u("n2","n4",i);u("n4","n3",i);u("n3","n1",i);u("f1","f2",i);u("f2","f4",i);u("f4","f3",i);u("f3","f1",i);u("n1","f1",i);u("n2","f2",i);u("n3","f3",i);u("n4","f4",i);u("p","n1",a);u("p","n2",a);u("p","n3",a);u("p","n4",a);u("u1","u2",o);u("u2","u3",o);u("u3","u1",o);u("c","t",s);u("p","c",c);u("cn1","cn2",c);u("cn3","cn4",c);u("cf1","cf2",c);u("cf3","cf4",c);function u(e,t,r){l(e,r);l(t,r)}function l(e,r){t.vertices.push(new THREE.Vector3);t.colors.push(new THREE.Color(r));if(n[e]===undefined){n[e]=[]}n[e].push(t.vertices.length-1)}THREE.LineSegments.call(this,t,r);this.camera=e;this.camera.updateProjectionMatrix();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=n;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;THREE.CameraHelper.prototype.update=function(){var e,t;var r=new THREE.Vector3;var n=new THREE.Camera;function i(i,a,o,s){r.set(a,o,s).unproject(n);var c=t[i];if(c!==undefined){for(var u=0,l=c.length;u<l;u++){e.vertices[c[u]].copy(r)}}}return function(){e=this.geometry;t=this.pointMap;var r=1,a=1;n.projectionMatrix.copy(this.camera.projectionMatrix);i("c",0,0,-1);i("t",0,0,1);i("n1",-r,-a,-1);i("n2",r,-a,-1);i("n3",-r,a,-1);i("n4",r,a,-1);i("f1",-r,-a,1);i("f2",r,-a,1);i("f3",-r,a,1);i("f4",r,a,1);i("u1",r*.7,a*1.1,-1);i("u2",-r*.7,a*1.1,-1);i("u3",0,a*2,-1);i("cf1",-r,0,1);i("cf2",r,0,1);i("cf3",0,-a,1);i("cf4",0,a,1);i("cn1",-r,0,-1);i("cn2",r,0,-1);i("cn3",0,-a,-1);i("cn4",0,a,-1);e.verticesNeedUpdate=true}}();THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;if(t===undefined)t=1;var r=new THREE.BufferGeometry;r.addAttribute("position",new THREE.Float32Attribute([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var n=new THREE.LineBasicMaterial({fog:false});this.add(new THREE.Line(r,n));r=new THREE.BufferGeometry;r.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,0,1],3));this.add(new THREE.Line(r,n));this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;THREE.DirectionalLightHelper.prototype.dispose=function(){var e=this.children[0];var t=this.children[1];e.geometry.dispose();e.material.dispose();t.geometry.dispose();t.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var r=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld);t.setFromMatrixPosition(this.light.target.matrixWorld);r.subVectors(t,e);var n=this.children[0];var i=this.children[1];n.lookAt(r);n.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);i.lookAt(r);i.scale.z=r.length()}}();THREE.EdgesHelper=function(e,t,r){var n=t!==undefined?t:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(e.geometry,r),new THREE.LineBasicMaterial({color:n}));this.matrix=e.matrixWorld;this.matrixAutoUpdate=false};THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;THREE.FaceNormalsHelper=function(e,t,r,n){this.object=e;this.size=t!==undefined?t:1;var i=r!==undefined?r:16776960;var a=n!==undefined?n:1;var o=0;var s=this.object.geometry;if(s instanceof THREE.Geometry){o=s.faces.length}else{console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.")}var c=new THREE.BufferGeometry;var u=new THREE.Float32Attribute(o*2*3,3);c.addAttribute("position",u);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:i,linewidth:a}));this.matrixAutoUpdate=false;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;THREE.FaceNormalsHelper.prototype.update=function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var r=new THREE.Matrix3;return function n(){this.object.updateMatrixWorld(true);r.getNormalMatrix(this.object.matrixWorld);var n=this.object.matrixWorld;var i=this.geometry.attributes.position;var a=this.object.geometry;var o=a.vertices;var s=a.faces;var c=0;for(var u=0,l=s.length;u<l;u++){var h=s[u];var f=h.normal;e.copy(o[h.a]).add(o[h.b]).add(o[h.c]).divideScalar(3).applyMatrix4(n);t.copy(f).applyMatrix3(r).normalize().multiplyScalar(this.size).add(e);i.setXYZ(c,e.x,e.y,e.z);c=c+1;i.setXYZ(c,t.x,t.y,t.z);c=c+1}i.needsUpdate=true;return this}}();THREE.GridHelper=function(e,t,r,n){r=new THREE.Color(r!==undefined?r:4473924);n=new THREE.Color(n!==undefined?n:8947848);var i=[];var a=[];for(var o=-e,s=0;o<=e;o+=t){i.push(-e,0,o,e,0,o);i.push(o,0,-e,o,0,e);var c=o===0?r:n;c.toArray(a,s);s+=3;c.toArray(a,s);s+=3;c.toArray(a,s);
s+=3;c.toArray(a,s);s+=3}var u=new THREE.BufferGeometry;u.addAttribute("position",new THREE.Float32Attribute(i,3));u.addAttribute("color",new THREE.Float32Attribute(a,3));var l=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,u,l)};THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};THREE.HemisphereLightHelper=function(e,t){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.colors=[new THREE.Color,new THREE.Color];var r=new THREE.SphereGeometry(t,4,2);r.rotateX(-Math.PI/2);for(var n=0,i=8;n<i;n++){r.faces[n].color=this.colors[n<4?0:1]}var a=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:true});this.lightSphere=new THREE.Mesh(r,a);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=true}}();THREE.PointLightHelper=function(e,t){this.light=e;this.light.updateMatrixWorld();var r=new THREE.SphereBufferGeometry(t,4,2);var n=new THREE.MeshBasicMaterial({wireframe:true,fog:false});n.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,r,n);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(e){this.bones=this.getBoneList(e);var t=new THREE.Geometry;for(var r=0;r<this.bones.length;r++){var n=this.bones[r];if(n.parent instanceof THREE.Bone){t.vertices.push(new THREE.Vector3);t.vertices.push(new THREE.Vector3);t.colors.push(new THREE.Color(0,0,1));t.colors.push(new THREE.Color(0,1,0))}}t.dynamic=true;var i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:false,depthWrite:false,transparent:true});THREE.LineSegments.call(this,t,i);this.root=e;this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(e){var t=[];if(e instanceof THREE.Bone){t.push(e)}for(var r=0;r<e.children.length;r++){t.push.apply(t,this.getBoneList(e.children[r]))}return t};THREE.SkeletonHelper.prototype.update=function(){var e=this.geometry;var t=(new THREE.Matrix4).getInverse(this.root.matrixWorld);var r=new THREE.Matrix4;var n=0;for(var i=0;i<this.bones.length;i++){var a=this.bones[i];if(a.parent instanceof THREE.Bone){r.multiplyMatrices(t,a.matrixWorld);e.vertices[n].setFromMatrixPosition(r);r.multiplyMatrices(t,a.parent.matrixWorld);e.vertices[n+1].setFromMatrixPosition(r);n+=2}}e.verticesNeedUpdate=true;e.computeBoundingSphere()};THREE.SpotLightHelper=function(e){THREE.Object3D.call(this);this.light=e;this.light.updateMatrixWorld();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;var t=new THREE.BufferGeometry;var r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var n=0,i=1,a=32;n<a;n++,i++){var o=n/a*Math.PI*2;var s=i/a*Math.PI*2;r.push(Math.cos(o),Math.sin(o),1,Math.cos(s),Math.sin(s),1)}t.addAttribute("position",new THREE.Float32Attribute(r,3));var c=new THREE.LineBasicMaterial({fog:false});this.cone=new THREE.LineSegments(t,c);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3;var t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e3;var n=r*Math.tan(this.light.angle);this.cone.scale.set(n,n,r);e.setFromMatrixPosition(this.light.matrixWorld);t.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(t.sub(e));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(e,t,r,n){this.object=e;this.size=t!==undefined?t:1;var i=r!==undefined?r:16711680;var a=n!==undefined?n:1;var o=0;var s=this.object.geometry;if(s instanceof THREE.Geometry){o=s.faces.length*3}else if(s instanceof THREE.BufferGeometry){o=s.attributes.normal.count}var c=new THREE.BufferGeometry;var u=new THREE.Float32Attribute(o*2*3,3);c.addAttribute("position",u);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:i,linewidth:a}));this.matrixAutoUpdate=false;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;THREE.VertexNormalsHelper.prototype.update=function(){var e=new THREE.Vector3;var t=new THREE.Vector3;var r=new THREE.Matrix3;return function n(){var n=["a","b","c"];this.object.updateMatrixWorld(true);r.getNormalMatrix(this.object.matrixWorld);var i=this.object.matrixWorld;var a=this.geometry.attributes.position;var o=this.object.geometry;if(o instanceof THREE.Geometry){var s=o.vertices;var c=o.faces;var u=0;for(var l=0,h=c.length;l<h;l++){var f=c[l];for(var d=0,p=f.vertexNormals.length;d<p;d++){var E=s[f[n[d]]];var m=f.vertexNormals[d];e.copy(E).applyMatrix4(i);t.copy(m).applyMatrix3(r).normalize().multiplyScalar(this.size).add(e);a.setXYZ(u,e.x,e.y,e.z);u=u+1;a.setXYZ(u,t.x,t.y,t.z);u=u+1}}}else if(o instanceof THREE.BufferGeometry){var v=o.attributes.position;var g=o.attributes.normal;var u=0;for(var d=0,p=v.count;d<p;d++){e.set(v.getX(d),v.getY(d),v.getZ(d)).applyMatrix4(i);t.set(g.getX(d),g.getY(d),g.getZ(d));t.applyMatrix3(r).normalize().multiplyScalar(this.size).add(e);a.setXYZ(u,e.x,e.y,e.z);u=u+1;a.setXYZ(u,t.x,t.y,t.z);u=u+1}}a.needsUpdate=true;return this}}();THREE.WireframeHelper=function(e,t){var r=t!==undefined?t:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(e.geometry),new THREE.LineBasicMaterial({color:r}));this.matrix=e.matrixWorld;this.matrixAutoUpdate=false};THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(e){THREE.Object3D.call(this);this.material=e;this.render=function(e){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t);this.animationsMap={};this.animationsList=[];var r=this.geometry.morphTargets.length;var n="__default";var i=0;var a=r-1;var o=r/1;this.createAnimation(n,i,a,o);this.setAnimationWeight(n,1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,n){var i={start:t,end:r,length:r-t+1,fps:n,duration:(r-t)/n,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[e]=i;this.animationsList.push(i)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){var t=/([a-z]+)_?(\d+)/i;var r,n={};var i=this.geometry;for(var a=0,o=i.morphTargets.length;a<o;a++){var s=i.morphTargets[a];var c=s.name.match(t);if(c&&c.length>1){var u=c[1];if(!n[u])n[u]={start:Infinity,end:-Infinity};var l=n[u];if(a<l.start)l.start=a;if(a>l.end)l.end=a;if(!r)r=u}}for(var u in n){var l=n[u];this.createAnimation(u,l.start,l.end,e)}this.firstAnimation=r};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];if(t){t.direction=1;t.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];if(t){t.direction=-1;t.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];if(r){r.fps=t;r.duration=(r.end-r.start)/r.fps}};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];if(r){r.duration=t;r.fps=(r.end-r.start)/r.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];if(r){r.weight=t}};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];if(r){r.time=t}};THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;var r=this.animationsMap[e];if(r){t=r.time}return t};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;var r=this.animationsMap[e];if(r){t=r.duration}return t};THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];if(t){t.time=0;t.active=true}else{console.warn("THREE.MorphBlendMesh: animation["+e+"] undefined in .playAnimation()")}};THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];if(t){t.active=false}};THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;t<r;t++){var n=this.animationsList[t];if(!n.active)continue;var i=n.duration/n.length;n.time+=n.direction*e;if(n.mirroredLoop){if(n.time>n.duration||n.time<0){n.direction*=-1;if(n.time>n.duration){n.time=n.duration;n.directionBackwards=true}if(n.time<0){n.time=0;n.directionBackwards=false}}}else{n.time=n.time%n.duration;if(n.time<0)n.time+=n.duration}var a=n.start+THREE.Math.clamp(Math.floor(n.time/i),0,n.length-1);var o=n.weight;if(a!==n.currentFrame){this.morphTargetInfluences[n.lastFrame]=0;this.morphTargetInfluences[n.currentFrame]=1*o;this.morphTargetInfluences[a]=0;n.lastFrame=n.currentFrame;n.currentFrame=a}var s=n.time%i/i;if(n.directionBackwards)s=1-s;if(n.currentFrame!==n.lastFrame){this.morphTargetInfluences[n.currentFrame]=s*o;this.morphTargetInfluences[n.lastFrame]=(1-s)*o}else{this.morphTargetInfluences[n.currentFrame]=o}}};THREE.OrbitControls=function(e,t){this.object=e;this.domElement=t!==undefined?t:document;this.enabled=true;this.target=new THREE.Vector3;this.minDistance=0;this.maxDistance=Infinity;this.minZoom=0;this.maxZoom=Infinity;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minAzimuthAngle=-Infinity;this.maxAzimuthAngle=Infinity;this.enableDamping=false;this.dampingFactor=.25;this.enableZoom=true;this.zoomSpeed=1;this.enableRotate=true;this.rotateSpeed=1;this.enablePan=true;this.keyPanSpeed=7;this.autoRotate=false;this.autoRotateSpeed=2;this.enableKeys=true;this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40};this.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT};this.target0=this.target.clone();this.position0=this.object.position.clone();this.zoom0=this.object.zoom;this.getPolarAngle=function(){return h.phi};this.getAzimuthalAngle=function(){return h.theta};this.reset=function(){r.target.copy(r.target0);r.object.position.copy(r.position0);r.object.zoom=r.zoom0;r.object.updateProjectionMatrix();r.dispatchEvent(a);r.update();u=c.NONE};this.update=function(){var t=new THREE.Vector3;var o=(new THREE.Quaternion).setFromUnitVectors(e.up,new THREE.Vector3(0,1,0));var s=o.clone().inverse();var m=new THREE.Vector3;var v=new THREE.Quaternion;return function g(){if(r){var e=r.deviceOrientation.alpha?THREE.Math.degToRad(r.deviceOrientation.alpha):0;var g=r.deviceOrientation.beta?THREE.Math.degToRad(r.deviceOrientation.beta):0;var T=r.deviceOrientation.gamma?THREE.Math.degToRad(r.deviceOrientation.gamma):0;var y=r.screenOrientation?THREE.Math.degToRad(r.screenOrientation):0;var R=(new THREE.Quaternion).copy(r.object.quaternion);w(R,e,g,T,y);var x=S(R.x,R.y,R.z,R.w);var H=180/Math.PI;C(i-x.z);i=x.z;P(n-x.y);n=x.y}var b=r.object.position;t.copy(b).sub(r.target);t.applyQuaternion(o);h.setFromVector3(t);if(r.autoRotate&&u===c.NONE){C(L())}h.theta+=f.theta;h.phi+=f.phi;h.theta=Math.max(r.minAzimuthAngle,Math.min(r.maxAzimuthAngle,h.theta));h.phi=Math.max(r.minPolarAngle,Math.min(r.maxPolarAngle,h.phi));h.makeSafe();h.radius*=d;h.radius=Math.max(r.minDistance,Math.min(r.maxDistance,h.radius));r.target.add(p);t.setFromSpherical(h);t.applyQuaternion(s);b.copy(r.target).add(t);r.object.lookAt(r.target);if(r.enableDamping===true){f.theta*=1-r.dampingFactor;f.phi*=1-r.dampingFactor}else{f.set(0,0,0)}d=1;p.set(0,0,0);if(E||m.distanceToSquared(r.object.position)>l||8*(1-v.dot(r.object.quaternion))>l){r.dispatchEvent(a);m.copy(r.object.position);v.copy(r.object.quaternion);E=false;return true}return false}}();this.dispose=function(){r.domElement.removeEventListener("contextmenu",ce,false);r.domElement.removeEventListener("mousedown",ee,false);r.domElement.removeEventListener("wheel",ne,false);r.domElement.removeEventListener("touchstart",ae,false);r.domElement.removeEventListener("touchend",se,false);r.domElement.removeEventListener("touchmove",oe,false);document.removeEventListener("mousemove",te,false);document.removeEventListener("mouseup",re,false);window.removeEventListener("keydown",ie,false)};var r=this;var n=0;var i=0;this.deviceOrientation={};var a={type:"change"};var o={type:"start"};var s={type:"end"};var c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5};var u=c.NONE;var l=1e-6;var h=new THREE.Spherical;var f=new THREE.Spherical;var d=1;var p=new THREE.Vector3;var E=false;var m=new THREE.Vector2;var v=new THREE.Vector2;var g=new THREE.Vector2;var T=new THREE.Vector2;var y=new THREE.Vector2;var R=new THREE.Vector2;var x=new THREE.Vector2;var H=new THREE.Vector2;var b=new THREE.Vector2;function _(e){r.deviceOrientation=e}window.parent.addEventListener("deviceorientation",_,false);function M(e){r.screenOrientation=window.parent.orientation||0}window.parent.addEventListener("orientationchange",M,false);var w=function(){var e=new THREE.Vector3(0,0,1);var t=new THREE.Euler;var r=new THREE.Quaternion;var n=new THREE.Quaternion(-Math.sqrt(.5),0,0,Math.sqrt(.5));return function(i,a,o,s,c){t.set(o,a,-s,"YXZ");i.setFromEuler(t);i.multiply(n);i.multiply(r.setFromAxisAngle(e,-c))}}();function S(e,t,r,n){var i,a,o;var s=e*t+r*n;if(s>.499){o=2*Math.atan2(e,n);i=Math.PI/2;a=0;var c=new THREE.Vector3(i,a,o);return c}if(s<-.499){o=-2*Math.atan2(e,n);i=-Math.PI/2;a=0;var c=new THREE.Vector3(i,a,o);return c}var u=e*e;var l=t*t;var h=r*r;o=Math.atan2(2*t*n-2*e*r,1-2*l-2*h);i=Math.asin(2*s);a=Math.atan2(2*e*n-2*t*r,1-2*u-2*h);var c=new THREE.Vector3(i,a,o);return c}function L(){return 2*Math.PI/60/60*r.autoRotateSpeed}function A(){return Math.pow(.95,r.zoomSpeed)}function C(e){f.theta-=e}function P(e){f.phi-=e}var I=function(){var e=new THREE.Vector3;return function t(r,n){e.setFromMatrixColumn(n,0);e.multiplyScalar(-r);p.add(e)}}();var B=function(){var e=new THREE.Vector3;return function t(r,n){e.setFromMatrixColumn(n,1);e.multiplyScalar(r);p.add(e)}}();var D=function(){var e=new THREE.Vector3;return function t(n,i){var a=r.domElement===document?r.domElement.body:r.domElement;if(r.object instanceof THREE.PerspectiveCamera){var o=r.object.position;e.copy(o).sub(r.target);var s=e.length();s*=Math.tan(r.object.fov/2*Math.PI/180);I(2*n*s/a.clientHeight,r.object.matrix);B(2*i*s/a.clientHeight,r.object.matrix)}else if(r.object instanceof THREE.OrthographicCamera){I(n*(r.object.right-r.object.left)/r.object.zoom/a.clientWidth,r.object.matrix);B(i*(r.object.top-r.object.bottom)/r.object.zoom/a.clientHeight,r.object.matrix)}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.");r.enablePan=false}}}();function U(e){if(r.object instanceof THREE.PerspectiveCamera){d/=e}else if(r.object instanceof THREE.OrthographicCamera){r.object.zoom=Math.max(r.minZoom,Math.min(r.maxZoom,r.object.zoom*e));r.object.updateProjectionMatrix();E=true}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.");r.enableZoom=false}}function O(e){if(r.object instanceof THREE.PerspectiveCamera){d*=e}else if(r.object instanceof THREE.OrthographicCamera){r.object.zoom=Math.max(r.minZoom,Math.min(r.maxZoom,r.object.zoom/e));r.object.updateProjectionMatrix();E=true}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.");r.enableZoom=false}}function F(e){m.set(e.clientX,e.clientY)}function N(e){x.set(e.clientX,e.clientY)}function V(e){T.set(e.clientX,e.clientY)}function G(e){v.set(e.clientX,e.clientY);g.subVectors(v,m);var t=r.domElement===document?r.domElement.body:r.domElement;C(2*Math.PI*g.x/t.clientWidth*r.rotateSpeed);P(2*Math.PI*g.y/t.clientHeight*r.rotateSpeed);m.copy(v);r.update()}function z(e){H.set(e.clientX,e.clientY);b.subVectors(H,x);if(b.y>0){U(A())}else if(b.y<0){O(A())}x.copy(H);r.update()}function k(e){y.set(e.clientX,e.clientY);R.subVectors(y,T);D(R.x,R.y);T.copy(y);r.update()}function j(e){}function W(e){if(e.deltaY<0){O(A())}else if(e.deltaY>0){U(A())}r.update()}function X(e){switch(e.keyCode){case r.keys.UP:D(0,r.keyPanSpeed);r.update();break;case r.keys.BOTTOM:D(0,-r.keyPanSpeed);r.update();break;case r.keys.LEFT:D(r.keyPanSpeed,0);r.update();break;case r.keys.RIGHT:D(-r.keyPanSpeed,0);r.update();break}}function Y(e){m.set(e.touches[0].pageX,e.touches[0].pageY)}function q(e){var t=e.touches[0].pageX-e.touches[1].pageX;var r=e.touches[0].pageY-e.touches[1].pageY;var n=Math.sqrt(t*t+r*r);x.set(0,n)}function Z(e){T.set(e.touches[0].pageX,e.touches[0].pageY)}function K(e){v.set(e.touches[0].pageX,e.touches[0].pageY);g.subVectors(v,m);var t=r.domElement===document?r.domElement.body:r.domElement;C(2*Math.PI*g.x/t.clientWidth*r.rotateSpeed);P(2*Math.PI*g.y/t.clientHeight*r.rotateSpeed);m.copy(v);r.update()}function Q(e){var t=e.touches[0].pageX-e.touches[1].pageX;var n=e.touches[0].pageY-e.touches[1].pageY;var i=Math.sqrt(t*t+n*n);H.set(0,i);b.subVectors(H,x);if(b.y>0){O(A())}else if(b.y<0){U(A())}x.copy(H);r.update()}function J(e){y.set(e.touches[0].pageX,e.touches[0].pageY);R.subVectors(y,T);D(R.x,R.y);T.copy(y);r.update()}function $(e){}function ee(e){if(r.enabled===false)return;e.preventDefault();if(e.button===r.mouseButtons.ORBIT){if(r.enableRotate===false)return;F(e);u=c.ROTATE}else if(e.button===r.mouseButtons.ZOOM){if(r.enableZoom===false)return;N(e);u=c.DOLLY}else if(e.button===r.mouseButtons.PAN){if(r.enablePan===false)return;V(e);u=c.PAN}if(u!==c.NONE){document.addEventListener("mousemove",te,false);document.addEventListener("mouseup",re,false);r.dispatchEvent(o)}}function te(e){if(r.enabled===false)return;e.preventDefault();if(u===c.ROTATE){if(r.enableRotate===false)return;G(e)}else if(u===c.DOLLY){if(r.enableZoom===false)return;z(e)}else if(u===c.PAN){if(r.enablePan===false)return;k(e)}}function re(e){if(r.enabled===false)return;j(e);document.removeEventListener("mousemove",te,false);document.removeEventListener("mouseup",re,false);r.dispatchEvent(s);u=c.NONE}function ne(e){if(r.enabled===false||r.enableZoom===false||u!==c.NONE&&u!==c.ROTATE)return;e.preventDefault();e.stopPropagation();W(e);r.dispatchEvent(o);r.dispatchEvent(s)}function ie(e){if(r.enabled===false||r.enableKeys===false||r.enablePan===false)return;X(e)}function ae(e){if(r.enabled===false)return;switch(e.touches.length){case 1:if(r.enableRotate===false)return;Y(e);u=c.TOUCH_ROTATE;break;case 2:if(r.enableZoom===false)return;q(e);u=c.TOUCH_DOLLY;break;case 3:if(r.enablePan===false)return;Z(e);u=c.TOUCH_PAN;break;default:u=c.NONE}if(u!==c.NONE){r.dispatchEvent(o)}}function oe(e){if(r.enabled===false)return;e.preventDefault();e.stopPropagation();switch(e.touches.length){case 1:if(r.enableRotate===false)return;if(u!==c.TOUCH_ROTATE)return;K(e);break;case 2:if(r.enableZoom===false)return;if(u!==c.TOUCH_DOLLY)return;Q(e);break;case 3:if(r.enablePan===false)return;if(u!==c.TOUCH_PAN)return;J(e);break;default:u=c.NONE}}function se(e){if(r.enabled===false)return;$(e);r.dispatchEvent(s);u=c.NONE}function ce(e){e.preventDefault()}r.domElement.addEventListener("contextmenu",ce,false);r.domElement.addEventListener("mousedown",ee,false);r.domElement.addEventListener("wheel",ne,false);r.domElement.addEventListener("touchstart",ae,false);r.domElement.addEventListener("touchend",se,false);r.domElement.addEventListener("touchmove",oe,false);window.addEventListener("keydown",ie,false);this.update()};THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype);THREE.OrbitControls.prototype.constructor=THREE.OrbitControls;Object.defineProperties(THREE.OrbitControls.prototype,{center:{get:function(){console.warn("THREE.OrbitControls: .center has been renamed to .target");return this.target}},noZoom:{get:function(){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.");return!this.enableZoom},set:function(e){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.");this.enableZoom=!e}},noRotate:{get:function(){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.");return!this.enableRotate},set:function(e){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.");this.enableRotate=!e}},noPan:{get:function(){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.");return!this.enablePan},set:function(e){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.");this.enablePan=!e}},noKeys:{get:function(){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.");return!this.enableKeys},set:function(e){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.");this.enableKeys=!e}},staticMoving:{get:function(){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.");return!this.enableDamping},set:function(e){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.");this.enableDamping=!e}},dynamicDampingFactor:{get:function(){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.");return this.dampingFactor},set:function(e){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.");this.dampingFactor=e}}});var camera,cameraB,scene,material,renderer,mesh,geometry,texture,controls,controlsB,width,height,ratio,mode=1,fov=45,vrVer=20170414;var cMode=false,canvas,ctx;var orbitDom;var vrFuc={isRender:true,isWindowResize:false,videoId:String("#"+polyvObject.vid),_2xWidth:0,_2xHeight:0,hasInitCanvas:false,hasInitVrView:false,vrW:0,parentWindowInner:0,videoContainerHeight:0,isScreenHeng:false,isFullScreen:false,init:function(){polyvObject("video").attr("crossorigin","anonymous");this.updateSize();if(cMode){fov=45;canvas=document.createElement("canvas");polyvObject(canvas).css({position:"absolute",top:0,left:0,"z-index":"-2"});ctx=canvas.getContext("2d");polyvObject("video").parent()[0].appendChild(canvas);texture=new THREE.Texture(canvas)}else{texture=new THREE.VideoTexture(polyvObject("video")[0]);texture.format=THREE.RGBFormat}texture.minFilter=THREE.LinearFilter;camera=new THREE.PerspectiveCamera(fov,ratio,1,1100);camera.position.z=50;cameraB=new THREE.PerspectiveCamera(fov,ratio,1,1100);cameraB.position.z=50;scene=new THREE.Scene;geometry=new THREE.SphereBufferGeometry(600,600,600);geometry.scale(-1,1,1);material=new THREE.MeshBasicMaterial({map:texture});mesh=new THREE.Mesh(geometry,material);scene.add(mesh);renderer=new THREE.WebGLRenderer;renderer.setPixelRatio(window.parent.devicePixelRatio);renderer.setSize(width,height);orbitDom=polyvObject(".mask")[0];controls=new THREE.OrbitControls(camera,orbitDom);controls.maxDistance=500;controlsB=new THREE.OrbitControls(cameraB,orbitDom);controlsB.maxDistance=500;polyvObject("#plv_container")[0].appendChild(renderer.domElement);this.animate()},getParentW:function(){var e=window.parent.innerWidth;return parseInt(e)},getParentH:function(){var e=window.parent.innerHeight;if(this.isFullScreen){e=window.parent.innerHeight}else{e=polyvObject("#plv_container").height()}return parseInt(e)},animate:function(){if(this.isRender==true||this.isWindowResize==true){window.requestAnimationFrame(this.animate.bind(this));this.update()}},start:function(){this.isRender=true;this.animate()},pause:function(){},stop:function(){},initCanvas:function(){var e=this;if(cMode){e._2xWidth=e.getParentW()*2;e._2xHeight=e.getParentH()*2;canvas.width=e._2xWidth;canvas.height=e._2xHeight;canvas.style.width=e._2xWidth/2+"px";canvas.style.height=e._2xHeight/2+"px"}},update:function(){if(cMode){if(!this.hasInitCanvas&&$("video")[0].videoWidth>0){this.hasInitCanvas=true;this.initCanvas()}ctx.drawImage($("video")[0],0,0,$("video")[0].videoWidth,$("video")[0].videoHeight,0,0,this._2xWidth,this._2xHeight);texture.needsUpdate=true}if(controls){controls.update()}if(controlsB){controlsB.update()}if(mode==1){camera.aspect=ratio;camera.updateProjectionMatrix();renderer.render(scene,camera);renderer.setViewport(0,0,width,height);renderer.setScissor(0,0,width,height);renderer.enableScissorTest(true)}else{camera.aspect=ratio;camera.updateProjectionMatrix();renderer.render(scene,camera);renderer.setViewport(0,0,width,height);renderer.setScissor(0,0,width,height);renderer.enableScissorTest(true);cameraB.aspect=ratio;cameraB.updateProjectionMatrix();renderer.render(scene,cameraB);renderer.setViewport(width,0,width,height);renderer.setScissor(width,0,width,height);renderer.enableScissorTest(true)}},updateSize:function(){width=this.getParentW()/mode;height=this.getParentH();ratio=width/height},changeMode:function(e){if(mode==e){return}mode=e;this.updateSize();camera.aspect=ratio;cameraB.aspect=ratio;camera.updateProjectionMatrix();cameraB.updateProjectionMatrix()},isIosWechat:function(){cMode=true},windowResize:function(){var e=this;if(window.parent.innerWidth>window.parent.innerHeight){e.isScreenHeng=true}else{e.isScreenHeng=false}if(polyvObject.isIOS()&&parseInt(polyvObject.iosVersion())>=10){setTimeout(function(){e.resizeParent()},200)}else{e.resizeParent()}},resizeParent:function(){var e=this;e.parentWindowInner=window.parent.innerWidth;this.updateSize();this.initCanvas();renderer.setSize(this.getParentW(),this.getParentH())}};polyvObject(window.parent).resize(function(){if(polyvObject.isAndroid()){if(window.parent.innerWidth>window.parent.innerHeight){window.parent.document.getElementsByName("polyvPlayer")[0].style.position="fixed"}else{window.parent.document.getElementsByName("polyvPlayer")[0].style.position="absolute"}}vrFuc.windowResize()});